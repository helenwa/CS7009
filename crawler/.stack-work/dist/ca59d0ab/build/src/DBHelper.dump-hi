
==================== FINAL INTERFACE ====================
2017-05-25 17:59:33.6152177 UTC

interface crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi:DBHelper [family instance module] 8002
  interface hash: dc207da978e13f4b0a9cceb2f74b55bc
  ABI hash: 82b52f85de350453c71aa5bcbf46f377
  export-list hash: 2b4169d841bd7d9d5a9f51e4e826cccd
  orphan hash: eb37cadd9e9b012308eb84d8785cf71a
  flag hash: b40c1800ca63765d1285c272fed17bef
  sig of: Nothing
  used TH splices: False
  where
exports:
  DBHelper.addAuth
  DBHelper.addLanguage
  DBHelper.addLink
  DBHelper.addRepo
  DBHelper.addUser
  DBHelper.allLanguages
  DBHelper.allLinks
  DBHelper.allRepo
  DBHelper.allUsers
  DBHelper.clearDB
  DBHelper.contributesTo
  DBHelper.getAuth
  DBHelper.langKnowledge
  DBHelper.langKnowledgeur
  DBHelper.linkRequest
  DBHelper.makeLink
  DBHelper.makeLink2
  DBHelper.n4password
  DBHelper.n4user
  DBHelper.owns
  DBHelper.recentKnowledge
  DBHelper.recentKnowledgeur
  DBHelper.recentLanguages
  DBHelper.sortDest
  DBHelper.toAuth
  DBHelper.toLang
  DBHelper.toLink
  DBHelper.toRankedLang
  DBHelper.toRepo
  DBHelper.toUser
  DBHelper.userLang
  DBHelper.userLanguageList
  DBHelper.userRepo
  DBHelper.Language{DBHelper.Language name value}
  DBHelper.LinkDB{DBHelper.LinkDB destination linkName linkType source}
  DBHelper.ListOb{DBHelper.ListOb links repos users}
  DBHelper.Log{DBHelper.Log number word}
  DBHelper.RepoDB{DBHelper.RepoDB recent repoLanguage repoName repoOwner repoSize}
  DBHelper.UserDB{DBHelper.UserDB userId}
module dependencies:
package dependencies: Win32-2.3.1.1@Win32-2.3.1.1
                      aeson-1.0.2.1@aeson-1.0.2.1-9NPC6B17ifJ9yEOgZnhnOr
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-HCAgpBrKCLJ5li8FbfXxE1
                      base-4.9.1.0
                      base-compat-0.9.1@base-compat-0.9.1-LCsIPF9jlXlGhbEFi39hJ1
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      data-binary-ieee754-0.4.4@data-binary-ieee754-0.4.4-7iiF2mP1jcB6tVSPgIyBOi
                      data-default-0.7.1.1@data-default-0.7.1.1-7EGYJX2YWqWJRbPFUHNoCr
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-FKnZBeovJMk4M89wQxDhjl
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa
                      hashable-1.2.5.0@hashable-1.2.5.0-F4MWeNuv2sjJRqBd2T5ul4
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      network-2.6.3.1@network-2.6.3.1-AwRxOQvT8JM9e8zDFK7aCI
                      network-simple-0.4.0.5@network-simple-0.4.0.5-lpFi9TIFmuDEctWkWAYkx
                      old-locale-1.0.0.7@old-locale-1.0.0.7-KGBP1BSKxH5GCm0LnZP04j
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      scientific-0.3.4.10@scientific-0.3.4.10-HRQd1hS6vMV6hvjSlMi8B0
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      transformers-0.5.2.0@transformers-0.5.2.0
                      unordered-containers-0.2.7.2@unordered-containers-0.2.7.2-8AmrySQXjRGF6VciYs51fM
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HCAgpBrKCLJ5li8FbfXxE1:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-HCAgpBrKCLJ5li8FbfXxE1:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-FKnZBeovJMk4M89wQxDhjl:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l:Data.Default.Instances.OldLocale
         hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt.Connection.Instances
         hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt.Value.Instances
         hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt.Value.Structure
         hashable-1.2.5.0@hashable-1.2.5.0-F4MWeNuv2sjJRqBd2T5ul4:Data.Hashable.Generic
         network-2.6.3.1@network-2.6.3.1-AwRxOQvT8JM9e8zDFK7aCI:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HCAgpBrKCLJ5li8FbfXxE1:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD:Data.DList
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.7.2@unordered-containers-0.2.7.2-8AmrySQXjRGF6VciYs51fM:Data.HashMap.Base
                         unordered-containers-0.2.7.2@unordered-containers-0.2.7.2-8AmrySQXjRGF6VciYs51fM:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-9NPC6B17ifJ9yEOgZnhnOr:Data.Aeson 6cfe60f124a4417e608c67dfe15be1cc
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-9NPC6B17ifJ9yEOgZnhnOr:Data.Aeson.Types.FromJSON 1316ab9121f85e92aaf36eaf294367ed
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-9NPC6B17ifJ9yEOgZnhnOr:Data.Aeson.Types.ToJSON c2651bbed32207695f964a66171d86f4
import  -/  base-4.9.1.0:Data.String 8a39929a33cd7a89c372ce2fbb5db4b0
import  -/  base-4.9.1.0:Data.Traversable 078621b399ac9374b02f3f2ce55a08e9
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Generics 87e8d511f978e043d53db008cc403901
import  -/  base-4.9.1.0:GHC.List d11eb227c1c6fbfd89bb781d72eaea0d
import  -/  base-4.9.1.0:GHC.Real b88ae4a48c079652623073a5bbf5c9b0
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  base-4.9.1.0:System.IO 5daf3f384209c11d9566e3409af8ec5d
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 6c2364c30285a1caa610caab304974c4
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base dfcca0a6b3fe956067f7db6df4d400c2
import  -/  data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD:Data.Default.Class eb34a89c3c97cabf779918371724abfb
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt bcfb1f0ed6fc3ef8a9ea59bd14776df9
import  -/  hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt.Connection 167a8d898814db0ab338a35b0f05a7cc
import  -/  hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt.Connection.Pipe 87ccd74918e3a2bfd23e1b268910563e
import  -/  hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt.Connection.Type 562780a0f7f22e89d08fbfb4c254af5b
import  -/  hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt.Record ebd56c4d00d4f4e5942b5450a32393b3
import  -/  hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt.Value.Type f2442e5ddf918d8851cddfb21c1496cb
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 5e60b761569ee353529e98a36b72df11
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text 35f976519564888082d42815342d42ed
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Internal 43a9166170aaf8c9b180c2d3ce2cfa3c
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show 638a81be9b7b5c261b714430eaada4e0
import  -/  vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector 41057de5dda7a4fc866a712aa88b5c4e
22fcaf89b0c8fd808eff81a7771c2399
  $fEqLanguage :: GHC.Classes.Eq DBHelper.Language
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.Language
                  DBHelper.$fEqLanguage_$c==
                  DBHelper.$fEqLanguage_$c/= -}
22fcaf89b0c8fd808eff81a7771c2399
  $fEqLanguage_$c/= ::
    DBHelper.Language -> DBHelper.Language -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: DBHelper.Language) (w1 :: DBHelper.Language) ->
                 case w of ww { DBHelper.Language ww1 ww2 ->
                 case w1 of ww3 { DBHelper.Language ww4 ww5 ->
                 DBHelper.$w$c/= ww1 ww2 ww4 ww5 } }) -}
22fcaf89b0c8fd808eff81a7771c2399
  $fEqLanguage_$c== ::
    DBHelper.Language -> DBHelper.Language -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: DBHelper.Language) (w1 :: DBHelper.Language) ->
                 case w of ww { DBHelper.Language ww1 ww2 ->
                 case w1 of ww3 { DBHelper.Language ww4 ww5 ->
                 DBHelper.$w$c== ww1 ww2 ww4 ww5 } }) -}
f71116c23fab4ac41f3dd6995e814421
  $fEqLinkDB :: GHC.Classes.Eq DBHelper.LinkDB
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.LinkDB
                  DBHelper.$fEqLinkDB_$c==
                  DBHelper.$fEqLinkDB_$c/= -}
f71116c23fab4ac41f3dd6995e814421
  $fEqLinkDB_$c/= ::
    DBHelper.LinkDB -> DBHelper.LinkDB -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLL),1*U(1*U(U),1*U,1*U,1*U)><S(S(S)LLL),1*U(1*U(U),1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: DBHelper.LinkDB) (b :: DBHelper.LinkDB) ->
                 case DBHelper.$fEqLinkDB_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
f71116c23fab4ac41f3dd6995e814421
  $fEqLinkDB_$c== ::
    DBHelper.LinkDB -> DBHelper.LinkDB -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LLL),1*U(1*U(U),1*U,1*U,1*U)><S(S(S)LLL),1*U(1*U(U),1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: DBHelper.LinkDB) (w1 :: DBHelper.LinkDB) ->
                 case w of ww { DBHelper.LinkDB ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Types.I# ww6 ->
                 case w1 of ww7 { DBHelper.LinkDB ww8 ww9 ww10 ww11 ->
                 case ww8 of ww12 { GHC.Types.I# ww13 ->
                 DBHelper.$w$c==1 ww6 ww2 ww3 ww4 ww13 ww9 ww10 ww11 } } } }) -}
f71116c23fab4ac41f3dd6995e814421
  $fEqListOb :: GHC.Classes.Eq DBHelper.ListOb
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.ListOb
                  DBHelper.$fEqListOb_$c==
                  DBHelper.$fEqListOb_$c/= -}
f71116c23fab4ac41f3dd6995e814421
  $fEqListOb_$c/= ::
    DBHelper.ListOb -> DBHelper.ListOb -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: DBHelper.ListOb) (b :: DBHelper.ListOb) ->
                 case DBHelper.$fEqListOb_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
f71116c23fab4ac41f3dd6995e814421
  $fEqListOb_$c== ::
    DBHelper.ListOb -> DBHelper.ListOb -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: DBHelper.ListOb) (w1 :: DBHelper.ListOb) ->
                 case w of ww { DBHelper.ListOb ww1 ww2 ww3 ->
                 case w1 of ww4 { DBHelper.ListOb ww5 ww6 ww7 ->
                 DBHelper.$w$c==2 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
3a02f93a20b244c7babce0966838c2bf
  $fEqLog :: GHC.Classes.Eq DBHelper.Log
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.Log DBHelper.$fEqLog_$c== DBHelper.$fEqLog_$c/= -}
3a02f93a20b244c7babce0966838c2bf
  $fEqLog_$c/= :: DBHelper.Log -> DBHelper.Log -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(U))><S(SL),1*U(1*U,1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: DBHelper.Log) (w1 :: DBHelper.Log) ->
                 case w of ww { DBHelper.Log ww1 ww2 ->
                 case w1 of ww3 { DBHelper.Log ww4 ww5 ->
                 DBHelper.$w$c/=1 ww1 ww2 ww4 ww5 } }) -}
3a02f93a20b244c7babce0966838c2bf
  $fEqLog_$c== :: DBHelper.Log -> DBHelper.Log -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(U))><S(SL),1*U(1*U,1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: DBHelper.Log) (w1 :: DBHelper.Log) ->
                 case w of ww { DBHelper.Log ww1 ww2 ->
                 case w1 of ww3 { DBHelper.Log ww4 ww5 ->
                 DBHelper.$w$c==4 ww1 ww2 ww4 ww5 } }) -}
11c665402619553a2690f82da4927c4a
  $fEqRepoDB :: GHC.Classes.Eq DBHelper.RepoDB
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.RepoDB
                  DBHelper.$fEqRepoDB_$c==
                  DBHelper.$fEqRepoDB_$c/= -}
11c665402619553a2690f82da4927c4a
  $fEqRepoDB_$c/= ::
    DBHelper.RepoDB -> DBHelper.RepoDB -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U(U),1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U(U),1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: DBHelper.RepoDB) (b :: DBHelper.RepoDB) ->
                 case DBHelper.$fEqRepoDB_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
11c665402619553a2690f82da4927c4a
  $fEqRepoDB_$c== ::
    DBHelper.RepoDB -> DBHelper.RepoDB -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U,1*U,1*U(U),1*U,1*U)><S(SLLLL),1*U(1*U,1*U,1*U(U),1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: DBHelper.RepoDB) (w1 :: DBHelper.RepoDB) ->
                 case w of ww { DBHelper.RepoDB ww1 ww2 ww3 ww4 ww5 ->
                 case w1 of ww6 { DBHelper.RepoDB ww7 ww8 ww9 ww10 ww11 ->
                 DBHelper.$w$c==3 ww1 ww2 ww3 ww4 ww5 ww7 ww8 ww9 ww10 ww11 } }) -}
9db0ea535878b612e683ecea61ecbd41
  $fEqUserDB :: GHC.Classes.Eq DBHelper.UserDB
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.UserDB
                  DBHelper.$fEqUserDB_$c==
                  DBHelper.$fEqUserDB_$c/= -}
9db0ea535878b612e683ecea61ecbd41
  $fEqUserDB_$c/= ::
    DBHelper.UserDB -> DBHelper.UserDB -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: DBHelper.UserDB) (b :: DBHelper.UserDB) ->
                 case a of wild { DBHelper.UserDB a1 ->
                 case b of wild1 { DBHelper.UserDB b1 ->
                 case GHC.Base.eqString a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } }) -}
9db0ea535878b612e683ecea61ecbd41
  $fEqUserDB_$c== ::
    DBHelper.UserDB -> DBHelper.UserDB -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: DBHelper.UserDB) (ds1 :: DBHelper.UserDB) ->
                 case ds of wild { DBHelper.UserDB a1 ->
                 case ds1 of wild1 { DBHelper.UserDB b1 ->
                 GHC.Base.eqString a1 b1 } }) -}
22fcaf89b0c8fd808eff81a7771c2399
  $fFromJSONLanguage ::
    Data.Aeson.Types.FromJSON.FromJSON DBHelper.Language
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.Language
                  DBHelper.$fFromJSONLanguage_$cparseJSON
                  DBHelper.$fFromJSONLanguage_$cparseJSONList -}
22fcaf89b0c8fd808eff81a7771c2399
  $fFromJSONLanguage1 ::
    [Data.Aeson.Types.Internal.Parser DBHelper.Language]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [DBHelper.Language] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
a3aec836eb70fa877fa311c4833b05d3
  $fFromJSONLanguage10 :: GHC.Generics.SingI ('GHC.Base.Just "name")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONLanguage11
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "name">_N) -}
a2deb9ec535431936eca9058619637f9
  $fFromJSONLanguage11 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "name")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "name")
                   @ "name"
                   @~ <'GHC.Base.Just "name">_N
                   DBHelper.$fFromJSONLanguage12
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"name">_N)) -}
034808b2932a284026fe8ebbf403d3ad
  $fFromJSONLanguage12 :: GHC.Generics.R:SingSymbols "name"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "name"
                   DBHelper.$fFromJSONLanguage13
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"name">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"name">_N))) -}
656ff9df7b4e8b615167bbbd06722427
  $fFromJSONLanguage13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "name"#) -}
37c71a37e4b008c5a688310a31a79c0f
  $fFromJSONLanguage2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "[a]"#) -}
13d808a5b666289fd19e4a8636f0f2c4
  $fFromJSONLanguage3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "Language"
               "DBHelper"
               "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
               'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "Language" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "name")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "value")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Integer.Type.Integer)))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "name")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "value")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                             a1)
                   = case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                     case ds6 of wild1 { DEFAULT ->
                     case x of wild2 {
                       DEFAULT
                       -> Data.Aeson.Types.FromJSON.typeMismatch
                            @ ((GHC.Generics.:*:)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "name")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String))
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "value")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                                 a1)
                            Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                            wild2
                       Data.Aeson.Types.Internal.Object obj
                       -> let {
                            m1 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "name")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String)
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "name")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                DBHelper.$fFromJSONLanguage_$s$fSelectorMetaMetaSel1
                                DBHelper.$fFromJSONLanguage9
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            e :: Data.Aeson.Types.Internal.Parser
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "value")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                      a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "value")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                                DBHelper.$fFromJSONLanguage_$s$fSelectorMetaMetaSel
                                DBHelper.$fFromJSONLanguage4
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Integer.Type.Integer>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          (\ @ (f :: * -> *)
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f r)
                             (ks :: Data.Aeson.Types.Internal.Success
                                      ((GHC.Generics.:*:)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "name")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String))
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "value")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                                         a1)
                                      f
                                      r) ->
                           m1
                             `cast`
                           (Data.Aeson.Types.Internal.N:Parser[0]
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "name")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                   a1>_R)
                             @ f
                             @ r
                             path
                             kf
                             (\ (a2 :: GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "name")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String)
                                         a1) ->
                              e `cast`
                              (Data.Aeson.Types.Internal.N:Parser[0]
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "value")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                      a1>_R)
                                @ f
                                @ r
                                path
                                kf
                                (\ (a3 :: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "value")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Integer.Type.Integer)
                                            a1) ->
                                 ks
                                   (GHC.Generics.:*:
                                      @ (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "name")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Base.String))
                                      @ (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "value")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                                      @ a1
                                      a2
                                      a3))))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <(GHC.Generics.:*:)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "name")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Base.String))
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "value")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                                       a1>_R)) } } }
                 } in
                 (\ @ (f9 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f9 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "Language"
                                   "DBHelper"
                                   "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                   'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Language" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "name")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                    GHC.Generics.:*: GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "value")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0
                                                          GHC.Integer.Type.Integer)))
                                a1)
                             f9
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "name")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "value")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                          a1>_R)
                    @ f9
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "name")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "value")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Integer.Type.Integer))
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.C>_P
                                      <'GHC.Generics.MetaCons
                                         "Language" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                      <GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "name")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String)
                                       GHC.Generics.:*: GHC.Generics.S1
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "value")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.Rec0
                                                             GHC.Integer.Type.Integer)>_R))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "Language"
                                         "DBHelper"
                                         "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Language" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "name")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "value")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0
                                                                GHC.Integer.Type.Integer))>_R)) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "Language"
                                 "DBHelper"
                                 "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "Language" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "name")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "value")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Integer.Type.Integer)))
                              a1>_R))) -}
940b045e94f14818844efef481a87f89
  $fFromJSONLanguage4 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ GHC.Integer.Type.Integer
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Data.Aeson.Types.FromJSON.$fFromJSONInteger
                   @ a1
                   w3) -}
87110772b1630af96f5e90a2ee3f6597
  $fFromJSONLanguage5 :: GHC.Generics.SingI ('GHC.Base.Just "value")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONLanguage6
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "value">_N) -}
394e6b8271c5d85d3ab1980a6213e75f
  $fFromJSONLanguage6 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "value")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "value")
                   @ "value"
                   @~ <'GHC.Base.Just "value">_N
                   DBHelper.$fFromJSONLanguage7
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"value">_N)) -}
fef54d4164ead483e3db05c3af50b7b7
  $fFromJSONLanguage7 :: GHC.Generics.R:SingSymbols "value"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "value"
                   DBHelper.$fFromJSONLanguage8
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"value">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"value">_N))) -}
3d47a0c0dcf7e49fa71ec56cf7a59e0a
  $fFromJSONLanguage8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "value"#) -}
6511ad3f41efdb34c25cf7c8b4d2e650
  $fFromJSONLanguage9 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [GHC.Types.Char]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   DBHelper.$fFromJSONLanguage_$s$fFromJSON[]
                   @ a1
                   w3) -}
22fcaf89b0c8fd808eff81a7771c2399
  $fFromJSONLanguage_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser DBHelper.Language
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "Language"
                                "DBHelper"
                                "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Language" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "name")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "value")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Integer.Type.Integer)))
                             GHC.Prim.Any)
                   = DBHelper.$fFromJSONLanguage3
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f9 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f9 r)
                    (ks :: Data.Aeson.Types.Internal.Success DBHelper.Language f9 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (DBHelper.Rep_Language[0])) <GHC.Prim.Any>_N))
                    @ f9
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep DBHelper.Language GHC.Prim.Any) ->
                     ks
                       (case a1
                               `cast`
                             (Trans
                                  (Sub (DBHelper.Rep_Language[0]))
                                  (Trans
                                       (GHC.Generics.N:M1[0]
                                            <GHC.Generics.D>_P
                                            <'GHC.Generics.MetaData
                                               "Language"
                                               "DBHelper"
                                               "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                               'GHC.Types.False>_P
                                            <GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "Language" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "name")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "value")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Integer.Type.Integer))>_R)
                                       (GHC.Generics.N:M1[0]
                                            <GHC.Generics.C>_P
                                            <'GHC.Generics.MetaCons
                                               "Language" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                            <GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "name")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "value")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Integer.Type.Integer)>_R)) <GHC.Prim.Any>_N) of wild { GHC.Generics.:*: ds ds1 ->
                        DBHelper.Language
                          ds
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "name")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                          ds1
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "value")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.Integer.Type.Integer>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P
                                    <GHC.Integer.Type.Integer>_R
                                    <GHC.Prim.Any>_P)) })))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <DBHelper.Language>_R))) -}
22fcaf89b0c8fd808eff81a7771c2399
  $fFromJSONLanguage_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [DBHelper.Language]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [DBHelper.Language]
                        DBHelper.$fFromJSONLanguage2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (DBHelper.$fFromJSONLanguage1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          DBHelper.$fFromJSONLanguage_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[DBHelper.Language]>_R)) } }) -}
41192d49974e283db32cdf99f2062698
  $fFromJSONLanguage_$s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON [GHC.Types.Char]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Char]
                  (Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON
                     @ GHC.Types.Char
                     Data.Aeson.Types.FromJSON.$fFromJSONChar)
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ GHC.Types.Char
                     Data.Aeson.Types.FromJSON.$fFromJSONChar) -}
a673aa8a85c13dc733687f55ed407640
  $fFromJSONLanguage_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "value")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "value")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONLanguage_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "value")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLanguage5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "value")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLanguage5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "value")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLanguage5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
74083312aca171c4bdc9a5dcbe1bb9fe
  $fFromJSONLanguage_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "name")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "name")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONLanguage_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "name")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLanguage10
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "name")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLanguage10
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "name")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLanguage10
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
1e8bb06941611b2166ed1ac136f64635
  $fFromJSONLanguage_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "value")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "value")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONLanguage8) -}
1c8f9cb556074ed69e67dd40a77b6e3f
  $fFromJSONLanguage_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "name")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "name")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONLanguage13) -}
22fcaf89b0c8fd808eff81a7771c2399
  $fFromJSONLanguage_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser DBHelper.Language]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
f71116c23fab4ac41f3dd6995e814421
  $fFromJSONLinkDB ::
    Data.Aeson.Types.FromJSON.FromJSON DBHelper.LinkDB
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.LinkDB
                  DBHelper.$fFromJSONLinkDB_$cparseJSON
                  DBHelper.$fFromJSONLinkDB_$cparseJSONList -}
f71116c23fab4ac41f3dd6995e814421
  $fFromJSONLinkDB1 ::
    [Data.Aeson.Types.Internal.Parser DBHelper.LinkDB]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [DBHelper.LinkDB] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
1be86e254b96ad91b4b4d7e6f5a09fa4
  $fFromJSONLinkDB10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "source"#) -}
cc67d5f728b97f8ce5c1f65c8bb87660
  $fFromJSONLinkDB11 ::
    GHC.Generics.SingI ('GHC.Base.Just "linkName")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONLinkDB12
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "linkName">_N) -}
57fe60c496abd85d2178856b02a4f2ce
  $fFromJSONLinkDB12 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "linkName")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "linkName")
                   @ "linkName"
                   @~ <'GHC.Base.Just "linkName">_N
                   DBHelper.$fFromJSONLinkDB13
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"linkName">_N)) -}
69747d6276c6ecb4b48b7ea5403a4814
  $fFromJSONLinkDB13 :: GHC.Generics.R:SingSymbols "linkName"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "linkName"
                   DBHelper.$fFromJSONLinkDB14
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"linkName">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"linkName">_N))) -}
9041ffc9d028ec040d6d6ace22e15f39
  $fFromJSONLinkDB14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "linkName"#) -}
40d727b2f1ff5697f583340bf6531e43
  $fFromJSONLinkDB15 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ GHC.Types.Int
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Data.Aeson.Types.FromJSON.$fFromJSONInt
                   @ a1
                   w3) -}
7bf085e5bfde3c0a93ac0ba017df8494
  $fFromJSONLinkDB16 ::
    GHC.Generics.SingI ('GHC.Base.Just "linkType")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONLinkDB17
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "linkType">_N) -}
3e3079eea7edc0e43fb00e81b9fa8a97
  $fFromJSONLinkDB17 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "linkType")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "linkType")
                   @ "linkType"
                   @~ <'GHC.Base.Just "linkType">_N
                   DBHelper.$fFromJSONLinkDB18
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"linkType">_N)) -}
2a29a22797e86d143eb1b806f0c64349
  $fFromJSONLinkDB18 :: GHC.Generics.R:SingSymbols "linkType"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "linkType"
                   DBHelper.$fFromJSONLinkDB19
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"linkType">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"linkType">_N))) -}
efe3281219e30b3b2e11b9f7ad455324
  $fFromJSONLinkDB19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "linkType"#) -}
23fb1e2e99988ee94f124c632188630e
  $fFromJSONLinkDB2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "LinkDB"
               "DBHelper"
               "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
               'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "linkType")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 GHC.Types.Int)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "linkName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "source")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "destination")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String))))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "linkType")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "linkName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "source")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "destination")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String))
                             a1)
                   = case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                     case ds6 of wild1 { DEFAULT ->
                     case x of wild2 {
                       DEFAULT
                       -> Data.Aeson.Types.FromJSON.typeMismatch
                            @ ((GHC.Generics.:*:)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "linkType")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "linkName")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String))
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "source")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "destination")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String))
                                 a1)
                            Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                            wild2
                       Data.Aeson.Types.Internal.Object obj
                       -> let {
                            m1 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "linkType")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Types.Int)
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "linkType")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel3
                                DBHelper.$fFromJSONLinkDB15
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            e :: Data.Aeson.Types.Internal.Parser
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "linkName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                      a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "linkName")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel2
                                DBHelper.$fFromJSONLanguage9
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            m2 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "source")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String)
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "source")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel1
                                DBHelper.$fFromJSONLanguage9
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            e1 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "destination")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String)
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "destination")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel
                                DBHelper.$fFromJSONLanguage9
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          (\ @ (f :: * -> *)
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f r)
                             (ks :: Data.Aeson.Types.Internal.Success
                                      ((GHC.Generics.:*:)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "linkType")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Types.Int)
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "linkName")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0 GHC.Base.String))
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "source")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "destination")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0 GHC.Base.String))
                                         a1)
                                      f
                                      r) ->
                           m1
                             `cast`
                           (Data.Aeson.Types.Internal.N:Parser[0]
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "linkType")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                   a1>_R)
                             @ f
                             @ r
                             path
                             kf
                             (\ (a2 :: GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "linkType")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Types.Int)
                                         a1) ->
                              e `cast`
                              (Data.Aeson.Types.Internal.N:Parser[0]
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "linkName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                      a1>_R)
                                @ f
                                @ r
                                path
                                kf
                                (\ (a3 :: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "linkName")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                            a1) ->
                                 let {
                                   a4 :: (GHC.Generics.:*:)
                                           (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "linkType")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Types.Int))
                                           (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "linkName")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String))
                                           a1
                                     {- Strictness: m -}
                                   = GHC.Generics.:*:
                                       @ (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "linkType")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Types.Int))
                                       @ (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "linkName")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String))
                                       @ a1
                                       a2
                                       a3
                                 } in
                                 m2
                                   `cast`
                                 (Data.Aeson.Types.Internal.N:Parser[0]
                                      <GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "source")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String)
                                         a1>_R)
                                   @ f
                                   @ r
                                   path
                                   kf
                                   (\ (a5 :: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "source")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0 GHC.Base.String)
                                               a1) ->
                                    e1
                                      `cast`
                                    (Data.Aeson.Types.Internal.N:Parser[0]
                                         <GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "destination")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                            a1>_R)
                                      @ f
                                      @ r
                                      path
                                      kf
                                      (\ (a6 :: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "destination")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.Rec0 GHC.Base.String)
                                                  a1) ->
                                       ks
                                         (GHC.Generics.:*:
                                            @ (GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "linkType")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Types.Int)
                                               GHC.Generics.:*: GHC.Generics.S1
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "linkName")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.Rec0
                                                                     GHC.Base.String))
                                            @ (GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "source")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String)
                                               GHC.Generics.:*: GHC.Generics.S1
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "destination")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.Rec0
                                                                     GHC.Base.String))
                                            @ a1
                                            a4
                                            (GHC.Generics.:*:
                                               @ (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "source")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))
                                               @ (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "destination")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))
                                               @ a1
                                               a5
                                               a6)))))))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <(GHC.Generics.:*:)
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "linkType")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Types.Int)
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "linkName")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 GHC.Base.String))
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "source")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Base.String)
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "destination")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 GHC.Base.String))
                                       a1>_R)) } } }
                 } in
                 (\ @ (f9 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f9 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "LinkDB"
                                   "DBHelper"
                                   "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                   'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   ((GHC.Generics.S1
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "linkType")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Types.Int)
                                     GHC.Generics.:*: GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "linkName")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Base.String))
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "source")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Base.String)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "destination")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Base.String))))
                                a1)
                             f9
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "linkType")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Int)
                           GHC.Generics.:*: GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "linkName")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "source")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String)
                           GHC.Generics.:*: GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "destination")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String))
                          a1>_R)
                    @ f9
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "linkType")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "linkName")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "source")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "destination")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.C>_P
                                      <'GHC.Generics.MetaCons
                                         "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                      <(GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "linkType")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Types.Int)
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "linkName")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 GHC.Base.String))
                                       GHC.Generics.:*: (GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "source")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 GHC.Base.String)
                                                         GHC.Generics.:*: GHC.Generics.S1
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "destination")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.Rec0
                                                                               GHC.Base.String))>_R))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "LinkDB"
                                         "DBHelper"
                                         "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         ((GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "linkType")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.Types.Int)
                                           GHC.Generics.:*: GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "linkName")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0 GHC.Base.String))
                                          GHC.Generics.:*: (GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "source")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0 GHC.Base.String)
                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "destination")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.Rec0
                                                                                  GHC.Base.String)))>_R)) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "LinkDB"
                                 "DBHelper"
                                 "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 ((GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "linkType")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Types.Int)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "linkName")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Base.String))
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "source")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Base.String)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "destination")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          GHC.Base.String))))
                              a1>_R))) -}
4e99106d471e1a38ae0a126aa9092edf
  $fFromJSONLinkDB3 ::
    GHC.Generics.SingI ('GHC.Base.Just "destination")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONLinkDB4
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "destination">_N) -}
617fe2575aa68f8312ebf254cf092790
  $fFromJSONLinkDB4 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "destination")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "destination")
                   @ "destination"
                   @~ <'GHC.Base.Just "destination">_N
                   DBHelper.$fFromJSONLinkDB5
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"destination">_N)) -}
2920a2dfe421c093ed6bc19ed118ca54
  $fFromJSONLinkDB5 :: GHC.Generics.R:SingSymbols "destination"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "destination"
                   DBHelper.$fFromJSONLinkDB6
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"destination">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"destination">_N))) -}
8c824fba0b37ae42210e652b116f468f
  $fFromJSONLinkDB6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "destination"#) -}
fa2493f9a08b6bf03c9b29a37440d58f
  $fFromJSONLinkDB7 :: GHC.Generics.SingI ('GHC.Base.Just "source")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONLinkDB8
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "source">_N) -}
1d304ef454f9c8e5517642eb4f805b56
  $fFromJSONLinkDB8 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "source")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "source")
                   @ "source"
                   @~ <'GHC.Base.Just "source">_N
                   DBHelper.$fFromJSONLinkDB9
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"source">_N)) -}
55ed0bfd1bcc47b68a90ecb6e3d7ef23
  $fFromJSONLinkDB9 :: GHC.Generics.R:SingSymbols "source"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "source"
                   DBHelper.$fFromJSONLinkDB10
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"source">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"source">_N))) -}
f71116c23fab4ac41f3dd6995e814421
  $fFromJSONLinkDB_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser DBHelper.LinkDB
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "LinkDB"
                                "DBHelper"
                                "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                ((GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "linkType")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "linkName")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String))
                                 GHC.Generics.:*: (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "source")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String)
                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just
                                                                            "destination")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         GHC.Base.String))))
                             GHC.Prim.Any)
                   = DBHelper.$fFromJSONLinkDB2
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f9 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f9 r)
                    (ks :: Data.Aeson.Types.Internal.Success DBHelper.LinkDB f9 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (DBHelper.Rep_LinkDB[0])) <GHC.Prim.Any>_N))
                    @ f9
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep DBHelper.LinkDB GHC.Prim.Any) ->
                     ks (DBHelper.$fFromJSONLinkDB_$cto @ GHC.Prim.Any a1)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <DBHelper.LinkDB>_R))) -}
f71116c23fab4ac41f3dd6995e814421
  $fFromJSONLinkDB_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [DBHelper.LinkDB]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [DBHelper.LinkDB]
                        DBHelper.$fFromJSONLanguage2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (DBHelper.$fFromJSONLinkDB1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          DBHelper.$fFromJSONLinkDB_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[DBHelper.LinkDB]>_R)) } }) -}
f71116c23fab4ac41f3dd6995e814421
  $fFromJSONLinkDB_$cto ::
    GHC.Generics.Rep DBHelper.LinkDB x -> DBHelper.LinkDB
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U),1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep DBHelper.LinkDB x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (DBHelper.Rep_LinkDB[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "LinkDB"
                                        "DBHelper"
                                        "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "linkType")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "linkName")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Base.String))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "source")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Base.String)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "destination")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Base.String)))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "linkType")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "linkName")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R GHC.Base.String))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "source")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R GHC.Base.String)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "destination")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              GHC.Base.String))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds1 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 case ds2 of wild2 { GHC.Generics.:*: ds5 ds6 ->
                 DBHelper.LinkDB
                   ds3
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "linkType")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                   ds4
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "linkName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds5
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "source")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds6
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "destination")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P)) } } }) -}
f7a618628d555c5ef64a70688377a963
  $fFromJSONLinkDB_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "destination")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "destination")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "destination")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "destination")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "destination")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
eda4b0fdfa0534f8e01a10260acc85aa
  $fFromJSONLinkDB_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "source")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "source")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "source")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB7
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "source")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB7
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "source")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB7
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
a1668f8748ca91b413e499552f407a7f
  $fFromJSONLinkDB_$s$fSelectorMetaMetaSel2 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "linkName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "linkName")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName2
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "linkName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB11
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "linkName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB11
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "linkName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB11
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
7e816f5e80f25f64dd74928f72f3db5f
  $fFromJSONLinkDB_$s$fSelectorMetaMetaSel3 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "linkType")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "linkType")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName3
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "linkType")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB16
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "linkType")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB16
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "linkType")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB16
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
650bf02d10b81c262b52d51f7e997ae0
  $fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "destination")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "destination")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONLinkDB6) -}
182fd2e09f41a6968a5ed01a18623703
  $fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "source")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "source")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONLinkDB10) -}
b412ac8f384e76fa0001da788413517d
  $fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName2 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "linkName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "linkName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONLinkDB14) -}
d9bd063d8596131d7b5ede62bef6cfe2
  $fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName3 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "linkType")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "linkType")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONLinkDB19) -}
f71116c23fab4ac41f3dd6995e814421
  $fFromJSONLinkDB_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser DBHelper.LinkDB]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
f71116c23fab4ac41f3dd6995e814421
  $fFromJSONListOb ::
    Data.Aeson.Types.FromJSON.FromJSON DBHelper.ListOb
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.ListOb
                  DBHelper.$fFromJSONListOb_$cparseJSON
                  DBHelper.$fFromJSONListOb_$cparseJSONList -}
f71116c23fab4ac41f3dd6995e814421
  $fFromJSONListOb1 ::
    [Data.Aeson.Types.Internal.Parser DBHelper.ListOb]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [DBHelper.ListOb] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
0329f1e0218e792065c83f15fe89942a
  $fFromJSONListOb10 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "repos")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "repos")
                   @ "repos"
                   @~ <'GHC.Base.Just "repos">_N
                   DBHelper.$fFromJSONListOb11
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"repos">_N)) -}
274344122a266e2bbffef6e9b247bdb5
  $fFromJSONListOb11 :: GHC.Generics.R:SingSymbols "repos"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "repos"
                   DBHelper.$fFromJSONListOb12
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"repos">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"repos">_N))) -}
f726070884d6950f8fe5b9bae5cb4631
  $fFromJSONListOb12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "repos"#) -}
22c402154d882b9db53a1924f637c098
  $fFromJSONListOb13 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [DBHelper.UserDB] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [DBHelper.UserDB]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   DBHelper.$fFromJSONListOb_$s$fFromJSON[]2
                   @ a1
                   w3) -}
16a9356c07701ee92b43d49e78e62330
  $fFromJSONListOb14 :: GHC.Generics.SingI ('GHC.Base.Just "users")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONListOb15
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "users">_N) -}
799e0e15d2a7074c4601c77df074f63c
  $fFromJSONListOb15 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "users")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "users")
                   @ "users"
                   @~ <'GHC.Base.Just "users">_N
                   DBHelper.$fFromJSONListOb16
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"users">_N)) -}
34a7d2f380002f7b50a8810fe1e781e8
  $fFromJSONListOb16 :: GHC.Generics.R:SingSymbols "users"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "users"
                   DBHelper.$fFromJSONListOb17
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"users">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"users">_N))) -}
86ac001d8dfdc51b0fa81e34e1fa1ed3
  $fFromJSONListOb17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "users"#) -}
f71116c23fab4ac41f3dd6995e814421
  $fFromJSONListOb2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "ListOb"
               "DBHelper"
               "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
               'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "ListOb" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "users")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 [DBHelper.UserDB])
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "repos")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 [DBHelper.RepoDB])
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "links")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 [DBHelper.LinkDB]))))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "users")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 [DBHelper.UserDB]))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "repos")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 [DBHelper.RepoDB])
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "links")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 [DBHelper.LinkDB]))
                             a1)
                   = case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                     case ds6 of wild1 { DEFAULT ->
                     case x of wild2 {
                       DEFAULT
                       -> Data.Aeson.Types.FromJSON.typeMismatch
                            @ ((GHC.Generics.:*:)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "users")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 [DBHelper.UserDB]))
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "repos")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 [DBHelper.RepoDB])
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "links")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 [DBHelper.LinkDB]))
                                 a1)
                            Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                            wild2
                       Data.Aeson.Types.Internal.Object obj
                       -> let {
                            m1 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "users")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 [DBHelper.UserDB])
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "users")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R [DBHelper.UserDB])
                                DBHelper.$fFromJSONListOb_$s$fSelectorMetaMetaSel2
                                DBHelper.$fFromJSONListOb13
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [DBHelper.UserDB]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            m2 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "repos")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 [DBHelper.RepoDB])
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "repos")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R [DBHelper.RepoDB])
                                DBHelper.$fFromJSONListOb_$s$fSelectorMetaMetaSel1
                                DBHelper.$fFromJSONListOb8
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [DBHelper.RepoDB]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            e :: Data.Aeson.Types.Internal.Parser
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "links")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 [DBHelper.LinkDB])
                                      a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "links")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R [DBHelper.LinkDB])
                                DBHelper.$fFromJSONListOb_$s$fSelectorMetaMetaSel
                                DBHelper.$fFromJSONListOb3
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [DBHelper.LinkDB]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          (\ @ (f :: * -> *)
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f r)
                             (ks :: Data.Aeson.Types.Internal.Success
                                      ((GHC.Generics.:*:)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "users")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 [DBHelper.UserDB]))
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "repos")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 [DBHelper.RepoDB])
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "links")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0 [DBHelper.LinkDB]))
                                         a1)
                                      f
                                      r) ->
                           m1
                             `cast`
                           (Data.Aeson.Types.Internal.N:Parser[0]
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "users")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 [DBHelper.UserDB])
                                   a1>_R)
                             @ f
                             @ r
                             path
                             kf
                             (\ (a2 :: GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "users")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 [DBHelper.UserDB])
                                         a1) ->
                              m2
                                `cast`
                              (Data.Aeson.Types.Internal.N:Parser[0]
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "repos")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 [DBHelper.RepoDB])
                                      a1>_R)
                                @ f
                                @ r
                                path
                                kf
                                (\ (a4 :: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "repos")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 [DBHelper.RepoDB])
                                            a1) ->
                                 e `cast`
                                 (Data.Aeson.Types.Internal.N:Parser[0]
                                      <GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "links")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 [DBHelper.LinkDB])
                                         a1>_R)
                                   @ f
                                   @ r
                                   path
                                   kf
                                   (\ (a3 :: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "links")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0 [DBHelper.LinkDB])
                                               a1) ->
                                    ks
                                      (GHC.Generics.:*:
                                         @ (GHC.Generics.M1
                                              GHC.Generics.S
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "users")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 [DBHelper.UserDB]))
                                         @ (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "repos")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 [DBHelper.RepoDB])
                                            GHC.Generics.:*: GHC.Generics.S1
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "links")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.Rec0
                                                                  [DBHelper.LinkDB]))
                                         @ a1
                                         a2
                                         (GHC.Generics.:*:
                                            @ (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "repos")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 [DBHelper.RepoDB]))
                                            @ (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "links")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 [DBHelper.LinkDB]))
                                            @ a1
                                            a4
                                            a3))))))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <(GHC.Generics.:*:)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "users")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 [DBHelper.UserDB]))
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "repos")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 [DBHelper.RepoDB])
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "links")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 [DBHelper.LinkDB]))
                                       a1>_R)) } } }
                 } in
                 (\ @ (f9 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f9 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "ListOb"
                                   "DBHelper"
                                   "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                   'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "ListOb" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "users")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 [DBHelper.UserDB])
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "repos")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 [DBHelper.RepoDB])
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just "links")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            [DBHelper.LinkDB]))))
                                a1)
                             f9
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "users")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 [DBHelper.UserDB]))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "repos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 [DBHelper.RepoDB])
                           GHC.Generics.:*: GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "links")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 [DBHelper.LinkDB]))
                          a1>_R)
                    @ f9
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "users")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 [DBHelper.UserDB]))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "repos")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 [DBHelper.RepoDB])
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "links")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 [DBHelper.LinkDB]))
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.C>_P
                                      <'GHC.Generics.MetaCons
                                         "ListOb" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                      <GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "users")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 [DBHelper.UserDB])
                                       GHC.Generics.:*: (GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "repos")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 [DBHelper.RepoDB])
                                                         GHC.Generics.:*: GHC.Generics.S1
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "links")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.Rec0
                                                                               [DBHelper.LinkDB]))>_R))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "ListOb"
                                         "DBHelper"
                                         "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "ListOb" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "users")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 [DBHelper.UserDB])
                                          GHC.Generics.:*: (GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "repos")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0 [DBHelper.RepoDB])
                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "links")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.Rec0
                                                                                  [DBHelper.LinkDB])))>_R)) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "ListOb"
                                 "DBHelper"
                                 "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "ListOb" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "users")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 [DBHelper.UserDB])
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "repos")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 [DBHelper.RepoDB])
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just "links")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          [DBHelper.LinkDB]))))
                              a1>_R))) -}
f71116c23fab4ac41f3dd6995e814421
  $fFromJSONListOb3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [DBHelper.LinkDB] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [DBHelper.LinkDB]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   DBHelper.$fFromJSONListOb_$s$fFromJSON[]
                   @ a1
                   w3) -}
6244f69143c864ffd4008a637f74a516
  $fFromJSONListOb4 :: GHC.Generics.SingI ('GHC.Base.Just "links")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONListOb5
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "links">_N) -}
eb2a7752e1ae29edcec68f4503702b87
  $fFromJSONListOb5 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "links")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "links")
                   @ "links"
                   @~ <'GHC.Base.Just "links">_N
                   DBHelper.$fFromJSONListOb6
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"links">_N)) -}
520c7104087dab6df2c941739f164a1d
  $fFromJSONListOb6 :: GHC.Generics.R:SingSymbols "links"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "links"
                   DBHelper.$fFromJSONListOb7
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"links">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"links">_N))) -}
fb2c4670a32ccd346bb3de1db86386b0
  $fFromJSONListOb7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "links"#) -}
c8fbae823d7a3f834f3380c074d685c5
  $fFromJSONListOb8 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [DBHelper.RepoDB] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [DBHelper.RepoDB]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   DBHelper.$fFromJSONListOb_$s$fFromJSON[]1
                   @ a1
                   w3) -}
205b74962c9039e2c1ef370533232712
  $fFromJSONListOb9 :: GHC.Generics.SingI ('GHC.Base.Just "repos")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONListOb10
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "repos">_N) -}
f71116c23fab4ac41f3dd6995e814421
  $fFromJSONListOb_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser DBHelper.ListOb
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "ListOb"
                                "DBHelper"
                                "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "ListOb" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "users")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 [DBHelper.UserDB])
                                 GHC.Generics.:*: (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "repos")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 [DBHelper.RepoDB])
                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just "links")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         [DBHelper.LinkDB]))))
                             GHC.Prim.Any)
                   = DBHelper.$fFromJSONListOb2
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f9 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f9 r)
                    (ks :: Data.Aeson.Types.Internal.Success DBHelper.ListOb f9 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (DBHelper.Rep_ListOb[0])) <GHC.Prim.Any>_N))
                    @ f9
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep DBHelper.ListOb GHC.Prim.Any) ->
                     ks (DBHelper.$fFromJSONListOb_$cto @ GHC.Prim.Any a1)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <DBHelper.ListOb>_R))) -}
f71116c23fab4ac41f3dd6995e814421
  $fFromJSONListOb_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [DBHelper.ListOb]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [DBHelper.ListOb]
                        DBHelper.$fFromJSONLanguage2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (DBHelper.$fFromJSONListOb1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          DBHelper.$fFromJSONListOb_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[DBHelper.ListOb]>_R)) } }) -}
f71116c23fab4ac41f3dd6995e814421
  $fFromJSONListOb_$cto ::
    GHC.Generics.Rep DBHelper.ListOb x -> DBHelper.ListOb
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep DBHelper.ListOb x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (DBHelper.Rep_ListOb[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "ListOb"
                                        "DBHelper"
                                        "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "ListOb" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "users")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R [DBHelper.UserDB])
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "repos")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R [DBHelper.RepoDB])
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "links")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 [DBHelper.LinkDB])))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "ListOb" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "users")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R [DBHelper.UserDB])
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "repos")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R [DBHelper.RepoDB])
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "links")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              [DBHelper.LinkDB]))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds2 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 DBHelper.ListOb
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "users")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [DBHelper.UserDB]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <[DBHelper.UserDB]>_R <x>_P))
                   ds3
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "repos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [DBHelper.RepoDB]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <[DBHelper.RepoDB]>_R <x>_P))
                   ds4
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "links")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R [DBHelper.LinkDB]>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <[DBHelper.LinkDB]>_R <x>_P)) } }) -}
f71116c23fab4ac41f3dd6995e814421
  $fFromJSONListOb_$s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON [DBHelper.LinkDB]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [DBHelper.LinkDB]
                  (Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON
                     @ DBHelper.LinkDB
                     DBHelper.$fFromJSONLinkDB)
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ DBHelper.LinkDB
                     DBHelper.$fFromJSONLinkDB) -}
20972d6917c4282109c4d66a15b4836e
  $fFromJSONListOb_$s$fFromJSON[]1 ::
    Data.Aeson.Types.FromJSON.FromJSON [DBHelper.RepoDB]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [DBHelper.RepoDB]
                  (Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON
                     @ DBHelper.RepoDB
                     DBHelper.$fFromJSONRepoDB)
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ DBHelper.RepoDB
                     DBHelper.$fFromJSONRepoDB) -}
7b070b8d23fe64f117302e7e846e14f1
  $fFromJSONListOb_$s$fFromJSON[]2 ::
    Data.Aeson.Types.FromJSON.FromJSON [DBHelper.UserDB]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [DBHelper.UserDB]
                  (Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON
                     @ DBHelper.UserDB
                     DBHelper.$fFromJSONUserDB)
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ DBHelper.UserDB
                     DBHelper.$fFromJSONUserDB) -}
7bb23bc699f35ce2bb0aa0f10994b77b
  $fFromJSONListOb_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "links")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "links")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONListOb_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "links")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONListOb4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "links")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONListOb4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "links")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONListOb4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
3219e7a725035ab68fcdf77e79304943
  $fFromJSONListOb_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "repos")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "repos")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONListOb_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "repos")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONListOb9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "repos")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONListOb9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "repos")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONListOb9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
0a9a3355de86282e20b73f43bb3f48ef
  $fFromJSONListOb_$s$fSelectorMetaMetaSel2 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "users")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "users")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONListOb_$s$fSelectorMetaMetaSel_$cselName2
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "users")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONListOb14
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "users")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONListOb14
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "users")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONListOb14
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
0673b7512b94cfc3d2d50be1e5b7bb24
  $fFromJSONListOb_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "links")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "links")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONListOb7) -}
ca655072cfc13695d1464ee6aacb05fd
  $fFromJSONListOb_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "repos")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "repos")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONListOb12) -}
3c3458b4b52a9a1f59550fac76e63298
  $fFromJSONListOb_$s$fSelectorMetaMetaSel_$cselName2 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "users")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "users")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONListOb17) -}
f71116c23fab4ac41f3dd6995e814421
  $fFromJSONListOb_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser DBHelper.ListOb]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
3a02f93a20b244c7babce0966838c2bf
  $fFromJSONLog :: Data.Aeson.Types.FromJSON.FromJSON DBHelper.Log
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.Log
                  DBHelper.$fFromJSONLog_$cparseJSON
                  DBHelper.$fFromJSONLog_$cparseJSONList -}
3a02f93a20b244c7babce0966838c2bf
  $fFromJSONLog1 ::
    [Data.Aeson.Types.Internal.Parser DBHelper.Log]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [DBHelper.Log] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
bc224211bb2e69c19b4441fc51db9050
  $fFromJSONLog10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "word"#) -}
04dbd1e9fe443653fa464cf93cc30b5c
  $fFromJSONLog2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "Log"
               "DBHelper"
               "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
               'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "Log" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "word")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "number")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "word")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "number")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int))
                             a1)
                   = case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                     case ds6 of wild1 { DEFAULT ->
                     case x of wild2 {
                       DEFAULT
                       -> Data.Aeson.Types.FromJSON.typeMismatch
                            @ ((GHC.Generics.:*:)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "word")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String))
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "number")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int))
                                 a1)
                            Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                            wild2
                       Data.Aeson.Types.Internal.Object obj
                       -> let {
                            m1 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "word")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String)
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "word")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                DBHelper.$fFromJSONLog_$s$fSelectorMetaMetaSel1
                                DBHelper.$fFromJSONLanguage9
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            e :: Data.Aeson.Types.Internal.Parser
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "number")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                      a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "number")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                DBHelper.$fFromJSONLog_$s$fSelectorMetaMetaSel
                                DBHelper.$fFromJSONLinkDB15
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          (\ @ (f :: * -> *)
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f r)
                             (ks :: Data.Aeson.Types.Internal.Success
                                      ((GHC.Generics.:*:)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "word")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String))
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "number")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Types.Int))
                                         a1)
                                      f
                                      r) ->
                           m1
                             `cast`
                           (Data.Aeson.Types.Internal.N:Parser[0]
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "word")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                   a1>_R)
                             @ f
                             @ r
                             path
                             kf
                             (\ (a2 :: GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "word")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String)
                                         a1) ->
                              e `cast`
                              (Data.Aeson.Types.Internal.N:Parser[0]
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "number")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                      a1>_R)
                                @ f
                                @ r
                                path
                                kf
                                (\ (a3 :: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "number")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Types.Int)
                                            a1) ->
                                 ks
                                   (GHC.Generics.:*:
                                      @ (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "word")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Base.String))
                                      @ (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "number")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Types.Int))
                                      @ a1
                                      a2
                                      a3))))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <(GHC.Generics.:*:)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "word")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Base.String))
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "number")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Types.Int))
                                       a1>_R)) } } }
                 } in
                 (\ @ (f9 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f9 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "Log"
                                   "DBHelper"
                                   "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                   'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "Log" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "word")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                    GHC.Generics.:*: GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "number")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 GHC.Types.Int)))
                                a1)
                             f9
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "word")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "number")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Int))
                          a1>_R)
                    @ f9
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "word")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "number")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int))
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.C>_P
                                      <'GHC.Generics.MetaCons
                                         "Log" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                      <GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "word")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String)
                                       GHC.Generics.:*: GHC.Generics.S1
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "number")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.Rec0 GHC.Types.Int)>_R))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "Log"
                                         "DBHelper"
                                         "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "Log" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "word")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "number")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0
                                                                GHC.Types.Int))>_R)) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "Log"
                                 "DBHelper"
                                 "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "Log" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "word")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "number")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Types.Int)))
                              a1>_R))) -}
c4afaa9b5ff53e16a476fec295a6db46
  $fFromJSONLog3 :: GHC.Generics.SingI ('GHC.Base.Just "number")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONLog4
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "number">_N) -}
ae7447c3e07d836a149e316f03516ad2
  $fFromJSONLog4 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "number")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "number")
                   @ "number"
                   @~ <'GHC.Base.Just "number">_N
                   DBHelper.$fFromJSONLog5
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"number">_N)) -}
e785458fa41e49848987d81b3a3c0b1c
  $fFromJSONLog5 :: GHC.Generics.R:SingSymbols "number"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "number"
                   DBHelper.$fFromJSONLog6
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"number">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"number">_N))) -}
1498b7a3b2ce5bdbf781a78060e91e7c
  $fFromJSONLog6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "number"#) -}
b0eec7327b79e5d5d0e8306e49e92982
  $fFromJSONLog7 :: GHC.Generics.SingI ('GHC.Base.Just "word")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONLog8
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "word">_N) -}
8086a7039e3b9bc9644048cc339da4b9
  $fFromJSONLog8 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "word")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "word")
                   @ "word"
                   @~ <'GHC.Base.Just "word">_N
                   DBHelper.$fFromJSONLog9
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"word">_N)) -}
21f7967f6a3008eda2680d6921e882ba
  $fFromJSONLog9 :: GHC.Generics.R:SingSymbols "word"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "word"
                   DBHelper.$fFromJSONLog10
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"word">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"word">_N))) -}
3a02f93a20b244c7babce0966838c2bf
  $fFromJSONLog_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser DBHelper.Log
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "Log"
                                "DBHelper"
                                "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "Log" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "word")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "number")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Types.Int)))
                             GHC.Prim.Any)
                   = DBHelper.$fFromJSONLog2
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f9 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f9 r)
                    (ks :: Data.Aeson.Types.Internal.Success DBHelper.Log f9 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (DBHelper.Rep_Log[0])) <GHC.Prim.Any>_N))
                    @ f9
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep DBHelper.Log GHC.Prim.Any) ->
                     ks
                       (case a1
                               `cast`
                             (Trans
                                  (Sub (DBHelper.Rep_Log[0]))
                                  (Trans
                                       (GHC.Generics.N:M1[0]
                                            <GHC.Generics.D>_P
                                            <'GHC.Generics.MetaData
                                               "Log"
                                               "DBHelper"
                                               "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                               'GHC.Types.False>_P
                                            <GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "Log" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "word")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "number")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Types.Int))>_R)
                                       (GHC.Generics.N:M1[0]
                                            <GHC.Generics.C>_P
                                            <'GHC.Generics.MetaCons
                                               "Log" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                            <GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "word")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "number")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Types.Int)>_R)) <GHC.Prim.Any>_N) of wild { GHC.Generics.:*: ds ds1 ->
                        DBHelper.Log
                          ds
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "word")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                          ds1
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "number")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.Types.Int>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.Types.Int>_R <GHC.Prim.Any>_P)) })))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <DBHelper.Log>_R))) -}
3a02f93a20b244c7babce0966838c2bf
  $fFromJSONLog_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [DBHelper.Log]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [DBHelper.Log]
                        DBHelper.$fFromJSONLanguage2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (DBHelper.$fFromJSONLog1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          DBHelper.$fFromJSONLog_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[DBHelper.Log]>_R)) } }) -}
279ba008ecbc0fa94836077bcc20a9da
  $fFromJSONLog_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "number")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "number")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONLog_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "number")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLog3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "number")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLog3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "number")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLog3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
ae074b94faf7bac0b0f3d48fa5968cb8
  $fFromJSONLog_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "word")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "word")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONLog_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "word")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLog7
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "word")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLog7
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "word")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLog7
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
1f110f535be043777c3cb97332c046db
  $fFromJSONLog_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "number")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "number")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONLog6) -}
bc49dd6feec73bafc4b0cac31ebaf7ad
  $fFromJSONLog_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "word")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "word")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONLog10) -}
3a02f93a20b244c7babce0966838c2bf
  $fFromJSONLog_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser DBHelper.Log]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
11c665402619553a2690f82da4927c4a
  $fFromJSONRepoDB ::
    Data.Aeson.Types.FromJSON.FromJSON DBHelper.RepoDB
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.RepoDB
                  DBHelper.$fFromJSONRepoDB_$cparseJSON
                  DBHelper.$fFromJSONRepoDB_$cparseJSONList -}
11c665402619553a2690f82da4927c4a
  $fFromJSONRepoDB1 ::
    [Data.Aeson.Types.Internal.Parser DBHelper.RepoDB]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [DBHelper.RepoDB] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
5b76f8f1a49ca087243f255694c5c053
  $fFromJSONRepoDB2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "RepoDB"
               "DBHelper"
               "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
               'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "repoName")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 GHC.Base.String)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "repoOwner")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "repoSize")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "recent")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Bool)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "repoLanguage")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          GHC.Base.String)))))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,1*U> -}
11c665402619553a2690f82da4927c4a
  $fFromJSONRepoDB_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser DBHelper.RepoDB
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "RepoDB"
                                "DBHelper"
                                "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                ((GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "repoName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "repoOwner")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String))
                                 GHC.Generics.:*: (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "repoSize")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Types.Int)
                                                   GHC.Generics.:*: (GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just "recent")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          GHC.Types.Bool)
                                                                     GHC.Generics.:*: GHC.Generics.S1
                                                                                        ('GHC.Generics.MetaSel
                                                                                           ('GHC.Base.Just
                                                                                              "repoLanguage")
                                                                                           'GHC.Generics.NoSourceUnpackedness
                                                                                           'GHC.Generics.NoSourceStrictness
                                                                                           'GHC.Generics.DecidedLazy)
                                                                                        (GHC.Generics.Rec0
                                                                                           GHC.Base.String)))))
                             GHC.Prim.Any)
                   = DBHelper.$fFromJSONRepoDB2
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f9 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f9 r)
                    (ks :: Data.Aeson.Types.Internal.Success DBHelper.RepoDB f9 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (DBHelper.Rep_RepoDB[0])) <GHC.Prim.Any>_N))
                    @ f9
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep DBHelper.RepoDB GHC.Prim.Any) ->
                     ks (DBHelper.$fFromJSONRepoDB_$cto @ GHC.Prim.Any a1)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <DBHelper.RepoDB>_R))) -}
11c665402619553a2690f82da4927c4a
  $fFromJSONRepoDB_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [DBHelper.RepoDB]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [DBHelper.RepoDB]
                        DBHelper.$fFromJSONLanguage2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (DBHelper.$fFromJSONRepoDB1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          DBHelper.$fFromJSONRepoDB_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[DBHelper.RepoDB]>_R)) } }) -}
11c665402619553a2690f82da4927c4a
  $fFromJSONRepoDB_$cto ::
    GHC.Generics.Rep DBHelper.RepoDB x -> DBHelper.RepoDB
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS(LS)),1*U(1*U(U,U),1*U(U,1*U(U,U)))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep DBHelper.RepoDB x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (DBHelper.Rep_RepoDB[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "RepoDB"
                                        "DBHelper"
                                        "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "repoName")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "repoOwner")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Base.String))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "repoSize")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Types.Int)
                                                           GHC.Generics.:*: (GHC.Generics.M1
                                                                               GHC.Generics.S
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "recent")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.K1
                                                                                  GHC.Generics.R
                                                                                  GHC.Types.Bool)
                                                                             GHC.Generics.:*: GHC.Generics.M1
                                                                                                GHC.Generics.S
                                                                                                ('GHC.Generics.MetaSel
                                                                                                   ('GHC.Base.Just
                                                                                                      "repoLanguage")
                                                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                                                   'GHC.Generics.NoSourceStrictness
                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                (GHC.Generics.K1
                                                                                                   GHC.Generics.R
                                                                                                   GHC.Base.String))))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "repoName")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "repoOwner")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R GHC.Base.String))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "repoSize")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R GHC.Types.Int)
                                                        GHC.Generics.:*: (GHC.Generics.M1
                                                                            GHC.Generics.S
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "recent")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.K1
                                                                               GHC.Generics.R
                                                                               GHC.Types.Bool)
                                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                                             GHC.Generics.S
                                                                                             ('GHC.Generics.MetaSel
                                                                                                ('GHC.Base.Just
                                                                                                   "repoLanguage")
                                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                                'GHC.Generics.NoSourceStrictness
                                                                                                'GHC.Generics.DecidedLazy)
                                                                                             (GHC.Generics.K1
                                                                                                GHC.Generics.R
                                                                                                GHC.Base.String)))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds1 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 case ds2 of wild2 { GHC.Generics.:*: ds5 ds6 ->
                 case ds6 of wild3 { GHC.Generics.:*: ds7 ds8 ->
                 DBHelper.RepoDB
                   ds3
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "repoName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds4
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "repoOwner")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds5
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "repoSize")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                   ds7
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "recent")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                   ds8
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "repoLanguage")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P)) } } } }) -}
11c665402619553a2690f82da4927c4a
  $fFromJSONRepoDB_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser DBHelper.RepoDB]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
9db0ea535878b612e683ecea61ecbd41
  $fFromJSONUserDB ::
    Data.Aeson.Types.FromJSON.FromJSON DBHelper.UserDB
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.UserDB
                  DBHelper.$fFromJSONUserDB_$cparseJSON
                  DBHelper.$fFromJSONUserDB_$cparseJSONList -}
9db0ea535878b612e683ecea61ecbd41
  $fFromJSONUserDB1 ::
    [Data.Aeson.Types.Internal.Parser DBHelper.UserDB]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [DBHelper.UserDB] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
06c183184b9c3306bf6bd2487d8e5f51
  $fFromJSONUserDB2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "UserDB"
               "DBHelper"
               "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
               'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "userId")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String)))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "userId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String)
                             a1)
                   = case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                     case ds6 of wild1 {
                       GHC.Types.False
                       -> case x of wild2 {
                            DEFAULT
                            -> Data.Aeson.Types.FromJSON.typeMismatch
                                 @ (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "userId")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                      a1)
                                 Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                                 wild2
                            Data.Aeson.Types.Internal.Object obj
                            -> Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                 @ ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "userId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                 @ Data.Aeson.Types.Generic.Zero
                                 @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                 DBHelper.$fFromJSONUserDB_$s$fSelectorMetaMetaSel
                                 DBHelper.$fFromJSONLanguage9
                                   `cast`
                                 (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                           <Data.Aeson.Types.Generic.Zero>_N
                                           <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                 @ a1
                                 wild
                                 fargs
                                 (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                 obj }
                       GHC.Types.True
                       -> case Data.Aeson.Types.Internal.$sfromList1
                                 @ Data.Aeson.Types.Internal.Value
                                 (GHC.Types.:
                                    @ Data.Aeson.Types.Internal.Pair
                                    (Data.Aeson.Types.FromJSON.$fConsFromJSONarityf2, x)
                                    (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                                 (Data.HashMap.Base.Empty
                                    @ Data.Text.Internal.Text
                                    @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                          Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "userId")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ Data.Aeson.Types.Generic.Zero
                            @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            DBHelper.$fFromJSONUserDB_$s$fSelectorMetaMetaSel
                            DBHelper.$fFromJSONLanguage9
                              `cast`
                            (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                      <Data.Aeson.Types.Generic.Zero>_N
                                      <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                            @ a1
                            wild
                            fargs
                            Data.Aeson.Types.FromJSON.$fConsFromJSONarityf1
                            dt } } }
                 } in
                 (\ @ (f9 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f9 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "UserDB"
                                   "DBHelper"
                                   "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                   'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "userId")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)))
                                a1)
                             f9
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <GHC.Generics.M1
                          GHC.Generics.S
                          ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "userId")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                          (GHC.Generics.Rec0 GHC.Base.String)
                          a1>_R)
                    @ f9
                    @ r
                    path
                    kf
                    (\ (a2 :: GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "userId")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String)
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.C>_P
                                      <'GHC.Generics.MetaCons
                                         "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "userId")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String)>_R))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "UserDB"
                                         "DBHelper"
                                         "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "userId")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String))>_R)) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "UserDB"
                                 "DBHelper"
                                 "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "userId")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)))
                              a1>_R))) -}
791ebcab8418f1245c65f8c45638aff2
  $fFromJSONUserDB3 :: GHC.Generics.SingI ('GHC.Base.Just "userId")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONUserDB4
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "userId">_N) -}
08e380d1a3e710831fa7cd9b479f179f
  $fFromJSONUserDB4 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "userId")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "userId")
                   @ "userId"
                   @~ <'GHC.Base.Just "userId">_N
                   DBHelper.$fFromJSONUserDB5
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"userId">_N)) -}
d54423ed009ddb4697b1eb4ad908c410
  $fFromJSONUserDB5 :: GHC.Generics.R:SingSymbols "userId"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "userId"
                   DBHelper.$fFromJSONUserDB6
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"userId">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"userId">_N))) -}
f2565206ece9ad2245c854a1ebd045c6
  $fFromJSONUserDB6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "userId"#) -}
9db0ea535878b612e683ecea61ecbd41
  $fFromJSONUserDB_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser DBHelper.UserDB
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "UserDB"
                                "DBHelper"
                                "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "userId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)))
                             GHC.Prim.Any)
                   = DBHelper.$fFromJSONUserDB2
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f9 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f9 r)
                    (ks :: Data.Aeson.Types.Internal.Success DBHelper.UserDB f9 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (DBHelper.Rep_UserDB[0])) <GHC.Prim.Any>_N))
                    @ f9
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep DBHelper.UserDB GHC.Prim.Any) ->
                     ks
                       (DBHelper.UserDB
                          a1
                            `cast`
                          (Trans
                               (Trans
                                    (Sub (DBHelper.Rep_UserDB[0]))
                                    (Trans
                                         (GHC.Generics.N:M1[0]
                                              <GHC.Generics.D>_P
                                              <'GHC.Generics.MetaData
                                                 "UserDB"
                                                 "DBHelper"
                                                 "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                                 'GHC.Types.False>_P
                                              <GHC.Generics.M1
                                                 GHC.Generics.C
                                                 ('GHC.Generics.MetaCons
                                                    "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                                 (GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "userId")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R GHC.Base.String))>_R)
                                         (Trans
                                              (GHC.Generics.N:M1[0]
                                                   <GHC.Generics.C>_P
                                                   <'GHC.Generics.MetaCons
                                                      "UserDB"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.True>_P
                                                   <GHC.Generics.M1
                                                      GHC.Generics.S
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "userId")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.K1
                                                         GHC.Generics.R GHC.Base.String)>_R)
                                              (GHC.Generics.N:M1[0]
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "userId")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      GHC.Base.String>_R))) <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P)))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <DBHelper.UserDB>_R))) -}
9db0ea535878b612e683ecea61ecbd41
  $fFromJSONUserDB_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [DBHelper.UserDB]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [DBHelper.UserDB]
                        DBHelper.$fFromJSONLanguage2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (DBHelper.$fFromJSONUserDB1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          DBHelper.$fFromJSONUserDB_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[DBHelper.UserDB]>_R)) } }) -}
25ae4f7ee4e17b130d26d23f8adadb82
  $fFromJSONUserDB_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "userId")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "userId")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONUserDB_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "userId")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONUserDB3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "userId")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONUserDB3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "userId")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONUserDB3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
446e8c8f5870278797704606e82783f8
  $fFromJSONUserDB_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "userId")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "userId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONUserDB6) -}
9db0ea535878b612e683ecea61ecbd41
  $fFromJSONUserDB_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser DBHelper.UserDB]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
22fcaf89b0c8fd808eff81a7771c2399
  $fGenericLanguage :: GHC.Generics.Generic DBHelper.Language
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.Language
                  DBHelper.$fGenericLanguage_$cfrom
                  DBHelper.$fGenericLanguage_$cto -}
22fcaf89b0c8fd808eff81a7771c2399
  $fGenericLanguage1 ::
    DBHelper.Language
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Language" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "name")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "value")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: DBHelper.Language) ->
                 case x1 of wild { DBHelper.Language g1 g2 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "name")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "value")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "name")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))
                    g2
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "value")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1
                                      GHC.Generics.R GHC.Integer.Type.Integer>_R) <x>_N)))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "Language" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "name")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "value")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R
                                                  GHC.Integer.Type.Integer)>_R) <x>_N) }) -}
22fcaf89b0c8fd808eff81a7771c2399
  $fGenericLanguage_$cfrom ::
    DBHelper.Language -> GHC.Generics.Rep DBHelper.Language x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (0, True, True)
                DBHelper.$fGenericLanguage1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <DBHelper.Language>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "Language"
                                       "DBHelper"
                                       "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "Language" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "name")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                        GHC.Generics.:*: GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "value")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R
                                                              GHC.Integer.Type.Integer))>_R))
                          (Sub (Sym (DBHelper.Rep_Language[0]))) <x>_N) -}
22fcaf89b0c8fd808eff81a7771c2399
  $fGenericLanguage_$cto ::
    GHC.Generics.Rep DBHelper.Language x -> DBHelper.Language
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep DBHelper.Language x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (DBHelper.Rep_Language[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "Language"
                                        "DBHelper"
                                        "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Language" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "name")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "value")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R
                                                               GHC.Integer.Type.Integer))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Language" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "name")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "value")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Integer.Type.Integer)>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 DBHelper.Language
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "name")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds2
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "value")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Integer.Type.Integer>_R <x>_P)) }) -}
f71116c23fab4ac41f3dd6995e814421
  $fGenericLinkDB :: GHC.Generics.Generic DBHelper.LinkDB
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.LinkDB
                  DBHelper.$fGenericLinkDB_$cfrom
                  DBHelper.$fFromJSONLinkDB_$cto -}
f71116c23fab4ac41f3dd6995e814421
  $fGenericLinkDB1 ::
    DBHelper.LinkDB
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "linkType")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "linkName")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "source")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "destination")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: DBHelper.LinkDB) ->
                 case x1 of wild { DBHelper.LinkDB g1 g2 g3 g4 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "linkType")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "linkName")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "source")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "destination")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ x
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "linkType")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "linkName")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ x
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "linkType")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R) <x>_N))
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "linkName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "source")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "destination")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ x
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "source")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))
                       g4
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "destination")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "linkType")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "linkName")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "source")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "destination")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    GHC.Base.String))>_R) <x>_N) }) -}
f71116c23fab4ac41f3dd6995e814421
  $fGenericLinkDB_$cfrom ::
    DBHelper.LinkDB -> GHC.Generics.Rep DBHelper.LinkDB x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                DBHelper.$fGenericLinkDB1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <DBHelper.LinkDB>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "LinkDB"
                                       "DBHelper"
                                       "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       ((GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "linkType")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "linkName")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String))
                                        GHC.Generics.:*: (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "source")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String)
                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                             GHC.Generics.S
                                                                             ('GHC.Generics.MetaSel
                                                                                ('GHC.Base.Just
                                                                                   "destination")
                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                'GHC.Generics.NoSourceStrictness
                                                                                'GHC.Generics.DecidedLazy)
                                                                             (GHC.Generics.K1
                                                                                GHC.Generics.R
                                                                                GHC.Base.String)))>_R))
                          (Sub (Sym (DBHelper.Rep_LinkDB[0]))) <x>_N) -}
f71116c23fab4ac41f3dd6995e814421
  $fGenericListOb :: GHC.Generics.Generic DBHelper.ListOb
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.ListOb
                  DBHelper.$fGenericListOb_$cfrom
                  DBHelper.$fFromJSONListOb_$cto -}
f71116c23fab4ac41f3dd6995e814421
  $fGenericListOb1 ::
    DBHelper.ListOb
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "ListOb" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "users")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R [DBHelper.UserDB])
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "repos")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R [DBHelper.RepoDB])
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "links")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R [DBHelper.LinkDB])))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: DBHelper.ListOb) ->
                 case x1 of wild { DBHelper.ListOb g1 g2 g3 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "users")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R [DBHelper.UserDB]))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "repos")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R [DBHelper.RepoDB])
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "links")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R [DBHelper.LinkDB]))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <[DBHelper.UserDB]>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "users")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R [DBHelper.UserDB]>_R) <x>_N))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "repos")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R [DBHelper.RepoDB]))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "links")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R [DBHelper.LinkDB]))
                       @ x
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <[DBHelper.RepoDB]>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "repos")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R [DBHelper.RepoDB]>_R) <x>_N))
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <[DBHelper.LinkDB]>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "links")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R [DBHelper.LinkDB]>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "ListOb" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "users")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R [DBHelper.UserDB])
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "repos")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R [DBHelper.RepoDB])
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "links")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    [DBHelper.LinkDB]))>_R) <x>_N) }) -}
f71116c23fab4ac41f3dd6995e814421
  $fGenericListOb_$cfrom ::
    DBHelper.ListOb -> GHC.Generics.Rep DBHelper.ListOb x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                DBHelper.$fGenericListOb1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <DBHelper.ListOb>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "ListOb"
                                       "DBHelper"
                                       "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "ListOb" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "users")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R [DBHelper.UserDB])
                                        GHC.Generics.:*: (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "repos")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R [DBHelper.RepoDB])
                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                             GHC.Generics.S
                                                                             ('GHC.Generics.MetaSel
                                                                                ('GHC.Base.Just
                                                                                   "links")
                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                'GHC.Generics.NoSourceStrictness
                                                                                'GHC.Generics.DecidedLazy)
                                                                             (GHC.Generics.K1
                                                                                GHC.Generics.R
                                                                                [DBHelper.LinkDB])))>_R))
                          (Sub (Sym (DBHelper.Rep_ListOb[0]))) <x>_N) -}
3a02f93a20b244c7babce0966838c2bf
  $fGenericLog :: GHC.Generics.Generic DBHelper.Log
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.Log
                  DBHelper.$fGenericLog_$cfrom
                  DBHelper.$fGenericLog_$cto -}
3a02f93a20b244c7babce0966838c2bf
  $fGenericLog1 ::
    DBHelper.Log
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "Log" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "word")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "number")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: DBHelper.Log) ->
                 case x1 of wild { DBHelper.Log g1 g2 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "word")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "number")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "word")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))
                    g2
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "number")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R) <x>_N)))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "Log" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "word")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "number")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Types.Int)>_R) <x>_N) }) -}
3a02f93a20b244c7babce0966838c2bf
  $fGenericLog_$cfrom ::
    DBHelper.Log -> GHC.Generics.Rep DBHelper.Log x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (0, True, True)
                DBHelper.$fGenericLog1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <DBHelper.Log>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "Log"
                                       "DBHelper"
                                       "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "Log" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "word")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                        GHC.Generics.:*: GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "number")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R GHC.Types.Int))>_R))
                          (Sub (Sym (DBHelper.Rep_Log[0]))) <x>_N) -}
3a02f93a20b244c7babce0966838c2bf
  $fGenericLog_$cto ::
    GHC.Generics.Rep DBHelper.Log x -> DBHelper.Log
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep DBHelper.Log x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (DBHelper.Rep_Log[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "Log"
                                        "DBHelper"
                                        "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Log" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "word")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "number")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Types.Int))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Log" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "word")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "number")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Types.Int)>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 DBHelper.Log
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "word")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds2
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "number")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P)) }) -}
11c665402619553a2690f82da4927c4a
  $fGenericRepoDB :: GHC.Generics.Generic DBHelper.RepoDB
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.RepoDB
                  DBHelper.$fGenericRepoDB_$cfrom
                  DBHelper.$fFromJSONRepoDB_$cto -}
11c665402619553a2690f82da4927c4a
  $fGenericRepoDB1 ::
    DBHelper.RepoDB
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
         ((GHC.Generics.M1
             GHC.Generics.S
             ('GHC.Generics.MetaSel
                ('GHC.Base.Just "repoName")
                'GHC.Generics.NoSourceUnpackedness
                'GHC.Generics.NoSourceStrictness
                'GHC.Generics.DecidedLazy)
             (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
           GHC.Generics.:*: GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "repoOwner")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "repoSize")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "recent")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "repoLanguage")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    GHC.Base.String))))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: DBHelper.RepoDB) ->
                 case x1 of wild { DBHelper.RepoDB g1 g2 g3 g4 g5 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "repoName")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "repoOwner")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "repoSize")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                       GHC.Generics.:*: (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "recent")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "repoLanguage")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String)))
                    @ x
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "repoName")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "repoOwner")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ x
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "repoName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "repoOwner")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "repoSize")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "recent")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                          GHC.Generics.:*: GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "repoLanguage")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ x
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "repoSize")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R) <x>_N))
                       (GHC.Generics.:*:
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "recent")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                          @ (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "repoLanguage")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                          @ x
                          g4
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "recent")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R) <x>_N))
                          g5
                            `cast`
                          (Trans
                               (Sym (GHC.Generics.N:K1[0]
                                         <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                               (Sym (GHC.Generics.N:M1[0]
                                         <GHC.Generics.S>_P
                                         <'GHC.Generics.MetaSel
                                            ('GHC.Base.Just "repoLanguage")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy>_P
                                         <GHC.Generics.K1
                                            GHC.Generics.R GHC.Base.String>_R) <x>_N)))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <(GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "repoName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                             GHC.Generics.:*: GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "repoOwner")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "repoSize")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                              GHC.Generics.:*: (GHC.Generics.M1
                                                                  GHC.Generics.S
                                                                  ('GHC.Generics.MetaSel
                                                                     ('GHC.Base.Just "recent")
                                                                     'GHC.Generics.NoSourceUnpackedness
                                                                     'GHC.Generics.NoSourceStrictness
                                                                     'GHC.Generics.DecidedLazy)
                                                                  (GHC.Generics.K1
                                                                     GHC.Generics.R GHC.Types.Bool)
                                                                GHC.Generics.:*: GHC.Generics.M1
                                                                                   GHC.Generics.S
                                                                                   ('GHC.Generics.MetaSel
                                                                                      ('GHC.Base.Just
                                                                                         "repoLanguage")
                                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                                      'GHC.Generics.NoSourceStrictness
                                                                                      'GHC.Generics.DecidedLazy)
                                                                                   (GHC.Generics.K1
                                                                                      GHC.Generics.R
                                                                                      GHC.Base.String)))>_R) <x>_N) }) -}
11c665402619553a2690f82da4927c4a
  $fGenericRepoDB_$cfrom ::
    DBHelper.RepoDB -> GHC.Generics.Rep DBHelper.RepoDB x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                DBHelper.$fGenericRepoDB1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <DBHelper.RepoDB>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "RepoDB"
                                       "DBHelper"
                                       "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       ((GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "repoName")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "repoOwner")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String))
                                        GHC.Generics.:*: (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "repoSize")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Types.Int)
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "recent")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Types.Bool)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               ('GHC.Generics.MetaSel
                                                                                                  ('GHC.Base.Just
                                                                                                     "repoLanguage")
                                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Base.String))))>_R))
                          (Sub (Sym (DBHelper.Rep_RepoDB[0]))) <x>_N) -}
9db0ea535878b612e683ecea61ecbd41
  $fGenericUserDB :: GHC.Generics.Generic DBHelper.UserDB
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.UserDB
                  DBHelper.$fGenericUserDB_$cfrom
                  DBHelper.$fGenericUserDB_$cto -}
9db0ea535878b612e683ecea61ecbd41
  $fGenericUserDB1 ::
    DBHelper.UserDB
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "userId")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: DBHelper.UserDB) ->
                 case x1 of wild { DBHelper.UserDB g1 ->
                 g1
                   `cast`
                 (Trans
                      (Sym (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                      (Trans
                           (Sym (GHC.Generics.N:M1[0]
                                     <GHC.Generics.S>_P
                                     <'GHC.Generics.MetaSel
                                        ('GHC.Base.Just "userId")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy>_P
                                     <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R))
                           (Sym (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "userId")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1
                                           GHC.Generics.R GHC.Base.String)>_R)) <x>_N)) }) -}
9db0ea535878b612e683ecea61ecbd41
  $fGenericUserDB_$cfrom ::
    DBHelper.UserDB -> GHC.Generics.Rep DBHelper.UserDB x
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.$fGenericUserDB1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <DBHelper.UserDB>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "UserDB"
                                       "DBHelper"
                                       "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "userId")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))>_R))
                          (Sub (Sym (DBHelper.Rep_UserDB[0]))) <x>_N) -}
9db0ea535878b612e683ecea61ecbd41
  $fGenericUserDB_$cto ::
    GHC.Generics.Rep DBHelper.UserDB x -> DBHelper.UserDB
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, True)
                (\ @ x (ds :: GHC.Generics.Rep DBHelper.UserDB x) ->
                 DBHelper.UserDB
                   ds
                     `cast`
                   (Trans
                        (Trans
                             (Sub (DBHelper.Rep_UserDB[0]))
                             (Trans
                                  (GHC.Generics.N:M1[0]
                                       <GHC.Generics.D>_P
                                       <'GHC.Generics.MetaData
                                          "UserDB"
                                          "DBHelper"
                                          "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
                                          'GHC.Types.False>_P
                                       <GHC.Generics.M1
                                          GHC.Generics.C
                                          ('GHC.Generics.MetaCons
                                             "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                          (GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "userId")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))>_R)
                                  (Trans
                                       (GHC.Generics.N:M1[0]
                                            <GHC.Generics.C>_P
                                            <'GHC.Generics.MetaCons
                                               "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                            <GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "userId")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)>_R)
                                       (GHC.Generics.N:M1[0]
                                            <GHC.Generics.S>_P
                                            <'GHC.Generics.MetaSel
                                               ('GHC.Base.Just "userId")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy>_P
                                            <GHC.Generics.K1
                                               GHC.Generics.R GHC.Base.String>_R))) <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))) -}
22fcaf89b0c8fd808eff81a7771c2399
  $fShowLanguage :: GHC.Show.Show DBHelper.Language
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.Language
                  DBHelper.$fShowLanguage_$cshowsPrec
                  DBHelper.$fShowLanguage_$cshow
                  DBHelper.$fShowLanguage_$cshowList -}
22fcaf89b0c8fd808eff81a7771c2399
  $fShowLanguage1 :: DBHelper.Language -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: DBHelper.Language) (w1 :: GHC.Base.String) ->
                 case w of ww { DBHelper.Language ww1 ww2 ->
                 DBHelper.$w$cshowsPrec 0# ww1 ww2 w1 }) -}
4f33b50ef530e024b5a5e71dcb8284d0
  $fShowLanguage2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
600d8e5a8995888a946b80349ae50b23
  $fShowLanguage3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "value = "#) -}
b52ff8835854f623c8badf38a7b8fac9
  $fShowLanguage4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
69ee1ce30c5dfcd98f403c62577ee66c
  $fShowLanguage5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "name = "#) -}
cbbe656c90aa7c8e4e7805805dfe1858
  $fShowLanguage6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Language {"#) -}
22fcaf89b0c8fd808eff81a7771c2399
  $fShowLanguage_$cshow :: DBHelper.Language -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: DBHelper.Language) ->
                 DBHelper.$fShowLanguage_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
22fcaf89b0c8fd808eff81a7771c2399
  $fShowLanguage_$cshowList :: [DBHelper.Language] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ DBHelper.Language
                   DBHelper.$fShowLanguage1) -}
22fcaf89b0c8fd808eff81a7771c2399
  $fShowLanguage_$cshowsPrec ::
    GHC.Types.Int -> DBHelper.Language -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: DBHelper.Language)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { DBHelper.Language ww3 ww4 ->
                 DBHelper.$w$cshowsPrec ww1 ww3 ww4 w2 } }) -}
f71116c23fab4ac41f3dd6995e814421
  $fShowLinkDB :: GHC.Show.Show DBHelper.LinkDB
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.LinkDB
                  DBHelper.$fShowLinkDB_$cshowsPrec
                  DBHelper.$fShowLinkDB_$cshow
                  DBHelper.$fShowLinkDB_$cshowList -}
f71116c23fab4ac41f3dd6995e814421
  $fShowLinkDB1 :: DBHelper.LinkDB -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: DBHelper.LinkDB) (w1 :: GHC.Base.String) ->
                 case w of ww { DBHelper.LinkDB ww1 ww2 ww3 ww4 ->
                 DBHelper.$w$cshowsPrec1 0# ww1 ww2 ww3 ww4 w1 }) -}
e54b2af71c2761b6d00608a2d6cf54e0
  $fShowLinkDB2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LinkDB {"#) -}
4e3ce54fff5914fc486467c6b4e15fc0
  $fShowLinkDB3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "destination = "#) -}
ad24eca3636abd3039c9f46158e89f7f
  $fShowLinkDB4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "source = "#) -}
b981831638389a85c5656e62e204939a
  $fShowLinkDB5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "linkName = "#) -}
5bb755d9da4001c6ae56372c44f94456
  $fShowLinkDB6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "linkType = "#) -}
f71116c23fab4ac41f3dd6995e814421
  $fShowLinkDB_$cshow :: DBHelper.LinkDB -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: DBHelper.LinkDB) ->
                 DBHelper.$fShowLinkDB_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
f71116c23fab4ac41f3dd6995e814421
  $fShowLinkDB_$cshowList :: [DBHelper.LinkDB] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ DBHelper.LinkDB
                   DBHelper.$fShowLinkDB1) -}
f71116c23fab4ac41f3dd6995e814421
  $fShowLinkDB_$cshowsPrec ::
    GHC.Types.Int -> DBHelper.LinkDB -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U,1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: DBHelper.LinkDB)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { DBHelper.LinkDB ww3 ww4 ww5 ww6 ->
                 DBHelper.$w$cshowsPrec1 ww1 ww3 ww4 ww5 ww6 w2 } }) -}
f71116c23fab4ac41f3dd6995e814421
  $fShowListOb :: GHC.Show.Show DBHelper.ListOb
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.ListOb
                  DBHelper.$fShowListOb_$cshowsPrec
                  DBHelper.$fShowListOb_$cshow
                  DBHelper.$fShowListOb_$cshowList -}
f71116c23fab4ac41f3dd6995e814421
  $fShowListOb1 :: DBHelper.ListOb -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: DBHelper.ListOb) (w1 :: GHC.Base.String) ->
                 case w of ww { DBHelper.ListOb ww1 ww2 ww3 ->
                 DBHelper.$w$cshowsPrec2 0# ww1 ww2 ww3 w1 }) -}
f71116c23fab4ac41f3dd6995e814421
  $fShowListOb_$cshow :: DBHelper.ListOb -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: DBHelper.ListOb) ->
                 DBHelper.$fShowListOb_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
f71116c23fab4ac41f3dd6995e814421
  $fShowListOb_$cshowList :: [DBHelper.ListOb] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ DBHelper.ListOb
                   DBHelper.$fShowListOb1) -}
f71116c23fab4ac41f3dd6995e814421
  $fShowListOb_$cshowsPrec ::
    GHC.Types.Int -> DBHelper.ListOb -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: DBHelper.ListOb)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { DBHelper.ListOb ww3 ww4 ww5 ->
                 DBHelper.$w$cshowsPrec2 ww1 ww3 ww4 ww5 w2 } }) -}
3a02f93a20b244c7babce0966838c2bf
  $fShowLog :: GHC.Show.Show DBHelper.Log
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.Log
                  DBHelper.$fShowLog_$cshowsPrec
                  DBHelper.$fShowLog_$cshow
                  DBHelper.$fShowLog_$cshowList -}
3a02f93a20b244c7babce0966838c2bf
  $fShowLog1 :: DBHelper.Log -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: DBHelper.Log) (w1 :: GHC.Base.String) ->
                 case w of ww { DBHelper.Log ww1 ww2 ->
                 DBHelper.$w$cshowsPrec3 0# ww1 ww2 w1 }) -}
6191ead92c94d4565bc168853d08b448
  $fShowLog2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "number = "#) -}
bd22008aec46fc5a7622f371f45f1f72
  $fShowLog3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "word = "#) -}
63f1eb6ee95bb878397f70c57a9e84a3
  $fShowLog4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Log {"#) -}
3a02f93a20b244c7babce0966838c2bf
  $fShowLog_$cshow :: DBHelper.Log -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: DBHelper.Log) ->
                 DBHelper.$fShowLog_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
3a02f93a20b244c7babce0966838c2bf
  $fShowLog_$cshowList :: [DBHelper.Log] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ DBHelper.Log
                   DBHelper.$fShowLog1) -}
3a02f93a20b244c7babce0966838c2bf
  $fShowLog_$cshowsPrec ::
    GHC.Types.Int -> DBHelper.Log -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U(U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: DBHelper.Log)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { DBHelper.Log ww3 ww4 ->
                 DBHelper.$w$cshowsPrec3 ww1 ww3 ww4 w2 } }) -}
11c665402619553a2690f82da4927c4a
  $fShowRepoDB :: GHC.Show.Show DBHelper.RepoDB
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.RepoDB
                  DBHelper.$fShowRepoDB_$cshowsPrec
                  DBHelper.$fShowRepoDB_$cshow
                  DBHelper.$fShowRepoDB_$cshowList -}
11c665402619553a2690f82da4927c4a
  $fShowRepoDB1 :: DBHelper.RepoDB -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: DBHelper.RepoDB) (w1 :: GHC.Base.String) ->
                 case w of ww { DBHelper.RepoDB ww1 ww2 ww3 ww4 ww5 ->
                 DBHelper.$w$cshowsPrec4 0# ww1 ww2 ww3 ww4 ww5 w1 }) -}
02326df684ea01f1d95dc439c91f1bb5
  $fShowRepoDB2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "repoLanguage = "#) -}
b08e5bda39db7241144fdae7f7828879
  $fShowRepoDB3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "recent = "#) -}
45438503e4930e8a89e0c58d3245bc7d
  $fShowRepoDB4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "repoSize = "#) -}
730e65d3c9c20bd63c1c6a33a6e8de53
  $fShowRepoDB5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "repoOwner = "#) -}
3463427aebe1081362014d274cbe79fa
  $fShowRepoDB6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "repoName = "#) -}
c7ad4677083d2756cbdeab161ebd9e41
  $fShowRepoDB7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RepoDB {"#) -}
11c665402619553a2690f82da4927c4a
  $fShowRepoDB_$cshow :: DBHelper.RepoDB -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U(U),1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: DBHelper.RepoDB) ->
                 DBHelper.$fShowRepoDB_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
11c665402619553a2690f82da4927c4a
  $fShowRepoDB_$cshowList :: [DBHelper.RepoDB] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ DBHelper.RepoDB
                   DBHelper.$fShowRepoDB1) -}
11c665402619553a2690f82da4927c4a
  $fShowRepoDB_$cshowsPrec ::
    GHC.Types.Int -> DBHelper.RepoDB -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U(U),1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: DBHelper.RepoDB)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { DBHelper.RepoDB ww3 ww4 ww5 ww6 ww7 ->
                 DBHelper.$w$cshowsPrec4 ww1 ww3 ww4 ww5 ww6 ww7 w2 } }) -}
9db0ea535878b612e683ecea61ecbd41
  $fShowUserDB :: GHC.Show.Show DBHelper.UserDB
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.UserDB
                  DBHelper.$fShowUserDB_$cshowsPrec
                  DBHelper.$fShowUserDB_$cshow
                  DBHelper.$fShowUserDB_$cshowList -}
9db0ea535878b612e683ecea61ecbd41
  $fShowUserDB1 :: DBHelper.UserDB -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: DBHelper.UserDB) (w1 :: GHC.Base.String) ->
                 case w of ww { DBHelper.UserDB ww1 ->
                 DBHelper.$w$cshowsPrec5 0# ww1 w1 }) -}
33607aef4e14571e483cfd23847b5bf4
  $fShowUserDB2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "userId = "#) -}
d361e418ced0af12fb6134d5411c83d7
  $fShowUserDB3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UserDB {"#) -}
9db0ea535878b612e683ecea61ecbd41
  $fShowUserDB_$cshow :: DBHelper.UserDB -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: DBHelper.UserDB) ->
                 DBHelper.$fShowUserDB_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
9db0ea535878b612e683ecea61ecbd41
  $fShowUserDB_$cshowList :: [DBHelper.UserDB] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ DBHelper.UserDB
                   DBHelper.$fShowUserDB1) -}
9db0ea535878b612e683ecea61ecbd41
  $fShowUserDB_$cshowsPrec ::
    GHC.Types.Int -> DBHelper.UserDB -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: DBHelper.UserDB)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { DBHelper.UserDB ww3 ->
                 DBHelper.$w$cshowsPrec5 ww1 ww3 w2 } }) -}
22fcaf89b0c8fd808eff81a7771c2399
  $fToJSONLanguage ::
    Data.Aeson.Types.ToJSON.ToJSON DBHelper.Language
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.Language
                  DBHelper.$fToJSONLanguage_$ctoJSON
                  DBHelper.$fToJSONLanguage_$ctoEncoding
                  DBHelper.$fToJSONLanguage_$ctoJSONList
                  DBHelper.$fToJSONLanguage_$ctoEncodingList -}
22fcaf89b0c8fd808eff81a7771c2399
  $fToJSONLanguage1 ::
    DBHelper.Language
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: DBHelper.Language) ->
                 case w of ww { DBHelper.Language ww1 ww2 ->
                 case DBHelper.$w$ctoJSON ww1 ww2 of ww3 { Unit# ww4 ->
                 (Data.Aeson.Types.Internal.Object ww4)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
31b75daacc817a760827fccbc8688052
  $fToJSONLanguage2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><S,1*U>m4,
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (_opts :: Data.Aeson.Types.Internal.Options)
                   (ds :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (eta :: GHC.Generics.K1
                             GHC.Generics.R GHC.Integer.Type.Integer a1) ->
                 case eta
                        `cast`
                      (GHC.Generics.N:K1[0]
                           <GHC.Generics.R>_P
                           <GHC.Integer.Type.Integer>_R
                           <a1>_P) of dt1 { DEFAULT ->
                 Data.Aeson.Types.Internal.Number
                   (Data.Scientific.Scientific dt1 0#) }) -}
df170790d9b01dfe04afcc18e56cd5dc
  $fToJSONLanguage3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,A><L,A><S,1*U>m3, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case DBHelper.$w$dGToJSON @ a1 w2 of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.String ww1 }) -}
bd5f52fddce7071d4a3431dd78e462c2
  $fToJSONLanguage4 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4#) -}
22fcaf89b0c8fd808eff81a7771c2399
  $fToJSONLanguage_$ctoEncoding ::
    DBHelper.Language -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(U,U)>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: DBHelper.Language) ->
                 Data.Aeson.Encoding.Internal.value
                   (DBHelper.$fToJSONLanguage_$ctoJSON eta)) -}
22fcaf89b0c8fd808eff81a7771c2399
  $fToJSONLanguage_$ctoEncodingList ::
    [DBHelper.Language] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [DBHelper.Language]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (DBHelper.$fToJSONLanguage_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ DBHelper.Language
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: DBHelper.Language)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (DBHelper.$fToJSONLanguage_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<DBHelper.Language>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
22fcaf89b0c8fd808eff81a7771c2399
  $fToJSONLanguage_$ctoJSON ::
    DBHelper.Language -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U)>m1,
     Unfolding: InlineRule (0, True, True)
                DBHelper.$fToJSONLanguage1
                  `cast`
                (<DBHelper.Language>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
22fcaf89b0c8fd808eff81a7771c2399
  $fToJSONLanguage_$ctoJSONList ::
    [DBHelper.Language] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [DBHelper.Language]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ DBHelper.Language
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ DBHelper.Language
                                       c
                                       DBHelper.$fToJSONLanguage_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
d3285743ea1f47da0515d790e5d2ed7c
  $fToJSONLanguage_w2 :: Data.Aeson.Types.Internal.Options
  {- Strictness: m,
     Unfolding: (Data.Aeson.Types.Internal.Options
                   (GHC.Base.id @ GHC.Base.String)
                   (GHC.Base.id @ GHC.Base.String)
                   GHC.Types.True
                   GHC.Types.False
                   Data.Aeson.Types.Internal.defaultTaggedObject
                   GHC.Types.False) -}
f71116c23fab4ac41f3dd6995e814421
  $fToJSONLinkDB :: Data.Aeson.Types.ToJSON.ToJSON DBHelper.LinkDB
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.LinkDB
                  DBHelper.$fToJSONLinkDB_$ctoJSON
                  DBHelper.$fToJSONLinkDB_$ctoEncoding
                  DBHelper.$fToJSONLinkDB_$ctoJSONList
                  DBHelper.$fToJSONLinkDB_$ctoEncodingList -}
f71116c23fab4ac41f3dd6995e814421
  $fToJSONLinkDB1 ::
    DBHelper.LinkDB
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: DBHelper.LinkDB) ->
                 case w of ww { DBHelper.LinkDB ww1 ww2 ww3 ww4 ->
                 case DBHelper.$w$ctoJSON1 ww1 ww2 ww3 ww4 of ww5 { Unit# ww6 ->
                 (Data.Aeson.Types.Internal.Object ww6)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
9f2ed484eaa2c6ea5d449947c0be58a4
  $fToJSONLinkDB2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,A><L,A><S,1*U>m3, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case DBHelper.$w$dGToJSON1 @ a1 w2 of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.String ww1 }) -}
67f879f68af531b9420684a2c72b42eb
  $fToJSONLinkDB3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1 GHC.Generics.R GHC.Types.Int a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><S(S),1*U(U)>m4,
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (_opts :: Data.Aeson.Types.Internal.Options)
                   (ds :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (eta :: GHC.Generics.K1 GHC.Generics.R GHC.Types.Int a1) ->
                 case eta
                        `cast`
                      (GHC.Generics.N:K1[0]
                           <GHC.Generics.R>_P
                           <GHC.Types.Int>_R
                           <a1>_P) of wild { GHC.Types.I# i ->
                 case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                 Data.Aeson.Types.Internal.Number
                   (Data.Scientific.Scientific dt 0#) } }) -}
f71116c23fab4ac41f3dd6995e814421
  $fToJSONLinkDB_$ctoEncoding ::
    DBHelper.LinkDB -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: DBHelper.LinkDB) ->
                 Data.Aeson.Encoding.Internal.value
                   (DBHelper.$fToJSONLinkDB_$ctoJSON eta)) -}
f71116c23fab4ac41f3dd6995e814421
  $fToJSONLinkDB_$ctoEncodingList ::
    [DBHelper.LinkDB] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [DBHelper.LinkDB]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (DBHelper.$fToJSONLinkDB_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ DBHelper.LinkDB
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: DBHelper.LinkDB)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (DBHelper.$fToJSONLinkDB_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<DBHelper.LinkDB>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
f71116c23fab4ac41f3dd6995e814421
  $fToJSONLinkDB_$ctoJSON ::
    DBHelper.LinkDB -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U)>m1,
     Unfolding: InlineRule (0, True, True)
                DBHelper.$fToJSONLinkDB1
                  `cast`
                (<DBHelper.LinkDB>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
f71116c23fab4ac41f3dd6995e814421
  $fToJSONLinkDB_$ctoJSONList ::
    [DBHelper.LinkDB] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [DBHelper.LinkDB]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ DBHelper.LinkDB
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ DBHelper.LinkDB
                                       c
                                       DBHelper.$fToJSONLinkDB_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
f71116c23fab4ac41f3dd6995e814421
  $fToJSONListOb :: Data.Aeson.Types.ToJSON.ToJSON DBHelper.ListOb
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.ListOb
                  DBHelper.$fToJSONListOb_$ctoJSON
                  DBHelper.$fToJSONListOb_$ctoEncoding
                  DBHelper.$fToJSONListOb_$ctoJSONList
                  DBHelper.$fToJSONListOb_$ctoEncodingList -}
f71116c23fab4ac41f3dd6995e814421
  $fToJSONListOb1 ::
    DBHelper.ListOb
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U,U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: DBHelper.ListOb) ->
                 case w of ww { DBHelper.ListOb ww1 ww2 ww3 ->
                 case DBHelper.$w$ctoJSON2 ww1 ww2 ww3 of ww4 { Unit# ww5 ->
                 (Data.Aeson.Types.Internal.Object ww5)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
e8d4fd6e56f3baf702757d55eea652b9
  $fToJSONListOb10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "repoLanguage"#) -}
8dbb572625e22c8247c7e8f857b549ca
  $fToJSONListOb11 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><S,U>m5,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (_opts :: Data.Aeson.Types.Internal.Options)
                   (ds :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (eta :: GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool a1) ->
                 Data.Aeson.Types.Internal.$WBool
                   eta
                     `cast`
                   (GHC.Generics.N:K1[0]
                        <GHC.Generics.R>_P <GHC.Types.Bool>_R <a1>_P)) -}
a4ea12556d367d4d2ef51eb3583fc38e
  $fToJSONListOb12 :: GHC.Generics.SingI ('GHC.Base.Just "recent")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fToJSONListOb13
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "recent">_N) -}
a39f90d9d04e14afe14d5a390a8f2d0e
  $fToJSONListOb13 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "recent")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "recent")
                   @ "recent"
                   @~ <'GHC.Base.Just "recent">_N
                   DBHelper.$fToJSONListOb14
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"recent">_N)) -}
b5a7acb58a8e71bbc62d121d031a60e9
  $fToJSONListOb14 :: GHC.Generics.R:SingSymbols "recent"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "recent"
                   DBHelper.$fToJSONListOb15
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"recent">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"recent">_N))) -}
8022c7255b1aa3c06eadc16b1c446a46
  $fToJSONListOb15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "recent"#) -}
ef91520dcb715e262b20c7d6544034b0
  $fToJSONListOb16 :: GHC.Generics.SingI ('GHC.Base.Just "repoSize")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fToJSONListOb17
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "repoSize">_N) -}
961161a451c3d8d7387b3b23c42fbf3b
  $fToJSONListOb17 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "repoSize")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "repoSize")
                   @ "repoSize"
                   @~ <'GHC.Base.Just "repoSize">_N
                   DBHelper.$fToJSONListOb18
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"repoSize">_N)) -}
fc480596b5b8f9f2897e5e45487fd5f6
  $fToJSONListOb18 :: GHC.Generics.R:SingSymbols "repoSize"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "repoSize"
                   DBHelper.$fToJSONListOb19
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"repoSize">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"repoSize">_N))) -}
8751dc62acc223ab7be20fb643b387bd
  $fToJSONListOb19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "repoSize"#) -}
f71116c23fab4ac41f3dd6995e814421
  $fToJSONListOb2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1 GHC.Generics.R [DBHelper.LinkDB] a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,A><L,A><S,1*U>m2, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: GHC.Generics.K1 GHC.Generics.R [DBHelper.LinkDB] a1) ->
                 case DBHelper.$w$dGToJSON2 @ a1 w2 of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Array ww1 }) -}
c2c1215ab202bd49fe1c8858e3ed6913
  $fToJSONListOb20 :: GHC.Generics.SingI ('GHC.Base.Just "repoOwner")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fToJSONListOb21
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "repoOwner">_N) -}
9ca5329fa5905182ce5c9318c8198da2
  $fToJSONListOb21 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "repoOwner")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "repoOwner")
                   @ "repoOwner"
                   @~ <'GHC.Base.Just "repoOwner">_N
                   DBHelper.$fToJSONListOb22
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"repoOwner">_N)) -}
1cd9278701bfb4fec532784cfd130130
  $fToJSONListOb22 :: GHC.Generics.R:SingSymbols "repoOwner"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "repoOwner"
                   DBHelper.$fToJSONListOb23
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"repoOwner">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"repoOwner">_N))) -}
8060585c82ab58c4c86f5997bd7b6b99
  $fToJSONListOb23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "repoOwner"#) -}
b0759ec4a54e80a0a08e7d7f32310127
  $fToJSONListOb24 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,A><L,A><S,1*U>m3, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case DBHelper.$w$dGToJSON4 @ a1 w2 of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.String ww1 }) -}
5afdaa7878358bd8373af03afa95fa75
  $fToJSONListOb25 :: GHC.Generics.SingI ('GHC.Base.Just "repoName")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fToJSONListOb26
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "repoName">_N) -}
164afaa5fb367696a48239453040a590
  $fToJSONListOb26 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "repoName")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "repoName")
                   @ "repoName"
                   @~ <'GHC.Base.Just "repoName">_N
                   DBHelper.$fToJSONListOb27
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"repoName">_N)) -}
cd762bc703bdfa2e625c73c10bdaa6da
  $fToJSONListOb27 :: GHC.Generics.R:SingSymbols "repoName"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "repoName"
                   DBHelper.$fToJSONListOb28
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"repoName">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"repoName">_N))) -}
0913cff90e3dc2584b73de1713d14c91
  $fToJSONListOb28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "repoName"#) -}
9e8866d8d11540ee7ccc98b020a4d5bd
  $fToJSONListOb29 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          Data.Aeson.Types.Internal.Value,
        GHC.Types.Int)
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
0816eed8b508624bb0173f906a6f988b
  $fToJSONListOb3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0#) -}
7093e5650a35a45457ba78dd398cf6b8
  $fToJSONListOb30 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1 GHC.Generics.R [DBHelper.UserDB] a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,A><L,A><S,1*U>m2, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: GHC.Generics.K1 GHC.Generics.R [DBHelper.UserDB] a1) ->
                 case DBHelper.$w$dGToJSON5 @ a1 w2 of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Array ww1 }) -}
9db0ea535878b612e683ecea61ecbd41
  $fToJSONListOb31 ::
    DBHelper.UserDB
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <L,1*U(1*U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: DBHelper.UserDB) ->
                 case DBHelper.$w$ctoJSON4 w of ww { Unit# ww1 ->
                 (Data.Aeson.Types.Internal.Object ww1)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) }) -}
410fce3923187051fd41708d49ceef81
  $fToJSONListOb32 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,A><L,A><S,1*U>m3, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case DBHelper.$w$dGToJSON6 @ a1 w2 of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.String ww1 }) -}
5d2692466da05ac0212e34b74f02575a
  $fToJSONListOb33 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          Data.Aeson.Types.Internal.Value,
        GHC.Types.Int)
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
92fdb32b04421287d9bfcadfd14e3fbe
  $fToJSONListOb4 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
          Data.Aeson.Types.Internal.Value,
        GHC.Types.Int)
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST GHC.Prim.RealWorld))
             Data.Aeson.Types.Internal.Value,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><S,U> -}
10f15f217a5ceceb6cee6f136d3ff157
  $fToJSONListOb5 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1 GHC.Generics.R [DBHelper.RepoDB] a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,A><L,A><S,1*U>m2, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: GHC.Generics.K1 GHC.Generics.R [DBHelper.RepoDB] a1) ->
                 case DBHelper.$w$dGToJSON3 @ a1 w2 of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.Array ww1 }) -}
11c665402619553a2690f82da4927c4a
  $fToJSONListOb6 ::
    DBHelper.RepoDB
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U,U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: DBHelper.RepoDB) ->
                 case w of ww { DBHelper.RepoDB ww1 ww2 ww3 ww4 ww5 ->
                 case DBHelper.$w$ctoJSON3 ww1 ww2 ww3 ww4 ww5 of ww6 { Unit# ww7 ->
                 (Data.Aeson.Types.Internal.Object ww7)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
77c0f016bb070e503dc633dcb8cbaeb4
  $fToJSONListOb7 ::
    GHC.Generics.SingI ('GHC.Base.Just "repoLanguage")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fToJSONListOb8
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "repoLanguage">_N) -}
7bf6cb5e67f887d10940b6991a3597d5
  $fToJSONListOb8 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "repoLanguage")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "repoLanguage")
                   @ "repoLanguage"
                   @~ <'GHC.Base.Just "repoLanguage">_N
                   DBHelper.$fToJSONListOb9
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"repoLanguage">_N)) -}
1dd1613692b5a4da3f49ec0d7c1a9285
  $fToJSONListOb9 :: GHC.Generics.R:SingSymbols "repoLanguage"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "repoLanguage"
                   DBHelper.$fToJSONListOb10
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"repoLanguage">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"repoLanguage">_N))) -}
f71116c23fab4ac41f3dd6995e814421
  $fToJSONListOb_$ctoEncoding ::
    DBHelper.ListOb -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(U,U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: DBHelper.ListOb) ->
                 Data.Aeson.Encoding.Internal.value
                   (DBHelper.$fToJSONListOb_$ctoJSON eta)) -}
f71116c23fab4ac41f3dd6995e814421
  $fToJSONListOb_$ctoEncodingList ::
    [DBHelper.ListOb] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [DBHelper.ListOb]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (DBHelper.$fToJSONListOb_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ DBHelper.ListOb
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: DBHelper.ListOb)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (DBHelper.$fToJSONListOb_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<DBHelper.ListOb>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
f71116c23fab4ac41f3dd6995e814421
  $fToJSONListOb_$ctoJSON ::
    DBHelper.ListOb -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U,U)>m1,
     Unfolding: InlineRule (0, True, True)
                DBHelper.$fToJSONListOb1
                  `cast`
                (<DBHelper.ListOb>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
f71116c23fab4ac41f3dd6995e814421
  $fToJSONListOb_$ctoJSONList ::
    [DBHelper.ListOb] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [DBHelper.ListOb]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ DBHelper.ListOb
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ DBHelper.ListOb
                                       c
                                       DBHelper.$fToJSONListOb_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
ce907c442750779427988a59714a3c5c
  $fToJSONListOb_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "repoLanguage")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "repoLanguage")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "repoLanguage")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fToJSONListOb7
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "repoLanguage")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fToJSONListOb7
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "repoLanguage")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fToJSONListOb7
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
03af5d4e139751a22e58ab8fb9921b02
  $fToJSONListOb_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "recent")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "recent")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "recent")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fToJSONListOb12
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "recent")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fToJSONListOb12
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "recent")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fToJSONListOb12
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
49d8a5f6617a7fb64f8cd05b37f360b0
  $fToJSONListOb_$s$fSelectorMetaMetaSel2 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "repoSize")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "repoSize")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel_$cselName2
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "repoSize")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fToJSONListOb16
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "repoSize")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fToJSONListOb16
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "repoSize")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fToJSONListOb16
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
7f01c44398ad48b1bf79dbf0c4739167
  $fToJSONListOb_$s$fSelectorMetaMetaSel3 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "repoOwner")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "repoOwner")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel_$cselName3
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "repoOwner")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fToJSONListOb20
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "repoOwner")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fToJSONListOb20
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "repoOwner")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fToJSONListOb20
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
cce13deae56d8ca9da9e9c796acf1d09
  $fToJSONListOb_$s$fSelectorMetaMetaSel4 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "repoName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "repoName")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel_$cselName4
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "repoName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fToJSONListOb25
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "repoName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fToJSONListOb25
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "repoName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fToJSONListOb25
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
f406c4616a5c602a90fc0116a7b621fa
  $fToJSONListOb_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "repoLanguage")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "repoLanguage")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fToJSONListOb10) -}
ae09f52effe78711bd063f1341f63d68
  $fToJSONListOb_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "recent")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "recent")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fToJSONListOb15) -}
8900d4f4ef21bb6fa6ad19c1f832364b
  $fToJSONListOb_$s$fSelectorMetaMetaSel_$cselName2 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "repoSize")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "repoSize")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fToJSONListOb19) -}
b1ed95e5654dfaea61c99f7c972ffe83
  $fToJSONListOb_$s$fSelectorMetaMetaSel_$cselName3 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "repoOwner")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "repoOwner")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fToJSONListOb23) -}
db6f793fd022d6110fee9b0fd73e7536
  $fToJSONListOb_$s$fSelectorMetaMetaSel_$cselName4 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "repoName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "repoName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fToJSONListOb28) -}
3a02f93a20b244c7babce0966838c2bf
  $fToJSONLog :: Data.Aeson.Types.ToJSON.ToJSON DBHelper.Log
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.Log
                  DBHelper.$fToJSONLog_$ctoJSON
                  DBHelper.$fToJSONLog_$ctoEncoding
                  DBHelper.$fToJSONLog_$ctoJSONList
                  DBHelper.$fToJSONLog_$ctoEncodingList -}
3a02f93a20b244c7babce0966838c2bf
  $fToJSONLog1 ::
    DBHelper.Log
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: DBHelper.Log) ->
                 case w of ww { DBHelper.Log ww1 ww2 ->
                 case DBHelper.$w$ctoJSON5 ww1 ww2 of ww3 { Unit# ww4 ->
                 (Data.Aeson.Types.Internal.Object ww4)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
b86bf373f5350fb5a4cdf39059128119
  $fToJSONLog2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,A><L,A><S,1*U>m3, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case DBHelper.$w$dGToJSON7 @ a1 w2 of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.String ww1 }) -}
3a02f93a20b244c7babce0966838c2bf
  $fToJSONLog_$ctoEncoding ::
    DBHelper.Log -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(U,U)>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: DBHelper.Log) ->
                 Data.Aeson.Encoding.Internal.value
                   (DBHelper.$fToJSONLog_$ctoJSON eta)) -}
3a02f93a20b244c7babce0966838c2bf
  $fToJSONLog_$ctoEncodingList ::
    [DBHelper.Log] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [DBHelper.Log]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (DBHelper.$fToJSONLog_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ DBHelper.Log
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: DBHelper.Log)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (DBHelper.$fToJSONLog_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<DBHelper.Log>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
3a02f93a20b244c7babce0966838c2bf
  $fToJSONLog_$ctoJSON ::
    DBHelper.Log -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U)>m1,
     Unfolding: InlineRule (0, True, True)
                DBHelper.$fToJSONLog1
                  `cast`
                (<DBHelper.Log>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
3a02f93a20b244c7babce0966838c2bf
  $fToJSONLog_$ctoJSONList ::
    [DBHelper.Log] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [DBHelper.Log]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ DBHelper.Log
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ DBHelper.Log
                                       c
                                       DBHelper.$fToJSONLog_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
11c665402619553a2690f82da4927c4a
  $fToJSONRepoDB :: Data.Aeson.Types.ToJSON.ToJSON DBHelper.RepoDB
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.RepoDB
                  DBHelper.$fToJSONRepoDB_$ctoJSON
                  DBHelper.$fToJSONRepoDB_$ctoEncoding
                  DBHelper.$fToJSONRepoDB_$ctoJSONList
                  DBHelper.$fToJSONRepoDB_$ctoEncodingList -}
11c665402619553a2690f82da4927c4a
  $fToJSONRepoDB_$ctoEncoding ::
    DBHelper.RepoDB -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: DBHelper.RepoDB) ->
                 Data.Aeson.Encoding.Internal.value
                   (DBHelper.$fToJSONRepoDB_$ctoJSON eta)) -}
11c665402619553a2690f82da4927c4a
  $fToJSONRepoDB_$ctoEncodingList ::
    [DBHelper.RepoDB] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [DBHelper.RepoDB]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (DBHelper.$fToJSONRepoDB_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ DBHelper.RepoDB
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: DBHelper.RepoDB)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (DBHelper.$fToJSONRepoDB_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<DBHelper.RepoDB>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
11c665402619553a2690f82da4927c4a
  $fToJSONRepoDB_$ctoJSON ::
    DBHelper.RepoDB -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U,U,U,U)>m1,
     Unfolding: InlineRule (0, True, True)
                DBHelper.$fToJSONListOb6
                  `cast`
                (<DBHelper.RepoDB>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
11c665402619553a2690f82da4927c4a
  $fToJSONRepoDB_$ctoJSONList ::
    [DBHelper.RepoDB] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [DBHelper.RepoDB]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ DBHelper.RepoDB
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ DBHelper.RepoDB
                                       c
                                       DBHelper.$fToJSONRepoDB_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
9db0ea535878b612e683ecea61ecbd41
  $fToJSONUserDB :: Data.Aeson.Types.ToJSON.ToJSON DBHelper.UserDB
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.UserDB
                  DBHelper.$fToJSONUserDB_$ctoJSON
                  DBHelper.$fToJSONUserDB_$ctoEncoding
                  DBHelper.$fToJSONUserDB_$ctoJSONList
                  DBHelper.$fToJSONUserDB_$ctoEncodingList -}
9db0ea535878b612e683ecea61ecbd41
  $fToJSONUserDB_$ctoEncoding ::
    DBHelper.UserDB -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <L,1*U(1*U)>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: DBHelper.UserDB) ->
                 Data.Aeson.Encoding.Internal.value
                   (DBHelper.$fToJSONUserDB_$ctoJSON eta)) -}
9db0ea535878b612e683ecea61ecbd41
  $fToJSONUserDB_$ctoEncodingList ::
    [DBHelper.UserDB] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [DBHelper.UserDB]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (DBHelper.$fToJSONUserDB_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ DBHelper.UserDB
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: DBHelper.UserDB)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (DBHelper.$fToJSONUserDB_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<DBHelper.UserDB>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
9db0ea535878b612e683ecea61ecbd41
  $fToJSONUserDB_$ctoJSON ::
    DBHelper.UserDB -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <L,1*U(1*U)>m1,
     Unfolding: InlineRule (0, True, True)
                DBHelper.$fToJSONListOb31
                  `cast`
                (<DBHelper.UserDB>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
9db0ea535878b612e683ecea61ecbd41
  $fToJSONUserDB_$ctoJSONList ::
    [DBHelper.UserDB] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [DBHelper.UserDB]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ DBHelper.UserDB
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ DBHelper.UserDB
                                       c
                                       DBHelper.$fToJSONUserDB_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
d9eddca490a3db9525db1ad5e49649b5
  $sfromList ::
    [(Data.Text.Internal.Text, a)]
    -> Data.Map.Base.Map Data.Text.Internal.Text a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Data.Text.Internal.Text, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Base.Tip @ Data.Text.Internal.Text @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                           Data.Map.Base.Bin
                             @ Data.Text.Internal.Text
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a)
                             (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case ky of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild4 {
                             DEFAULT
                             -> DBHelper.$sfromList1
                                  @ a
                                  (Data.Map.Base.Bin
                                     @ Data.Text.Internal.Text
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a)
                                     (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a))
                                  wild2
                             GHC.Types.LT
                             -> DBHelper.$wpoly_go10
                                  @ a
                                  1#
                                  (Data.Map.Base.Bin
                                     @ Data.Text.Internal.Text
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a)
                                     (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a))
                                  wild2 } } } } } } }) -}
0b650b097eee84d1b817097b78649499
  $sfromList1 ::
    Data.Map.Base.Map Data.Text.Internal.Text a1
    -> [(Data.Text.Internal.Text, a1)]
    -> Data.Map.Base.Map Data.Text.Internal.Text a1
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
bd0e72a2bc65ce1a42e1ff9799fdb35b
  $tc'Language :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17241086562459415294##
                   14347759910216518952##
                   DBHelper.$trModule
                   DBHelper.$tc'Language1) -}
12ffc266345fae1d7579cd694c8b8581
  $tc'Language1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Language"#) -}
9227fa2418e9390797a827b39cbdad4d
  $tc'LinkDB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4003218452395596128##
                   237138443607224462##
                   DBHelper.$trModule
                   DBHelper.$tc'LinkDB1) -}
a170af45d8ea9a6874186d9a29938839
  $tc'LinkDB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LinkDB"#) -}
695de498c4cda1176baaa7b87ad03235
  $tc'ListOb :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8250607994906576221##
                   8060383616865155159##
                   DBHelper.$trModule
                   DBHelper.$tc'ListOb1) -}
3b4ae3998e6e3864f93e33e52b6eb6a1
  $tc'ListOb1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ListOb"#) -}
d115f1a88cf36d6b30b66c49940613a2
  $tc'Log :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17310726561241887488##
                   17196169241394770168##
                   DBHelper.$trModule
                   DBHelper.$tc'Log1) -}
4f321626e634c4bb2f117959a75cb5f6
  $tc'Log1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Log"#) -}
4c116b82fb0ade863ff7e0c775798cfa
  $tc'RepoDB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17918543166161473010##
                   1128822611091817268##
                   DBHelper.$trModule
                   DBHelper.$tc'RepoDB1) -}
d6120dbc4d5cef27bb83ccf462ada9e4
  $tc'RepoDB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'RepoDB"#) -}
019b8583a45427e4b899c406367aa505
  $tc'UserDB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10146342157458587928##
                   11517552803062799572##
                   DBHelper.$trModule
                   DBHelper.$tc'UserDB1) -}
243b5277972ff3b92bbb4cda7a30bdc0
  $tc'UserDB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'UserDB"#) -}
731b23c80c53db209a41365bbf47fcc2
  $tcLanguage :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15048128576328835812##
                   8253129685526172527##
                   DBHelper.$trModule
                   DBHelper.$tcLanguage1) -}
4283c30aeb7bd25e0302d59ae7390e1f
  $tcLanguage1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Language"#) -}
a71cdff929defe4f8c75052cbebaa9f9
  $tcLinkDB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9750355635391193916##
                   3786597433952856905##
                   DBHelper.$trModule
                   DBHelper.$tcLinkDB1) -}
8f97b6e31925dd28987a71318e39dbdf
  $tcLinkDB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "LinkDB"#) -}
ee84064ac033338210ab7980dee474a3
  $tcListOb :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10293466129785718571##
                   8320329176187202685##
                   DBHelper.$trModule
                   DBHelper.$tcListOb1) -}
1b9816f2b9a47640ae16f02b699d8fb8
  $tcListOb1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ListOb"#) -}
0203faa80cbe4a49fdd233572fef4d01
  $tcLog :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11709781231001326363##
                   2535306318387192705##
                   DBHelper.$trModule
                   DBHelper.$tcLog1) -}
9930707dc03c174c1dff6393243021b2
  $tcLog1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Log"#) -}
54cea63e3dcb7ab98eca2e0bcc9aa2a1
  $tcRepoDB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17580910530791817380##
                   16602108095392881934##
                   DBHelper.$trModule
                   DBHelper.$tcRepoDB1) -}
b160e7da47064d51c99616917d7a5f75
  $tcRepoDB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "RepoDB"#) -}
0cab600ed55c1c7a6d5a18b75510b0b5
  $tcUserDB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16305130693185383179##
                   14435387271148300593##
                   DBHelper.$trModule
                   DBHelper.$tcUserDB1) -}
cf213ad9f561d6d0329a25391186305d
  $tcUserDB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "UserDB"#) -}
01d9851b4f70a18c6ed658f403739f8b
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   DBHelper.$trModule2
                   DBHelper.$trModule1) -}
5a4cb63b14981e918deaaa1d4ab3445f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "DBHelper"#) -}
9a44e0490c6644a263149ddf875703a4
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"#) -}
e6093290e95c79e64be3639ea49565a2
  $w$c/= ::
    GHC.Base.String
    -> GHC.Integer.Type.Integer
    -> GHC.Base.String
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case GHC.Integer.Type.eqInteger# ww1 ww3 of wild1 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } } }) -}
8774008116260d061690fef052c11052
  $w$c/=1 ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U)><S,1*U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Types.Int) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case ww1 of wild1 { GHC.Types.I# x ->
                      case ww3 of wild2 { GHC.Types.I# y ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# x y) of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } } } }) -}
d7f6bac3fd44eac45f9a00902413b799
  $w$c== ::
    GHC.Base.String
    -> GHC.Integer.Type.Integer
    -> GHC.Base.String
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Integer.Type.Integer) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True -> GHC.Integer.Type.eqInteger ww1 ww3 }) -}
1705db1e650b6ccdb0a11eebc20af230
  $w$c==1 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 8, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><S,U><L,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Base.String)
                   (ww6 :: GHC.Base.String)
                   (ww7 :: GHC.Base.String) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww4) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Base.eqString ww1 ww5 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Base.eqString ww2 ww6 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> GHC.Base.eqString ww3 ww7 } } }) -}
f71116c23fab4ac41f3dd6995e814421
  $w$c==2 ::
    [DBHelper.UserDB]
    -> [DBHelper.RepoDB]
    -> [DBHelper.LinkDB]
    -> [DBHelper.UserDB]
    -> [DBHelper.RepoDB]
    -> [DBHelper.LinkDB]
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: [DBHelper.UserDB])
                   (ww1 :: [DBHelper.RepoDB])
                   (ww2 :: [DBHelper.LinkDB])
                   (ww3 :: [DBHelper.UserDB])
                   (ww4 :: [DBHelper.RepoDB])
                   (ww5 :: [DBHelper.LinkDB]) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ DBHelper.UserDB
                        DBHelper.$fEqUserDB
                        ww
                        ww3 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Classes.$fEq[]_$c==
                             @ DBHelper.RepoDB
                             DBHelper.$fEqRepoDB
                             ww1
                             ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> GHC.Classes.$fEq[]_$c==
                             @ DBHelper.LinkDB
                             DBHelper.$fEqLinkDB
                             ww2
                             ww5 } }) -}
7109fc78b2180dbb81170fcdc0e7f4ad
  $w$c==3 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U(U)><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U(U)><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Types.Int)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: GHC.Base.String)
                   (ww5 :: GHC.Base.String)
                   (ww6 :: GHC.Base.String)
                   (ww7 :: GHC.Types.Int)
                   (ww8 :: GHC.Types.Bool)
                   (ww9 :: GHC.Base.String) ->
                 case GHC.Base.eqString ww ww5 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Base.eqString ww1 ww6 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case ww2 of wild2 { GHC.Types.I# x ->
                           case ww7 of wild3 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# x y) of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case ww3 of wild5 {
                                  GHC.Types.False
                                  -> case ww8 of wild6 {
                                       GHC.Types.False -> GHC.Base.eqString ww4 ww9
                                       GHC.Types.True -> GHC.Types.False }
                                  GHC.Types.True
                                  -> case ww8 of wild6 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True -> GHC.Base.eqString ww4 ww9 } } } } } } }) -}
c2548748167990430d4aff3d6ed00f9b
  $w$c==4 ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U(U)><S,1*U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Types.Int) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True -> GHC.Classes.eqInt ww1 ww3 }) -}
aa662db5a4079b419ba98e1988a1b10f
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Integer.Type.Integer
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Integer.Type.Integer)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       DBHelper.$fShowLanguage6
                       (GHC.Base.++
                          @ GHC.Types.Char
                          DBHelper.$fShowLanguage5
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows6
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows6
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      DBHelper.$fShowLanguage4
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         DBHelper.$fShowLanguage3
                                         (case GHC.Show.$w$cshowsPrec1
                                                 0#
                                                 ww2
                                                 (GHC.Base.++
                                                    @ GHC.Types.Char
                                                    DBHelper.$fShowLanguage2
                                                    x) of ww3 { (#,#) ww4 ww5 ->
                                          GHC.Types.: @ GHC.Types.Char ww4 ww5 })))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w)) }) -}
7f33e9fc269a727aea5a6f4ee56d77f3
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 6, Strictness: <S,U><L,1*U(U)><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (ww4 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       DBHelper.$fShowLinkDB6
                       (case ww1 of ww5 { GHC.Types.I# ww6 ->
                        case GHC.Show.$wshowSignedInt
                               0#
                               ww6
                               (GHC.Base.++
                                  @ GHC.Types.Char
                                  DBHelper.$fShowLanguage4
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     DBHelper.$fShowLinkDB5
                                     (GHC.Types.:
                                        @ GHC.Types.Char
                                        GHC.Show.shows6
                                        (GHC.Show.showLitString
                                           ww2
                                           (GHC.Types.:
                                              @ GHC.Types.Char
                                              GHC.Show.shows6
                                              (GHC.Base.++
                                                 @ GHC.Types.Char
                                                 DBHelper.$fShowLanguage4
                                                 (GHC.Base.++
                                                    @ GHC.Types.Char
                                                    DBHelper.$fShowLinkDB4
                                                    (GHC.Types.:
                                                       @ GHC.Types.Char
                                                       GHC.Show.shows6
                                                       (GHC.Show.showLitString
                                                          ww3
                                                          (GHC.Types.:
                                                             @ GHC.Types.Char
                                                             GHC.Show.shows6
                                                             (GHC.Base.++
                                                                @ GHC.Types.Char
                                                                DBHelper.$fShowLanguage4
                                                                (GHC.Base.++
                                                                   @ GHC.Types.Char
                                                                   DBHelper.$fShowLinkDB3
                                                                   (GHC.Types.:
                                                                      @ GHC.Types.Char
                                                                      GHC.Show.shows6
                                                                      (GHC.Show.showLitString
                                                                         ww4
                                                                         (GHC.Types.:
                                                                            @ GHC.Types.Char
                                                                            GHC.Show.shows6
                                                                            (GHC.Base.++
                                                                               @ GHC.Types.Char
                                                                               DBHelper.$fShowLanguage2
                                                                               x)))))))))))))))) of ww7 { (#,#) ww8 ww9 ->
                        GHC.Types.: @ GHC.Types.Char ww8 ww9 } })
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++ @ GHC.Types.Char DBHelper.$fShowLinkDB2 (g w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (GHC.Base.++
                           @ GHC.Types.Char
                           DBHelper.$fShowLinkDB2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w))) }) -}
f71116c23fab4ac41f3dd6995e814421
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> [DBHelper.UserDB]
    -> [DBHelper.RepoDB]
    -> [DBHelper.LinkDB]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0] -}
e586d947c5ea824124206a271c630b08
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Types.Int)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       DBHelper.$fShowLog4
                       (GHC.Base.++
                          @ GHC.Types.Char
                          DBHelper.$fShowLog3
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows6
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows6
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      DBHelper.$fShowLanguage4
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         DBHelper.$fShowLog2
                                         (case ww2 of ww3 { GHC.Types.I# ww4 ->
                                          case GHC.Show.$wshowSignedInt
                                                 0#
                                                 ww4
                                                 (GHC.Base.++
                                                    @ GHC.Types.Char
                                                    DBHelper.$fShowLanguage2
                                                    x) of ww5 { (#,#) ww6 ww7 ->
                                          GHC.Types.: @ GHC.Types.Char ww6 ww7 } })))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w)) }) -}
71a5caa56ef6932d92f960707d05b580
  $w$cshowsPrec4 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 7,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U(U)><L,1*U><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Types.Int)
                   (ww4 :: GHC.Types.Bool)
                   (ww5 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       DBHelper.$fShowRepoDB7
                       (GHC.Base.++
                          @ GHC.Types.Char
                          DBHelper.$fShowRepoDB6
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows6
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows6
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      DBHelper.$fShowLanguage4
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         DBHelper.$fShowRepoDB5
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows6
                                            (GHC.Show.showLitString
                                               ww2
                                               (GHC.Types.:
                                                  @ GHC.Types.Char
                                                  GHC.Show.shows6
                                                  (GHC.Base.++
                                                     @ GHC.Types.Char
                                                     DBHelper.$fShowLanguage4
                                                     (GHC.Base.++
                                                        @ GHC.Types.Char
                                                        DBHelper.$fShowRepoDB4
                                                        (case ww3 of ww6 { GHC.Types.I# ww7 ->
                                                         case GHC.Show.$wshowSignedInt
                                                                0#
                                                                ww7
                                                                (GHC.Base.++
                                                                   @ GHC.Types.Char
                                                                   DBHelper.$fShowLanguage4
                                                                   (GHC.Base.++
                                                                      @ GHC.Types.Char
                                                                      DBHelper.$fShowRepoDB3
                                                                      (let {
                                                                         eta :: GHC.Base.String
                                                                         = GHC.Base.++
                                                                             @ GHC.Types.Char
                                                                             DBHelper.$fShowLanguage4
                                                                             (GHC.Base.++
                                                                                @ GHC.Types.Char
                                                                                DBHelper.$fShowRepoDB2
                                                                                (GHC.Types.:
                                                                                   @ GHC.Types.Char
                                                                                   GHC.Show.shows6
                                                                                   (GHC.Show.showLitString
                                                                                      ww5
                                                                                      (GHC.Types.:
                                                                                         @ GHC.Types.Char
                                                                                         GHC.Show.shows6
                                                                                         (GHC.Base.++
                                                                                            @ GHC.Types.Char
                                                                                            DBHelper.$fShowLanguage2
                                                                                            x)))))
                                                                       } in
                                                                       case ww4 of wild {
                                                                         GHC.Types.False
                                                                         -> GHC.Base.++
                                                                              @ GHC.Types.Char
                                                                              GHC.Show.shows18
                                                                              eta
                                                                         GHC.Types.True
                                                                         -> GHC.Base.++
                                                                              @ GHC.Types.Char
                                                                              GHC.Show.shows17
                                                                              eta }))) of ww8 { (#,#) ww9 ww10 ->
                                                         GHC.Types.:
                                                           @ GHC.Types.Char
                                                           ww9
                                                           ww10 } }))))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w)) }) -}
801ec44b7635de1b5df97df096ad06f5
  $w$cshowsPrec5 ::
    GHC.Prim.Int#
    -> GHC.Base.String -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       DBHelper.$fShowUserDB3
                       (GHC.Base.++
                          @ GHC.Types.Char
                          DBHelper.$fShowUserDB2
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows6
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows6
                                   (GHC.Base.++ @ GHC.Types.Char DBHelper.$fShowLanguage2 x)))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w)) }) -}
808883f849c4d3410ba37f49214100b2
  $w$ctoJSON ::
    GHC.Base.String
    -> GHC.Integer.Type.Integer
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Integer.Type.Integer) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                           @ ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "name")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                           @ Data.Aeson.Types.Generic.Zero
                           @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                           DBHelper.$fFromJSONLanguage_$s$fSelectorMetaMetaSel1
                           DBHelper.$fToJSONLanguage3
                             `cast`
                           (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                     <Data.Aeson.Types.Generic.Zero>_N
                                     <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                           @ GHC.Prim.Any
                           DBHelper.$fToJSONLanguage_w2
                           (Data.Aeson.Types.ToJSON.$WNoToArgs
                              @ Data.Aeson.Types.Internal.Value
                              @ GHC.Prim.Any)
                           ww
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "name")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Base.String>_R) <GHC.Prim.Any>_N))
                           (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                              @ ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "value")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                              @ Data.Aeson.Types.Generic.Zero
                              @ (GHC.Generics.K1 GHC.Generics.R GHC.Integer.Type.Integer)
                              DBHelper.$fFromJSONLanguage_$s$fSelectorMetaMetaSel
                              DBHelper.$fToJSONLanguage2
                                `cast`
                              (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                        <Data.Aeson.Types.Generic.Zero>_N
                                        <GHC.Generics.K1
                                           GHC.Generics.R GHC.Integer.Type.Integer>_N))
                              @ GHC.Prim.Any
                              DBHelper.$fToJSONLanguage_w2
                              (Data.Aeson.Types.ToJSON.$WNoToArgs
                                 @ Data.Aeson.Types.Internal.Value
                                 @ GHC.Prim.Any)
                              ww1
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <GHC.Integer.Type.Integer>_R
                                             <GHC.Prim.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "value")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                GHC.Integer.Type.Integer>_R) <GHC.Prim.Any>_N))
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (# dt1 #) }) -}
77a76f35836018eb473be6f891d87a3b
  $w$ctoJSON1 ::
    GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Int)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                           @ ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "linkType")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                           @ Data.Aeson.Types.Generic.Zero
                           @ (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                           DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel3
                           DBHelper.$fToJSONLinkDB3
                             `cast`
                           (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                     <Data.Aeson.Types.Generic.Zero>_N
                                     <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_N))
                           @ GHC.Prim.Any
                           DBHelper.$fToJSONLanguage_w2
                           (Data.Aeson.Types.ToJSON.$WNoToArgs
                              @ Data.Aeson.Types.Internal.Value
                              @ GHC.Prim.Any)
                           ww
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Types.Int>_R <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "linkType")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Types.Int>_R) <GHC.Prim.Any>_N))
                           (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                              @ ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "linkName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                              @ Data.Aeson.Types.Generic.Zero
                              @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                              DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel2
                              DBHelper.$fToJSONLinkDB2
                                `cast`
                              (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                        <Data.Aeson.Types.Generic.Zero>_N
                                        <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                              @ GHC.Prim.Any
                              DBHelper.$fToJSONLanguage_w2
                              (Data.Aeson.Types.ToJSON.$WNoToArgs
                                 @ Data.Aeson.Types.Internal.Value
                                 @ GHC.Prim.Any)
                              ww1
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <GHC.Base.String>_R
                                             <GHC.Prim.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "linkName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                GHC.Base.String>_R) <GHC.Prim.Any>_N))
                              (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                                 @ ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "source")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                 @ Data.Aeson.Types.Generic.Zero
                                 @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                 DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel1
                                 DBHelper.$fToJSONLinkDB2
                                   `cast`
                                 (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                           <Data.Aeson.Types.Generic.Zero>_N
                                           <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                 @ GHC.Prim.Any
                                 DBHelper.$fToJSONLanguage_w2
                                 (Data.Aeson.Types.ToJSON.$WNoToArgs
                                    @ Data.Aeson.Types.Internal.Value
                                    @ GHC.Prim.Any)
                                 ww2
                                   `cast`
                                 (Trans
                                      (Sym (GHC.Generics.N:K1[0]
                                                <GHC.Generics.R>_P
                                                <GHC.Base.String>_R
                                                <GHC.Prim.Any>_P))
                                      (Sym (GHC.Generics.N:M1[0]
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "source")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R
                                                   GHC.Base.String>_R) <GHC.Prim.Any>_N))
                                 (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                                    @ ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "destination")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                    @ Data.Aeson.Types.Generic.Zero
                                    @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                    DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel
                                    DBHelper.$fToJSONLinkDB2
                                      `cast`
                                    (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                              <Data.Aeson.Types.Generic.Zero>_N
                                              <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                    @ GHC.Prim.Any
                                    DBHelper.$fToJSONLanguage_w2
                                    (Data.Aeson.Types.ToJSON.$WNoToArgs
                                       @ Data.Aeson.Types.Internal.Value
                                       @ GHC.Prim.Any)
                                    ww3
                                      `cast`
                                    (Trans
                                         (Sym (GHC.Generics.N:K1[0]
                                                   <GHC.Generics.R>_P
                                                   <GHC.Base.String>_R
                                                   <GHC.Prim.Any>_P))
                                         (Sym (GHC.Generics.N:M1[0]
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "destination")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      GHC.Base.String>_R) <GHC.Prim.Any>_N))
                                    (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (# dt1 #) }) -}
f71116c23fab4ac41f3dd6995e814421
  $w$ctoJSON2 ::
    [DBHelper.UserDB]
    -> [DBHelper.RepoDB]
    -> [DBHelper.LinkDB]
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: [DBHelper.UserDB])
                   (ww1 :: [DBHelper.RepoDB])
                   (ww2 :: [DBHelper.LinkDB]) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                           @ ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "users")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                           @ Data.Aeson.Types.Generic.Zero
                           @ (GHC.Generics.K1 GHC.Generics.R [DBHelper.UserDB])
                           DBHelper.$fFromJSONListOb_$s$fSelectorMetaMetaSel2
                           DBHelper.$fToJSONListOb30
                             `cast`
                           (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                     <Data.Aeson.Types.Generic.Zero>_N
                                     <GHC.Generics.K1 GHC.Generics.R [DBHelper.UserDB]>_N))
                           @ GHC.Prim.Any
                           DBHelper.$fToJSONLanguage_w2
                           (Data.Aeson.Types.ToJSON.$WNoToArgs
                              @ Data.Aeson.Types.Internal.Value
                              @ GHC.Prim.Any)
                           ww
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P
                                          <[DBHelper.UserDB]>_R
                                          <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "users")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R [DBHelper.UserDB]>_R) <GHC.Prim.Any>_N))
                           (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                              @ ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "repos")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                              @ Data.Aeson.Types.Generic.Zero
                              @ (GHC.Generics.K1 GHC.Generics.R [DBHelper.RepoDB])
                              DBHelper.$fFromJSONListOb_$s$fSelectorMetaMetaSel1
                              DBHelper.$fToJSONListOb5
                                `cast`
                              (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                        <Data.Aeson.Types.Generic.Zero>_N
                                        <GHC.Generics.K1 GHC.Generics.R [DBHelper.RepoDB]>_N))
                              @ GHC.Prim.Any
                              DBHelper.$fToJSONLanguage_w2
                              (Data.Aeson.Types.ToJSON.$WNoToArgs
                                 @ Data.Aeson.Types.Internal.Value
                                 @ GHC.Prim.Any)
                              ww1
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <[DBHelper.RepoDB]>_R
                                             <GHC.Prim.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "repos")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                [DBHelper.RepoDB]>_R) <GHC.Prim.Any>_N))
                              (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                                 @ ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "links")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                 @ Data.Aeson.Types.Generic.Zero
                                 @ (GHC.Generics.K1 GHC.Generics.R [DBHelper.LinkDB])
                                 DBHelper.$fFromJSONListOb_$s$fSelectorMetaMetaSel
                                 DBHelper.$fToJSONListOb2
                                   `cast`
                                 (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                           <Data.Aeson.Types.Generic.Zero>_N
                                           <GHC.Generics.K1 GHC.Generics.R [DBHelper.LinkDB]>_N))
                                 @ GHC.Prim.Any
                                 DBHelper.$fToJSONLanguage_w2
                                 (Data.Aeson.Types.ToJSON.$WNoToArgs
                                    @ Data.Aeson.Types.Internal.Value
                                    @ GHC.Prim.Any)
                                 ww2
                                   `cast`
                                 (Trans
                                      (Sym (GHC.Generics.N:K1[0]
                                                <GHC.Generics.R>_P
                                                <[DBHelper.LinkDB]>_R
                                                <GHC.Prim.Any>_P))
                                      (Sym (GHC.Generics.N:M1[0]
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "links")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R
                                                   [DBHelper.LinkDB]>_R) <GHC.Prim.Any>_N))
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (# dt1 #) }) -}
6fe01708f695edb7e8c90728d7b7dec5
  $w$ctoJSON3 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Types.Int)
                   (ww3 :: GHC.Types.Bool)
                   (ww4 :: GHC.Base.String) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                           @ ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "repoName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                           @ Data.Aeson.Types.Generic.Zero
                           @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                           DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel4
                           DBHelper.$fToJSONListOb24
                             `cast`
                           (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                     <Data.Aeson.Types.Generic.Zero>_N
                                     <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                           @ GHC.Prim.Any
                           DBHelper.$fToJSONLanguage_w2
                           (Data.Aeson.Types.ToJSON.$WNoToArgs
                              @ Data.Aeson.Types.Internal.Value
                              @ GHC.Prim.Any)
                           ww
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "repoName")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Base.String>_R) <GHC.Prim.Any>_N))
                           (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                              @ ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "repoOwner")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                              @ Data.Aeson.Types.Generic.Zero
                              @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                              DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel3
                              DBHelper.$fToJSONListOb24
                                `cast`
                              (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                        <Data.Aeson.Types.Generic.Zero>_N
                                        <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                              @ GHC.Prim.Any
                              DBHelper.$fToJSONLanguage_w2
                              (Data.Aeson.Types.ToJSON.$WNoToArgs
                                 @ Data.Aeson.Types.Internal.Value
                                 @ GHC.Prim.Any)
                              ww1
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <GHC.Base.String>_R
                                             <GHC.Prim.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "repoOwner")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                GHC.Base.String>_R) <GHC.Prim.Any>_N))
                              (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                                 @ ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "repoSize")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                 @ Data.Aeson.Types.Generic.Zero
                                 @ (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                 DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel2
                                 DBHelper.$fToJSONLinkDB3
                                   `cast`
                                 (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                           <Data.Aeson.Types.Generic.Zero>_N
                                           <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_N))
                                 @ GHC.Prim.Any
                                 DBHelper.$fToJSONLanguage_w2
                                 (Data.Aeson.Types.ToJSON.$WNoToArgs
                                    @ Data.Aeson.Types.Internal.Value
                                    @ GHC.Prim.Any)
                                 ww2
                                   `cast`
                                 (Trans
                                      (Sym (GHC.Generics.N:K1[0]
                                                <GHC.Generics.R>_P
                                                <GHC.Types.Int>_R
                                                <GHC.Prim.Any>_P))
                                      (Sym (GHC.Generics.N:M1[0]
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "repoSize")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R
                                                   GHC.Types.Int>_R) <GHC.Prim.Any>_N))
                                 (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                                    @ ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "recent")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                    @ Data.Aeson.Types.Generic.Zero
                                    @ (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                                    DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel1
                                    DBHelper.$fToJSONListOb11
                                      `cast`
                                    (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                              <Data.Aeson.Types.Generic.Zero>_N
                                              <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_N))
                                    @ GHC.Prim.Any
                                    DBHelper.$fToJSONLanguage_w2
                                    (Data.Aeson.Types.ToJSON.$WNoToArgs
                                       @ Data.Aeson.Types.Internal.Value
                                       @ GHC.Prim.Any)
                                    ww3
                                      `cast`
                                    (Trans
                                         (Sym (GHC.Generics.N:K1[0]
                                                   <GHC.Generics.R>_P
                                                   <GHC.Types.Bool>_R
                                                   <GHC.Prim.Any>_P))
                                         (Sym (GHC.Generics.N:M1[0]
                                                   <GHC.Generics.S>_P
                                                   <'GHC.Generics.MetaSel
                                                      ('GHC.Base.Just "recent")
                                                      'GHC.Generics.NoSourceUnpackedness
                                                      'GHC.Generics.NoSourceStrictness
                                                      'GHC.Generics.DecidedLazy>_P
                                                   <GHC.Generics.K1
                                                      GHC.Generics.R
                                                      GHC.Types.Bool>_R) <GHC.Prim.Any>_N))
                                    (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                                       @ ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "repoLanguage")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                       @ Data.Aeson.Types.Generic.Zero
                                       @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                       DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel
                                       DBHelper.$fToJSONListOb24
                                         `cast`
                                       (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                                 <Data.Aeson.Types.Generic.Zero>_N
                                                 <GHC.Generics.K1
                                                    GHC.Generics.R [GHC.Types.Char]>_N))
                                       @ GHC.Prim.Any
                                       DBHelper.$fToJSONLanguage_w2
                                       (Data.Aeson.Types.ToJSON.$WNoToArgs
                                          @ Data.Aeson.Types.Internal.Value
                                          @ GHC.Prim.Any)
                                       ww4
                                         `cast`
                                       (Trans
                                            (Sym (GHC.Generics.N:K1[0]
                                                      <GHC.Generics.R>_P
                                                      <GHC.Base.String>_R
                                                      <GHC.Prim.Any>_P))
                                            (Sym (GHC.Generics.N:M1[0]
                                                      <GHC.Generics.S>_P
                                                      <'GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "repoLanguage")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy>_P
                                                      <GHC.Generics.K1
                                                         GHC.Generics.R
                                                         GHC.Base.String>_R) <GHC.Prim.Any>_N))
                                       (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (# dt1 #) }) -}
9db0ea535878b612e683ecea61ecbd41
  $w$ctoJSON4 ::
    DBHelper.UserDB -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 1, Strictness: <L,1*U(1*U)>, Inline: [0],
     Unfolding: (\ (w :: DBHelper.UserDB) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                           @ ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "userId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                           @ Data.Aeson.Types.Generic.Zero
                           @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                           DBHelper.$fFromJSONUserDB_$s$fSelectorMetaMetaSel
                           DBHelper.$fToJSONListOb32
                             `cast`
                           (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                     <Data.Aeson.Types.Generic.Zero>_N
                                     <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                           @ GHC.Prim.Any
                           DBHelper.$fToJSONLanguage_w2
                           (Data.Aeson.Types.ToJSON.$WNoToArgs
                              @ Data.Aeson.Types.Internal.Value
                              @ GHC.Prim.Any)
                           (case w of wild { DBHelper.UserDB g1 ->
                            g1
                              `cast`
                            (Trans
                                 (Sym (GHC.Generics.N:K1[0]
                                           <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                                 (Sym (GHC.Generics.N:M1[0]
                                           <GHC.Generics.S>_P
                                           <'GHC.Generics.MetaSel
                                              ('GHC.Base.Just "userId")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy>_P
                                           <GHC.Generics.K1
                                              GHC.Generics.R
                                              GHC.Base.String>_R) <GHC.Prim.Any>_N)) })
                           (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (# dt1 #) }) -}
b1794fd63b39a7c0d07bea9ecfcb543d
  $w$ctoJSON5 ::
    GHC.Base.String
    -> GHC.Types.Int -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String) (ww1 :: GHC.Types.Int) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                           @ ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "word")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                           @ Data.Aeson.Types.Generic.Zero
                           @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                           DBHelper.$fFromJSONLog_$s$fSelectorMetaMetaSel1
                           DBHelper.$fToJSONLog2
                             `cast`
                           (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                     <Data.Aeson.Types.Generic.Zero>_N
                                     <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                           @ GHC.Prim.Any
                           DBHelper.$fToJSONLanguage_w2
                           (Data.Aeson.Types.ToJSON.$WNoToArgs
                              @ Data.Aeson.Types.Internal.Value
                              @ GHC.Prim.Any)
                           ww
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "word")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Base.String>_R) <GHC.Prim.Any>_N))
                           (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                              @ ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "number")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                              @ Data.Aeson.Types.Generic.Zero
                              @ (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                              DBHelper.$fFromJSONLog_$s$fSelectorMetaMetaSel
                              DBHelper.$fToJSONLinkDB3
                                `cast`
                              (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                        <Data.Aeson.Types.Generic.Zero>_N
                                        <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_N))
                              @ GHC.Prim.Any
                              DBHelper.$fToJSONLanguage_w2
                              (Data.Aeson.Types.ToJSON.$WNoToArgs
                                 @ Data.Aeson.Types.Internal.Value
                                 @ GHC.Prim.Any)
                              ww1
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P <GHC.Types.Int>_R <GHC.Prim.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "number")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R GHC.Types.Int>_R) <GHC.Prim.Any>_N))
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (# dt1 #) }) -}
8204bf2d5c70ef293b344615560b6ece
  $w$dGToJSON ::
    GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         DBHelper.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           DBHelper.$fToJSONLanguage4
                           w `cast`
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P)
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt1 #) } }) -}
094708eca0b364517602a37f6be53b57
  $w$dGToJSON1 ::
    GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         DBHelper.$wouter1
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           DBHelper.$fToJSONLanguage4
                           w `cast`
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P)
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt1 #) } }) -}
f71116c23fab4ac41f3dd6995e814421
  $w$dGToJSON2 ::
    GHC.Generics.K1 GHC.Generics.R [DBHelper.LinkDB] a1
    -> (# Data.Aeson.Types.Internal.Array #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [DBHelper.LinkDB] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                         case DBHelper.$fToJSONListOb4
                                GHC.Types.SPEC
                                ((Data.Vector.Mutable.MVector
                                    @ (Control.Monad.Primitive.PrimState
                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                    @ Data.Aeson.Types.Internal.Value
                                    0#
                                    0#
                                    ipv1)
                                   `cast`
                                 (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                  (GHC.ST.ST
                                                                                     GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N),
                                 DBHelper.$fToJSONListOb3)
                                (GHC.Base.map
                                   @ DBHelper.LinkDB
                                   @ Data.Aeson.Types.Internal.Value
                                   DBHelper.$fToJSONLinkDB1
                                     `cast`
                                   (<DBHelper.LinkDB>_R
                                    ->_R Data.Tagged.N:Tagged[0]
                                             <*>_N
                                             <Data.Aeson.Types.Generic.True>_P
                                             <Data.Aeson.Types.Internal.Value>_R)
                                   w `cast`
                                   (GHC.Generics.N:K1[0]
                                        <GHC.Generics.R>_P <[DBHelper.LinkDB]>_R <a1>_P))
                                ipv
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.D:R:PrimStateST[0]
                                        <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                         case ipv7 of wild5 { (,) v' n ->
                         case v'
                                `cast`
                              (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                         (GHC.ST.ST
                                                                            GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                         case n of dt5 { GHC.Types.I# dt6 ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Data.Aeson.Types.Internal.Value
                                dt2
                                ipv6
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                         (# ipv2
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.D:R:PrimStateST[0]
                                    <GHC.Prim.RealWorld>_N))_R,
                            Data.Vector.Vector
                              @ Data.Aeson.Types.Internal.Value
                              dt
                              dt6
                              ipv3 #) } } } } } }) of ds1 { (#,#) ipv1 ipv2 ->
                 case ipv2 of dt1 { Data.Vector.Vector ipv ipv4 ipv5 ->
                 (# dt1 #) } }) -}
2de1b3f33bb93f592d3f9d9329bb0043
  $w$dGToJSON3 ::
    GHC.Generics.K1 GHC.Generics.R [DBHelper.RepoDB] a1
    -> (# Data.Aeson.Types.Internal.Array #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [DBHelper.RepoDB] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                         case DBHelper.$fToJSONListOb29
                                GHC.Types.SPEC
                                ((Data.Vector.Mutable.MVector
                                    @ (Control.Monad.Primitive.PrimState
                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                    @ Data.Aeson.Types.Internal.Value
                                    0#
                                    0#
                                    ipv1)
                                   `cast`
                                 (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                  (GHC.ST.ST
                                                                                     GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N),
                                 DBHelper.$fToJSONListOb3)
                                (GHC.Base.map
                                   @ DBHelper.RepoDB
                                   @ Data.Aeson.Types.Internal.Value
                                   DBHelper.$fToJSONListOb6
                                     `cast`
                                   (<DBHelper.RepoDB>_R
                                    ->_R Data.Tagged.N:Tagged[0]
                                             <*>_N
                                             <Data.Aeson.Types.Generic.True>_P
                                             <Data.Aeson.Types.Internal.Value>_R)
                                   w `cast`
                                   (GHC.Generics.N:K1[0]
                                        <GHC.Generics.R>_P <[DBHelper.RepoDB]>_R <a1>_P))
                                ipv
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.D:R:PrimStateST[0]
                                        <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                         case ipv7 of wild5 { (,) v' n ->
                         case v'
                                `cast`
                              (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                         (GHC.ST.ST
                                                                            GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                         case n of dt5 { GHC.Types.I# dt6 ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Data.Aeson.Types.Internal.Value
                                dt2
                                ipv6
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                         (# ipv2
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.D:R:PrimStateST[0]
                                    <GHC.Prim.RealWorld>_N))_R,
                            Data.Vector.Vector
                              @ Data.Aeson.Types.Internal.Value
                              dt
                              dt6
                              ipv3 #) } } } } } }) of ds1 { (#,#) ipv1 ipv2 ->
                 case ipv2 of dt1 { Data.Vector.Vector ipv ipv4 ipv5 ->
                 (# dt1 #) } }) -}
3ed6ae7094f2bef6dfca75aa149d26a4
  $w$dGToJSON4 ::
    GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         DBHelper.$wouter2
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           DBHelper.$fToJSONLanguage4
                           w `cast`
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P)
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt1 #) } }) -}
08eda0e18fe1a1ee3dff2bd7d1f13993
  $w$dGToJSON5 ::
    GHC.Generics.K1 GHC.Generics.R [DBHelper.UserDB] a1
    -> (# Data.Aeson.Types.Internal.Array #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [DBHelper.UserDB] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                         case DBHelper.$fToJSONListOb33
                                GHC.Types.SPEC
                                ((Data.Vector.Mutable.MVector
                                    @ (Control.Monad.Primitive.PrimState
                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                    @ Data.Aeson.Types.Internal.Value
                                    0#
                                    0#
                                    ipv1)
                                   `cast`
                                 (Sub (Sym (Data.Vector.D:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                  (GHC.ST.ST
                                                                                     GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N),
                                 DBHelper.$fToJSONListOb3)
                                (GHC.Base.map
                                   @ DBHelper.UserDB
                                   @ Data.Aeson.Types.Internal.Value
                                   DBHelper.$fToJSONListOb31
                                     `cast`
                                   (<DBHelper.UserDB>_R
                                    ->_R Data.Tagged.N:Tagged[0]
                                             <*>_N
                                             <Data.Aeson.Types.Generic.True>_P
                                             <Data.Aeson.Types.Internal.Value>_R)
                                   w `cast`
                                   (GHC.Generics.N:K1[0]
                                        <GHC.Generics.R>_P <[DBHelper.UserDB]>_R <a1>_P))
                                ipv
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.D:R:PrimStateST[0]
                                        <GHC.Prim.RealWorld>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                         case ipv7 of wild5 { (,) v' n ->
                         case v'
                                `cast`
                              (Sub (Data.Vector.D:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                         (GHC.ST.ST
                                                                            GHC.Prim.RealWorld)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                         case n of dt5 { GHC.Types.I# dt6 ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                @ Data.Aeson.Types.Internal.Value
                                dt2
                                ipv6
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                             <GHC.Prim.RealWorld>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                         (# ipv2
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.D:R:PrimStateST[0]
                                    <GHC.Prim.RealWorld>_N))_R,
                            Data.Vector.Vector
                              @ Data.Aeson.Types.Internal.Value
                              dt
                              dt6
                              ipv3 #) } } } } } }) of ds1 { (#,#) ipv1 ipv2 ->
                 case ipv2 of dt1 { Data.Vector.Vector ipv ipv4 ipv5 ->
                 (# dt1 #) } }) -}
26f40bf2693eb28f0b2474d9a9948fbe
  $w$dGToJSON6 ::
    GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         DBHelper.$wouter3
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           DBHelper.$fToJSONLanguage4
                           w `cast`
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P)
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt1 #) } }) -}
d317edf47abd9f519c65c70cce13887a
  $w$dGToJSON7 ::
    GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         DBHelper.$wouter4
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           DBHelper.$fToJSONLanguage4
                           w `cast`
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P)
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt1 #) } }) -}
cf3b8181a8f806513575237c436ff66e
  $w$sgo10 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map Data.Text.Internal.Text a1
    -> Data.Map.Base.Map Data.Text.Internal.Text a1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
baad6b15764ad75337012f5e455209c3
  $wlinkRequest ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> [GHC.Types.Char]
  {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
784e19a23dd1cb2babbe090aec8efecf
  $wouter ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
cd6923e71ee871dbabd770f9da5730b1
  $wouter1 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
52e2e42a9b51e85774d7a44facc5e37b
  $wouter2 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
c838d192f0bf5576ae03be7651626d5c
  $wouter3 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
0d47e322869cc8d26eb72546fbba0a33
  $wouter4 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
c77be35e0a565fb2c984afd07ac1955a
  $wouter5 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
e1a13fc829afb03307905087e8b25c0d
  $wouter6 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
f1ce15a769a88942930c1ee6b39473d5
  $wouter7 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
5b6934097799ca0395d84726fe903e08
  $wouter8 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
bf6a063b8e0d2808a47fc9859b0a6a78
  $wouter9 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
42e1bc33394f235b19a75e95c49f5ff5
  $wpoly_go10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map Data.Text.Internal.Text a
    -> [(Data.Text.Internal.Text, a)]
    -> Data.Map.Base.Map Data.Text.Internal.Text a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
22fcaf89b0c8fd808eff81a7771c2399
  data Language
    = Language {name :: GHC.Base.String,
                value :: GHC.Integer.Type.Integer}
f71116c23fab4ac41f3dd6995e814421
  data LinkDB
    = LinkDB {linkType :: GHC.Types.Int,
              linkName :: GHC.Base.String,
              source :: GHC.Base.String,
              destination :: GHC.Base.String}
f71116c23fab4ac41f3dd6995e814421
  data ListOb
    = ListOb {users :: [DBHelper.UserDB],
              repos :: [DBHelper.RepoDB],
              links :: [DBHelper.LinkDB]}
3a02f93a20b244c7babce0966838c2bf
  data Log = Log {word :: GHC.Base.String, number :: GHC.Types.Int}
22fcaf89b0c8fd808eff81a7771c2399
  axiom Rep_Language::
      GHC.Generics.Rep DBHelper.Language
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Language"
               "DBHelper"
               "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Language" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "name")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "value")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Integer.Type.Integer)))
f71116c23fab4ac41f3dd6995e814421
  axiom Rep_LinkDB::
      GHC.Generics.Rep DBHelper.LinkDB
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "LinkDB"
               "DBHelper"
               "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "linkType")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 GHC.Types.Int)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "linkName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "source")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "destination")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String))))
f71116c23fab4ac41f3dd6995e814421
  axiom Rep_ListOb::
      GHC.Generics.Rep DBHelper.ListOb
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "ListOb"
               "DBHelper"
               "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "ListOb" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "users")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 [DBHelper.UserDB])
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "repos")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 [DBHelper.RepoDB])
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "links")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 [DBHelper.LinkDB]))))
3a02f93a20b244c7babce0966838c2bf
  axiom Rep_Log::
      GHC.Generics.Rep DBHelper.Log
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Log"
               "DBHelper"
               "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Log" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "word")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "number")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)))
11c665402619553a2690f82da4927c4a
  axiom Rep_RepoDB::
      GHC.Generics.Rep DBHelper.RepoDB
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "RepoDB"
               "DBHelper"
               "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
               ((GHC.Generics.S1
                   ('GHC.Generics.MetaSel
                      ('GHC.Base.Just "repoName")
                      'GHC.Generics.NoSourceUnpackedness
                      'GHC.Generics.NoSourceStrictness
                      'GHC.Generics.DecidedLazy)
                   (GHC.Generics.Rec0 GHC.Base.String)
                 GHC.Generics.:*: GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "repoOwner")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String))
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "repoSize")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "recent")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Bool)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "repoLanguage")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          GHC.Base.String)))))
9db0ea535878b612e683ecea61ecbd41
  axiom Rep_UserDB::
      GHC.Generics.Rep DBHelper.UserDB
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "UserDB"
               "DBHelper"
               "crawler-0.1.0.0-2jLxW5sGj234Y0KdhjvaTi"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "userId")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String)))
11c665402619553a2690f82da4927c4a
  data RepoDB
    = RepoDB {repoName :: GHC.Base.String,
              repoOwner :: GHC.Base.String,
              repoSize :: GHC.Types.Int,
              recent :: GHC.Types.Bool,
              repoLanguage :: GHC.Base.String}
9db0ea535878b612e683ecea61ecbd41
  data UserDB = UserDB {userId :: GHC.Base.String}
d7c77379e9149bdd334874866c60309d
  addAuth :: GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.addAuth1
                  `cast`
                (<GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
34e09f4786580f7ac688630f834be984
  addAuth1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: (\ (auth :: GHC.Base.String)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DBHelper.addAuth7
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Connection.Type.Pipe>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (DBHelper.addAuth5
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.Bolt.Connection.Type.Pipe>_R
                            <GHC.Types.IO>_R
                            <[Database.Bolt.Record.Record]>_N)
                         ipv1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ((Database.Bolt.Connection.queryP
                          @ GHC.Types.IO
                          Control.Monad.IO.Class.$fMonadIOIO
                          DBHelper.addAuth4
                          (DBHelper.$sfromList
                             @ Database.Bolt.Value.Type.Value
                             (GHC.Types.:
                                @ (Data.Text.Internal.Text, Database.Bolt.Value.Type.Value)
                                (DBHelper.addAuth3,
                                 Database.Bolt.Value.Type.T
                                   (case GHC.Magic.runRW#
                                           @ 'GHC.Types.PtrRepLifted
                                           @ Data.Text.Internal.Text
                                           (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                            case GHC.Prim.newByteArray#
                                                   @ GHC.Prim.RealWorld
                                                   8#
                                                   s1 of ds3 { (#,#) ipv4 ipv5 ->
                                            DBHelper.$wouter5
                                              (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv5)
                                              DBHelper.$fToJSONLanguage4
                                              auth
                                              0#
                                              ipv4 }) of ds3 { (#,#) ipv4 ipv5 ->
                                    ipv5 }))
                                (GHC.Types.[]
                                   @ (Data.Text.Internal.Text, Database.Bolt.Value.Type.Value)))))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.Bolt.Connection.Type.Pipe>_R
                            <GHC.Types.IO>_R
                            <[Database.Bolt.Record.Record]>_N)
                         ipv1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Show.showList__
                           @ (Data.Map.Base.Map
                                Data.Text.Internal.Text Database.Bolt.Value.Type.Value)
                           DBHelper.addAuth2
                           ipv5
                           (GHC.Types.[] @ GHC.Types.Char))
                        GHC.Types.True
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ipv1 of wild { Database.Bolt.Connection.Type.Pipe ds5 ds6 ->
                 case ds5 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 Network.Socket.$wclose ww1 ww7 ipv6 } } } } } } }) -}
e7226ef615aea2ab20b981968cf17455
  addAuth2 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text Database.Bolt.Value.Type.Value
    -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w3 :: Data.Map.Base.Map
                            Data.Text.Internal.Text Database.Bolt.Value.Type.Value) ->
                 Data.Map.Base.$w$cshowsPrec
                   @ Data.Text.Internal.Text
                   @ Database.Bolt.Value.Type.Value
                   Data.Text.Show.$fShowText
                   Database.Bolt.Value.Type.$fShowValue
                   0#
                   w3) -}
b01dfce6d3f5275650695bdb7190b22d
  addAuth3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "a"#) -}
8d8686b58973c6a7f98eff675cefa343
  addAuth4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "CREATE (n:Auth {token: {a}})"#) -}
934502e1bd6294b177050f4f6425afbc
  addAuth5 ::
    Database.Bolt.Connection.BoltActionT
      GHC.Types.IO [Database.Bolt.Record.Record]
  {- Unfolding: (Database.Bolt.Connection.queryP
                   @ GHC.Types.IO
                   Control.Monad.IO.Class.$fMonadIOIO
                   DBHelper.addAuth6
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ Database.Bolt.Value.Type.Value)) -}
9a6195a457f1394a44cc501e26da9616
  addAuth6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "MATCH (r:Auth) DELETE r"#) -}
231ea238eb112ef94955438276d8ffc8
  addAuth7 :: GHC.Types.IO Database.Bolt.Connection.Type.Pipe
  {- Unfolding: (Database.Bolt.Connection.Pipe.connect
                   @ GHC.Types.IO
                   Control.Monad.IO.Class.$fMonadIOIO
                   DBHelper.addAuth8) -}
f9f2cab19530cb2207986c3eca43f31b
  addAuth8 :: Database.Bolt.Connection.Type.BoltCfg
  {- Unfolding: (Database.Bolt.Connection.Type.BoltCfg
                   Database.Bolt.Connection.Type.$fDefaultBoltCfg7
                   Database.Bolt.Connection.Type.$fDefaultBoltCfg6
                   Database.Bolt.Connection.Type.$fDefaultBoltCfg5
                   Database.Bolt.Connection.Type.$fDefaultBoltCfg4
                   Database.Bolt.Connection.Type.$fDefaultBoltCfg3
                   Database.Bolt.Connection.Type.$fDefaultBoltCfg2
                   Database.Bolt.Connection.Type.$fDefaultBoltCfg1
                   DBHelper.n4user
                   DBHelper.n4password) -}
b25b9275d4e7cbc5871ad6c34ef8aaf9
  addLanguage :: GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.addLanguage1
                  `cast`
                (<GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
c82aef3779d6a60915d1a4f392c6c909
  addLanguage1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: (\ (l :: GHC.Base.String)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DBHelper.addAuth7
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Connection.Type.Pipe>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ((Database.Bolt.Connection.queryP
                          @ GHC.Types.IO
                          Control.Monad.IO.Class.$fMonadIOIO
                          DBHelper.addLanguage3
                          (DBHelper.$sfromList
                             @ Database.Bolt.Value.Type.Value
                             (GHC.Types.:
                                @ (Data.Text.Internal.Text, Database.Bolt.Value.Type.Value)
                                (DBHelper.addLanguage2,
                                 Database.Bolt.Value.Type.T
                                   (case GHC.Magic.runRW#
                                           @ 'GHC.Types.PtrRepLifted
                                           @ Data.Text.Internal.Text
                                           (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                            case GHC.Prim.newByteArray#
                                                   @ GHC.Prim.RealWorld
                                                   8#
                                                   s1 of ds2 { (#,#) ipv2 ipv3 ->
                                            DBHelper.$wouter6
                                              (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv3)
                                              DBHelper.$fToJSONLanguage4
                                              l
                                              0#
                                              ipv2 }) of ds2 { (#,#) ipv2 ipv3 ->
                                    ipv3 }))
                                (GHC.Types.[]
                                   @ (Data.Text.Internal.Text, Database.Bolt.Value.Type.Value)))))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.Bolt.Connection.Type.Pipe>_R
                            <GHC.Types.IO>_R
                            <[Database.Bolt.Record.Record]>_N)
                         ipv1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv1 of wild { Database.Bolt.Connection.Type.Pipe ds3 ds4 ->
                 case ds3 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 case Network.Socket.$wclose
                        ww1
                        ww7
                        ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (GHC.Show.showList__
                      @ (Data.Map.Base.Map
                           Data.Text.Internal.Text Database.Bolt.Value.Type.Value)
                      DBHelper.addAuth2
                      ipv3
                      (GHC.Types.[] @ GHC.Types.Char))
                   GHC.Types.True
                   ipv4 } } } } } }) -}
9954274b3ed1c44b4629debaa3376965
  addLanguage2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "l"#) -}
08b9695156ab9dce992ab8460f91a38e
  addLanguage3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "MERGE (n:Language {name: {l}})"#) -}
add554430c2792e8dede7b987202561a
  addLink :: DBHelper.LinkDB -> GHC.Types.IO GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U(1*U(1*U),1*U,1*U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.addLink1
                  `cast`
                (<DBHelper.LinkDB>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
64a8a83fcb718ba5aafc7f262524b3ac
  addLink1 ::
    DBHelper.LinkDB
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <L,1*U(1*U(1*U),1*U,1*U,1*U)><S,U>,
     Unfolding: (\ (newLink :: DBHelper.LinkDB)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DBHelper.addAuth7
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Connection.Type.Pipe>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ((Database.Bolt.Connection.queryP
                          @ GHC.Types.IO
                          Control.Monad.IO.Class.$fMonadIOIO
                          (case newLink of ww { DBHelper.LinkDB ww1 ww2 ww3 ww4 ->
                           case ww1 of ww5 { GHC.Types.I# ww6 ->
                           case DBHelper.$wlinkRequest ww6 ww2 ww3 ww4 of dt { DEFAULT ->
                           case GHC.Magic.runRW#
                                  @ 'GHC.Types.PtrRepLifted
                                  @ Data.Text.Internal.Text
                                  (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                   case GHC.Prim.newByteArray#
                                          @ GHC.Prim.RealWorld
                                          8#
                                          s1 of ds2 { (#,#) ipv2 ipv3 ->
                                   DBHelper.$wouter7
                                     (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv3)
                                     DBHelper.$fToJSONLanguage4
                                     dt
                                     0#
                                     ipv2 }) of ds2 { (#,#) ipv2 ipv3 ->
                           ipv3 } } } })
                          (Data.Map.Base.Tip
                             @ Data.Text.Internal.Text
                             @ Database.Bolt.Value.Type.Value))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.Bolt.Connection.Type.Pipe>_R
                            <GHC.Types.IO>_R
                            <[Database.Bolt.Record.Record]>_N)
                         ipv1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Show.showList__
                           @ (Data.Map.Base.Map
                                Data.Text.Internal.Text Database.Bolt.Value.Type.Value)
                           DBHelper.addAuth2
                           ipv3
                           (GHC.Types.[] @ GHC.Types.Char))
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ipv1 of wild { Database.Bolt.Connection.Type.Pipe ds4 ds5 ->
                 case ds4 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 case Network.Socket.$wclose
                        ww1
                        ww7
                        ipv4 of ds6 { (#,#) ipv6 ipv7 ->
                 (# ipv6,
                    GHC.Show.showList__
                      @ (Data.Map.Base.Map
                           Data.Text.Internal.Text Database.Bolt.Value.Type.Value)
                      DBHelper.addAuth2
                      ipv3
                      (GHC.Types.[] @ GHC.Types.Char) #) } } } } } } }) -}
42ef9d46b152e28f50b27d3b77cba91f
  addRepo :: DBHelper.RepoDB -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U(U,U,1*U,1*U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.addRepo1
                  `cast`
                (<DBHelper.RepoDB>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
cdbc7546bcf4524771e0f53b6eed98ae
  addRepo1 ::
    DBHelper.RepoDB
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U,U,1*U,1*U,U)><S,U> -}
13c05ac81ed299ec0c1807719cec4e63
  addUser :: DBHelper.UserDB -> GHC.Types.IO GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U(1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.addUser1
                  `cast`
                (<DBHelper.UserDB>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
350a6a15f1f43ad84d94d6c534771d5d
  addUser1 ::
    DBHelper.UserDB
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <L,1*U(1*U)><S,U>,
     Unfolding: (\ (newUser :: DBHelper.UserDB)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DBHelper.addAuth7
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Connection.Type.Pipe>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ((Database.Bolt.Connection.queryP
                          @ GHC.Types.IO
                          Control.Monad.IO.Class.$fMonadIOIO
                          DBHelper.addUser3
                          (DBHelper.$sfromList
                             @ Database.Bolt.Value.Type.Value
                             (GHC.Types.:
                                @ (Data.Text.Internal.Text, Database.Bolt.Value.Type.Value)
                                (DBHelper.addUser2,
                                 Database.Bolt.Value.Type.T
                                   (case newUser of wild { DBHelper.UserDB ds ->
                                    case GHC.Magic.runRW#
                                           @ 'GHC.Types.PtrRepLifted
                                           @ Data.Text.Internal.Text
                                           (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                            case GHC.Prim.newByteArray#
                                                   @ GHC.Prim.RealWorld
                                                   8#
                                                   s1 of ds2 { (#,#) ipv2 ipv3 ->
                                            DBHelper.$wouter8
                                              (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv3)
                                              DBHelper.$fToJSONLanguage4
                                              ds
                                              0#
                                              ipv2 }) of ds2 { (#,#) ipv2 ipv3 ->
                                    ipv3 } }))
                                (GHC.Types.[]
                                   @ (Data.Text.Internal.Text, Database.Bolt.Value.Type.Value)))))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.Bolt.Connection.Type.Pipe>_R
                            <GHC.Types.IO>_R
                            <[Database.Bolt.Record.Record]>_N)
                         ipv1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv1 of wild { Database.Bolt.Connection.Type.Pipe ds3 ds4 ->
                 case ds3 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 case Network.Socket.$wclose
                        ww1
                        ww7
                        ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Show.showList__
                           @ (Data.Map.Base.Map
                                Data.Text.Internal.Text Database.Bolt.Value.Type.Value)
                           DBHelper.addAuth2
                           ipv3
                           (GHC.Types.[] @ GHC.Types.Char))
                        GHC.Types.True
                        ipv4 of ds6 { (#,#) ipv6 ipv7 ->
                 (# ipv6,
                    GHC.Show.showList__
                      @ (Data.Map.Base.Map
                           Data.Text.Internal.Text Database.Bolt.Value.Type.Value)
                      DBHelper.addAuth2
                      ipv3
                      (GHC.Types.[] @ GHC.Types.Char) #) } } } } } } }) -}
af8ed4c130e8713847334c599c9cf400
  addUser2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "id"#) -}
0bcf5bafcb467522d9c6439651704ac1
  addUser3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "MERGE (n:User {userId: {id}})"#) -}
4a382eeeb17b40eef1949a7df83f24ab
  allLanguages :: GHC.Types.IO [DBHelper.Language]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.allLanguages1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <[DBHelper.Language]>_R)) -}
992ecc13ed749436411a307c1e11cfb8
  allLanguages1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [DBHelper.Language] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Database.Bolt.Connection.Pipe.connect
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         DBHelper.addAuth8)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Connection.Type.Pipe>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ((Database.Bolt.Connection.queryP
                          @ GHC.Types.IO
                          Control.Monad.IO.Class.$fMonadIOIO
                          DBHelper.allLanguages3
                          (Data.Map.Base.Tip
                             @ Data.Text.Internal.Text
                             @ Database.Bolt.Value.Type.Value))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.Bolt.Connection.Type.Pipe>_R
                            <GHC.Types.IO>_R
                            <[Database.Bolt.Record.Record]>_N)
                         ipv1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Show.showList__
                           @ (Data.Map.Base.Map
                                Data.Text.Internal.Text Database.Bolt.Value.Type.Value)
                           DBHelper.addAuth2
                           ipv3
                           (GHC.Types.[] @ GHC.Types.Char))
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case DBHelper.allLanguages2 ipv3 ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ipv1 of wild { Database.Bolt.Connection.Type.Pipe ds5 ds6 ->
                 case ds5 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 case Network.Socket.$wclose
                        ww1
                        ww7
                        ipv6 of ds7 { (#,#) ipv8 ipv9 ->
                 (# ipv8, ipv7 #) } } } } } } } }) -}
b35881211b2980104e2e26cacff73034
  allLanguages2 ::
    [Database.Bolt.Record.Record]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [DBHelper.Language] #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
63be016c4513cc0b5bab0e82d9910857
  allLanguages3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "Match ()-[r:Knows]-(n:Language) return n.name as name, count(r) as rel_count order by rel_count desc"#) -}
c472fba0f32973a86efa0cfeb2a6e38d
  allLinks :: GHC.Types.IO [DBHelper.LinkDB]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.allLinks1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <[DBHelper.LinkDB]>_R)) -}
d3463bd863096802eeaa808533ac7f1c
  allLinks1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [DBHelper.LinkDB] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Database.Bolt.Connection.Pipe.connect
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         DBHelper.addAuth8)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Connection.Type.Pipe>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ((Database.Bolt.Connection.queryP
                          @ GHC.Types.IO
                          Control.Monad.IO.Class.$fMonadIOIO
                          DBHelper.allLinks3
                          (Data.Map.Base.Tip
                             @ Data.Text.Internal.Text
                             @ Database.Bolt.Value.Type.Value))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.Bolt.Connection.Type.Pipe>_R
                            <GHC.Types.IO>_R
                            <[Database.Bolt.Record.Record]>_N)
                         ipv1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case DBHelper.allLinks2 ipv3 ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ipv1 of wild { Database.Bolt.Connection.Type.Pipe ds4 ds5 ->
                 case ds4 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 case Network.Socket.$wclose
                        ww1
                        ww7
                        ipv4 of ds6 { (#,#) ipv6 ipv7 ->
                 (# ipv6, ipv5 #) } } } } } } }) -}
2354c864ba51cc716d72fca237c8446b
  allLinks2 ::
    [Database.Bolt.Record.Record]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [DBHelper.LinkDB] #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
979a6993f3901337625e9f800e341571
  allLinks3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "MATCH (s:User) OPTIONAL MATCH (s)-[r:ContributesTo]-(d) RETURN s.userId as source, d.repoName as destination"#) -}
764bb22552f87cebe8f02a50a547175e
  allRepo :: GHC.Types.IO [DBHelper.RepoDB]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.allRepo1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <[DBHelper.RepoDB]>_R)) -}
00134044eeced5c571187b8a93f2a16b
  allRepo1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [DBHelper.RepoDB] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Database.Bolt.Connection.Pipe.connect
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         DBHelper.addAuth8)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Connection.Type.Pipe>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ((Database.Bolt.Connection.queryP
                          @ GHC.Types.IO
                          Control.Monad.IO.Class.$fMonadIOIO
                          DBHelper.allRepo3
                          (Data.Map.Base.Tip
                             @ Data.Text.Internal.Text
                             @ Database.Bolt.Value.Type.Value))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.Bolt.Connection.Type.Pipe>_R
                            <GHC.Types.IO>_R
                            <[Database.Bolt.Record.Record]>_N)
                         ipv1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Show.showList__
                           @ (Data.Map.Base.Map
                                Data.Text.Internal.Text Database.Bolt.Value.Type.Value)
                           DBHelper.addAuth2
                           ipv3
                           (GHC.Types.[] @ GHC.Types.Char))
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case DBHelper.allRepo2 ipv3 ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ipv1 of wild { Database.Bolt.Connection.Type.Pipe ds5 ds6 ->
                 case ds5 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 case Network.Socket.$wclose
                        ww1
                        ww7
                        ipv6 of ds7 { (#,#) ipv8 ipv9 ->
                 (# ipv8, ipv7 #) } } } } } } } }) -}
371d44a9edb87ffeddecd65a45badc76
  allRepo2 ::
    [Database.Bolt.Record.Record]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [DBHelper.RepoDB] #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
20dc4d1c507893a2602eb2466255b924
  allRepo3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "MATCH (n:Repo)  RETURN n.repoName as repoName, n.repoOwner as repoOwner, n.repoSize as repoSize, n.repoLanguage as repoLanguage, n.recent as recent"#) -}
eba1a0abca6dea13d3e83471b1ad030b
  allUsers :: GHC.Types.IO [DBHelper.UserDB]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.allUsers1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <[DBHelper.UserDB]>_R)) -}
1355ccc383e83d2a1fe46debbf9f9cfc
  allUsers1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [DBHelper.UserDB] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Database.Bolt.Connection.Pipe.connect
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         DBHelper.addAuth8)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Connection.Type.Pipe>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ((Database.Bolt.Connection.queryP
                          @ GHC.Types.IO
                          Control.Monad.IO.Class.$fMonadIOIO
                          DBHelper.allUsers3
                          (Data.Map.Base.Tip
                             @ Data.Text.Internal.Text
                             @ Database.Bolt.Value.Type.Value))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.Bolt.Connection.Type.Pipe>_R
                            <GHC.Types.IO>_R
                            <[Database.Bolt.Record.Record]>_N)
                         ipv1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Show.showList__
                           @ (Data.Map.Base.Map
                                Data.Text.Internal.Text Database.Bolt.Value.Type.Value)
                           DBHelper.addAuth2
                           ipv3
                           (GHC.Types.[] @ GHC.Types.Char))
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case DBHelper.allUsers2 ipv3 ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ipv1 of wild { Database.Bolt.Connection.Type.Pipe ds5 ds6 ->
                 case ds5 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 case Network.Socket.$wclose
                        ww1
                        ww7
                        ipv6 of ds7 { (#,#) ipv8 ipv9 ->
                 (# ipv8, ipv7 #) } } } } } } } }) -}
9ae915aebd807d3e933ac1ead9a04011
  allUsers2 ::
    [Database.Bolt.Record.Record]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [DBHelper.UserDB] #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
9b70d35b552d098746d7d4042694ec80
  allUsers3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "MATCH (n:User)  RETURN n.userId"#) -}
f3f3b3f4b09c85380f1832018242b2fc
  clearDB :: GHC.Types.IO GHC.Base.String
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.clearDB1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
6818e0ab51eb94c1c4b36880e3dc4a75
  clearDB1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Database.Bolt.Connection.Pipe.connect
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         DBHelper.addAuth8)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Connection.Type.Pipe>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ((Database.Bolt.Connection.queryP
                          @ GHC.Types.IO
                          Control.Monad.IO.Class.$fMonadIOIO
                          DBHelper.clearDB2
                          (Data.Map.Base.Tip
                             @ Data.Text.Internal.Text
                             @ Database.Bolt.Value.Type.Value))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.Bolt.Connection.Type.Pipe>_R
                            <GHC.Types.IO>_R
                            <[Database.Bolt.Record.Record]>_N)
                         ipv1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv1 of wild { Database.Bolt.Connection.Type.Pipe ds3 ds4 ->
                 case ds3 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 case Network.Socket.$wclose
                        ww1
                        ww7
                        ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Show.showList__
                           @ (Data.Map.Base.Map
                                Data.Text.Internal.Text Database.Bolt.Value.Type.Value)
                           DBHelper.addAuth2
                           ipv3
                           (GHC.Types.[] @ GHC.Types.Char))
                        GHC.Types.True
                        ipv4 of ds6 { (#,#) ipv6 ipv7 ->
                 (# ipv6,
                    GHC.Show.showList__
                      @ (Data.Map.Base.Map
                           Data.Text.Internal.Text Database.Bolt.Value.Type.Value)
                      DBHelper.addAuth2
                      ipv3
                      (GHC.Types.[] @ GHC.Types.Char) #) } } } } } } }) -}
d8e1748661472eac0ea169fd9052e9ee
  clearDB2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE n,r"#) -}
22c691084d66c7dfa4a9bd1a244ea203
  contributesTo :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ContributesTo"#) -}
1615fea8c579ffb84ea881a9ad706de6
  destination :: DBHelper.LinkDB -> GHC.Base.String
  RecSel Left DBHelper.LinkDB
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.LinkDB) ->
                 case ds of wild { DBHelper.LinkDB ds1 ds2 ds3 ds4 -> ds4 }) -}
de96a6ad9393ba5b86ccaf1a105b2905
  getAuth :: GHC.Types.IO Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.getAuth1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <Data.Text.Internal.Text>_R)) -}
93161b8baf81738e098058fe4e524384
  getAuth1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Database.Bolt.Connection.Pipe.connect
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         DBHelper.addAuth8)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Connection.Type.Pipe>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ((Database.Bolt.Connection.queryP
                          @ GHC.Types.IO
                          Control.Monad.IO.Class.$fMonadIOIO
                          DBHelper.getAuth3
                          (Data.Map.Base.Tip
                             @ Data.Text.Internal.Text
                             @ Database.Bolt.Value.Type.Value))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.Bolt.Connection.Type.Pipe>_R
                            <GHC.Types.IO>_R
                            <[Database.Bolt.Record.Record]>_N)
                         ipv1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case DBHelper.getAuth2 ipv3 ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ipv1 of wild { Database.Bolt.Connection.Type.Pipe ds4 ds5 ->
                 case ds4 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 case Network.Socket.$wclose
                        ww1
                        ww7
                        ipv4 of ds6 { (#,#) ipv6 ipv7 ->
                 (# ipv6,
                    GHC.List.head @ Data.Text.Internal.Text ipv5 #) } } } } } } }) -}
04a7e7d2e137ccea6582af38271b41f0
  getAuth2 ::
    [Database.Bolt.Record.Record]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Data.Text.Internal.Text] #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
12b63c2f0796ff12ad51393eff3da27c
  getAuth3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "MATCH (n:Auth) RETURN n.token as token"#) -}
517e719794934f7b96fb244d8854f12d
  langKnowledge ::
    GHC.Base.String -> DBHelper.UserDB -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,1*U><L,1*U(1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.langKnowledge1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <DBHelper.UserDB>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
45d01852063e08db71a45a651e554ac3
  langKnowledge1 ::
    GHC.Base.String
    -> DBHelper.UserDB
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U><L,1*U(1*U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (lang :: GHC.Base.String)
                   (user :: DBHelper.UserDB)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DBHelper.addLink1
                        (DBHelper.LinkDB
                           DBHelper.langKnowledge3
                           DBHelper.langKnowledge2
                           (case user of wild { DBHelper.UserDB ds -> ds })
                           lang)
                        s of ds1 { (#,#) ipv ipv1 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   ipv1
                   GHC.Types.True
                   ipv }) -}
4a9caa0b861115b55d4945993f523fc7
  langKnowledge2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Knows"#) -}
4080b7fdc1ae2e49130fbbf925414587
  langKnowledge3 :: GHC.Types.Int
  {- Strictness: m, Unfolding: (DBHelper.userLang) -}
654f1e37f94d0c2c2c0d4baf771da743
  langKnowledgeur ::
    DBHelper.UserDB -> DBHelper.RepoDB -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,1*U(1*U)><L,1*U(A,A,A,A,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.langKnowledgeur1
                  `cast`
                (<DBHelper.UserDB>_R
                 ->_R <DBHelper.RepoDB>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
83359aac389fce83fb4a81f62abf6d05
  langKnowledgeur1 ::
    DBHelper.UserDB
    -> DBHelper.RepoDB
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U(1*U)><L,1*U(A,A,A,A,1*U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (user :: DBHelper.UserDB)
                   (repo :: DBHelper.RepoDB)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DBHelper.addLink1
                        (DBHelper.LinkDB
                           DBHelper.langKnowledge3
                           DBHelper.langKnowledge2
                           (case user of wild { DBHelper.UserDB ds -> ds })
                           (case repo of wild { DBHelper.RepoDB ds ds1 ds2 ds3 ds4 -> ds4 }))
                        s of ds1 { (#,#) ipv ipv1 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   ipv1
                   GHC.Types.True
                   ipv }) -}
5f985298ef4ffaccbf2076c7cd42b205
  linkName :: DBHelper.LinkDB -> GHC.Base.String
  RecSel Left DBHelper.LinkDB
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.LinkDB) ->
                 case ds of wild { DBHelper.LinkDB ds1 ds2 ds3 ds4 -> ds2 }) -}
bb6fafd6519eafc28ff9a9e407132831
  linkRequest :: DBHelper.LinkDB -> GHC.Base.String
  {- Arity: 1, Strictness: <S(S(S)LLL),1*U(1*U(1*U),1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: DBHelper.LinkDB) ->
                 case w of ww { DBHelper.LinkDB ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Types.I# ww6 ->
                 DBHelper.$wlinkRequest ww6 ww2 ww3 ww4 } }) -}
74e138c36b6b6e9acb2fa353fdab2441
  linkType :: DBHelper.LinkDB -> GHC.Types.Int
  RecSel Left DBHelper.LinkDB
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.LinkDB) ->
                 case ds of wild { DBHelper.LinkDB ds1 ds2 ds3 ds4 -> ds1 }) -}
f93fcf7bbf6cf8fe7e676e37a0ba2dbc
  links :: DBHelper.ListOb -> [DBHelper.LinkDB]
  RecSel Left DBHelper.ListOb
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.ListOb) ->
                 case ds of wild { DBHelper.ListOb ds1 ds2 ds3 -> ds3 }) -}
0a4133548aec433610c1c6e9130ec976
  makeLink ::
    GHC.Types.Int
    -> GHC.Base.String
    -> DBHelper.UserDB
    -> DBHelper.RepoDB
    -> GHC.Types.IO DBHelper.LinkDB
  {- Arity: 5,
     Strictness: <L,U><L,U><L,1*U(1*U)><L,1*U(1*U,A,A,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.makeLink1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <DBHelper.UserDB>_R
                 ->_R <DBHelper.RepoDB>_R
                 ->_R Sym (GHC.Types.N:IO[0] <DBHelper.LinkDB>_R)) -}
02b05d663f58954a7060a1f396ecf019
  makeLink1 ::
    GHC.Types.Int
    -> GHC.Base.String
    -> DBHelper.UserDB
    -> DBHelper.RepoDB
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, DBHelper.LinkDB #)
  {- Arity: 5,
     Strictness: <L,U><L,U><L,1*U(1*U)><L,1*U(1*U,A,A,A,A)><S,U>,
     Unfolding: InlineRule (5, True, False)
                (\ (linkType1 :: GHC.Types.Int)
                   (linkName1 :: GHC.Base.String)
                   (user :: DBHelper.UserDB)
                   (repository :: DBHelper.RepoDB)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        DBHelper.makeLink3
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    DBHelper.LinkDB
                      linkType1
                      linkName1
                      (case user of wild { DBHelper.UserDB ds -> ds })
                      (case repository of wild { DBHelper.RepoDB ds ds2 ds3 ds4 ds5 ->
                       ds }) #) }) -}
bd7b17842031888179dfe4bc4dce9d1a
  makeLink2 ::
    GHC.Types.Int
    -> GHC.Base.String
    -> DBHelper.RepoDB
    -> DBHelper.UserDB
    -> GHC.Types.IO DBHelper.LinkDB
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U><L,U><L,1*U(1*U,A,A,A,A)><L,1*U(1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.makeLink4
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <DBHelper.RepoDB>_R
                 ->_R <DBHelper.UserDB>_R
                 ->_R Sym (GHC.Types.N:IO[0] <DBHelper.LinkDB>_R)) -}
2bfde673b496cc431a31cd9c1d09ac73
  makeLink3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "madelink"#) -}
2230e57914ea44e41c244bbb9af1ad57
  makeLink4 ::
    GHC.Types.Int
    -> GHC.Base.String
    -> DBHelper.RepoDB
    -> DBHelper.UserDB
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, DBHelper.LinkDB #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U><L,U><L,1*U(1*U,A,A,A,A)><L,1*U(1*U)><S,U>,
     Unfolding: InlineRule (5, True, False)
                (\ (linkType1 :: GHC.Types.Int)
                   (linkName1 :: GHC.Base.String)
                   (repository :: DBHelper.RepoDB)
                   (user :: DBHelper.UserDB)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta,
                    DBHelper.LinkDB
                      linkType1
                      linkName1
                      (case user of wild { DBHelper.UserDB ds -> ds })
                      (case repository of wild { DBHelper.RepoDB ds ds1 ds2 ds3 ds4 ->
                       ds }) #)) -}
a88fe2563d3c8ea67bdd60727b7faea9
  n4password :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "neo4J"#) -}
59d70ec85974078fbe4653f0b80cda33
  n4user :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "neo4j"#) -}
644ca6e86f8978609fe7f6173c20ef02
  name :: DBHelper.Language -> GHC.Base.String
  RecSel Left DBHelper.Language
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.Language) ->
                 case ds of wild { DBHelper.Language ds1 ds2 -> ds1 }) -}
30dbd161d56112c089a9e84cced5dbaa
  number :: DBHelper.Log -> GHC.Types.Int
  RecSel Left DBHelper.Log
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.Log) ->
                 case ds of wild { DBHelper.Log ds1 ds2 -> ds2 }) -}
799ff7d215e44dd229b60d8cf56584fc
  owns :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Owns"#) -}
dc9718988a4ce54b5da87c50439e65b4
  recent :: DBHelper.RepoDB -> GHC.Types.Bool
  RecSel Left DBHelper.RepoDB
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLSL),1*U(A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.RepoDB) ->
                 case ds of wild { DBHelper.RepoDB ds1 ds2 ds3 ds4 ds5 -> ds4 }) -}
c38b63964e9832794721dfa852b18ac6
  recentKnowledge ::
    GHC.Types.Bool
    -> GHC.Base.String -> DBHelper.UserDB -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U(1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.recentKnowledge1
                  `cast`
                (<GHC.Types.Bool>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <DBHelper.UserDB>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
c688d86d961466da6edadf490ddd2176
  recentKnowledge1 ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> DBHelper.UserDB
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U(1*U)><S,U>,
     Unfolding: (\ (inUse :: GHC.Types.Bool)
                   (lang :: GHC.Base.String)
                   (user :: DBHelper.UserDB)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case inUse of wild {
                   GHC.Types.False
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        DBHelper.recentKnowledge3
                        GHC.Types.True
                        eta
                   GHC.Types.True
                   -> case DBHelper.addLink1
                             (DBHelper.LinkDB
                                DBHelper.userLang
                                DBHelper.recentKnowledge2
                                (case user of wild1 { DBHelper.UserDB ds -> ds })
                                lang)
                             eta of ds1 { (#,#) ipv ipv1 ->
                      GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        ipv1
                        GHC.Types.True
                        ipv } }) -}
cd828f9d00bd056b5433c0aed10d4b55
  recentKnowledge2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Using"#) -}
cc4151f5f5b3dc0960a7ba787f20e953
  recentKnowledge3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "outOfUse"#) -}
55ef05f105122941dc2ac383e4e16e99
  recentKnowledgeur ::
    GHC.Types.Bool
    -> DBHelper.UserDB -> DBHelper.RepoDB -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S,1*U><L,1*U(1*U)><L,1*U(A,A,A,A,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.recentKnowledgeur1
                  `cast`
                (<GHC.Types.Bool>_R
                 ->_R <DBHelper.UserDB>_R
                 ->_R <DBHelper.RepoDB>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
1d9bce933dbc57343ea46b22d14691b2
  recentKnowledgeur1 ::
    GHC.Types.Bool
    -> DBHelper.UserDB
    -> DBHelper.RepoDB
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S,1*U><L,1*U(1*U)><L,1*U(A,A,A,A,1*U)><S,U>,
     Unfolding: (\ (inUse :: GHC.Types.Bool)
                   (user :: DBHelper.UserDB)
                   (repo :: DBHelper.RepoDB)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case inUse of wild {
                   GHC.Types.False
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        DBHelper.recentKnowledge3
                        GHC.Types.True
                        eta
                   GHC.Types.True
                   -> case DBHelper.addLink1
                             (DBHelper.LinkDB
                                DBHelper.userLang
                                DBHelper.recentKnowledge2
                                (case user of wild1 { DBHelper.UserDB ds -> ds })
                                (case repo of wild1 { DBHelper.RepoDB ds ds1 ds2 ds3 ds4 -> ds4 }))
                             eta of ds1 { (#,#) ipv ipv1 ->
                      GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        ipv1
                        GHC.Types.True
                        ipv } }) -}
90c4c1f72823526e4f292206dcf0dfd4
  recentLanguages :: GHC.Types.IO [DBHelper.Language]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.recentLanguages1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <[DBHelper.Language]>_R)) -}
319da8d5c4e74ac340eb8ceea8efa93a
  recentLanguages1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [DBHelper.Language] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Database.Bolt.Connection.Pipe.connect
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         DBHelper.addAuth8)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Connection.Type.Pipe>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ((Database.Bolt.Connection.queryP
                          @ GHC.Types.IO
                          Control.Monad.IO.Class.$fMonadIOIO
                          DBHelper.recentLanguages3
                          (Data.Map.Base.Tip
                             @ Data.Text.Internal.Text
                             @ Database.Bolt.Value.Type.Value))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.Bolt.Connection.Type.Pipe>_R
                            <GHC.Types.IO>_R
                            <[Database.Bolt.Record.Record]>_N)
                         ipv1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Show.showList__
                           @ (Data.Map.Base.Map
                                Data.Text.Internal.Text Database.Bolt.Value.Type.Value)
                           DBHelper.addAuth2
                           ipv3
                           (GHC.Types.[] @ GHC.Types.Char))
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case DBHelper.recentLanguages2
                        ipv3
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ipv1 of wild { Database.Bolt.Connection.Type.Pipe ds5 ds6 ->
                 case ds5 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 case Network.Socket.$wclose
                        ww1
                        ww7
                        ipv6 of ds7 { (#,#) ipv8 ipv9 ->
                 (# ipv8, ipv7 #) } } } } } } } }) -}
66a178aa526877c18820687314682f7b
  recentLanguages2 ::
    [Database.Bolt.Record.Record]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [DBHelper.Language] #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
797193f845f191074c8eb49c648eac44
  recentLanguages3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "Match ()-[r:Using]-(n:Language) return n.name as name, count(r) as rel_count order by rel_count desc"#) -}
fc268c286e711cba15ca367b0d66cac2
  repoLanguage :: DBHelper.RepoDB -> GHC.Base.String
  RecSel Left DBHelper.RepoDB
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.RepoDB) ->
                 case ds of wild { DBHelper.RepoDB ds1 ds2 ds3 ds4 ds5 -> ds5 }) -}
60a4ed2be53b07758da26a7ad13203c4
  repoName :: DBHelper.RepoDB -> GHC.Base.String
  RecSel Left DBHelper.RepoDB
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLLL),1*U(1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.RepoDB) ->
                 case ds of wild { DBHelper.RepoDB ds1 ds2 ds3 ds4 ds5 -> ds1 }) -}
1bb6d483cc8f299118c453117f329e8b
  repoOwner :: DBHelper.RepoDB -> GHC.Base.String
  RecSel Left DBHelper.RepoDB
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLLL),1*U(A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.RepoDB) ->
                 case ds of wild { DBHelper.RepoDB ds1 ds2 ds3 ds4 ds5 -> ds2 }) -}
aaadd546bc6c60252b1ed73da2461f4f
  repoSize :: DBHelper.RepoDB -> GHC.Types.Int
  RecSel Left DBHelper.RepoDB
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLL),1*U(A,A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.RepoDB) ->
                 case ds of wild { DBHelper.RepoDB ds1 ds2 ds3 ds4 ds5 -> ds3 }) -}
d69f89421a9bd2144ebe54d266c9a706
  repos :: DBHelper.ListOb -> [DBHelper.RepoDB]
  RecSel Left DBHelper.ListOb
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.ListOb) ->
                 case ds of wild { DBHelper.ListOb ds1 ds2 ds3 -> ds2 }) -}
f4e8f4db83b9c5be26b79fcf7c264fff
  sortDest ::
    Database.Bolt.Record.Record -> GHC.Types.IO Data.Text.Internal.Text
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.sortDest1
                  `cast`
                (<Database.Bolt.Record.Record>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Data.Text.Internal.Text>_R)) -}
7e8569300aa0f965f585ac3a2437d52c
  sortDest1 ::
    Database.Bolt.Record.Record
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: (\ (record :: Database.Bolt.Record.Record)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DBHelper.sortDest6 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 case (Database.Bolt.Record.$wat
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         record
                         ww1
                         ww2
                         ww3)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Value.Type.Value>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case DBHelper.sortDest5 of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                 case (Database.Bolt.Record.$wat
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         record
                         ww5
                         ww6
                         ww7)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Value.Type.Value>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   DEFAULT
                   -> GHC.IO.failIO1 @ Data.Text.Internal.Text DBHelper.sortDest4 ipv2
                   Database.Bolt.Value.Type.T s1
                   -> case GHC.Base.eqString
                             (Database.Bolt.Value.Type.$w$cshowsPrec1
                                0#
                                ipv1
                                (GHC.Types.[] @ GHC.Types.Char))
                             DBHelper.sortDest3 of wild1 {
                        GHC.Types.False
                        -> case (Database.Bolt.Record.$wat
                                   @ GHC.Types.IO
                                   GHC.Base.$fMonadIO
                                   record
                                   ww1
                                   ww2
                                   ww3)
                                  `cast`
                                (GHC.Types.N:IO[0] <Database.Bolt.Value.Type.Value>_R)
                                  ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                           case ipv5 of wild2 {
                             DEFAULT
                             -> GHC.IO.failIO1 @ Data.Text.Internal.Text DBHelper.sortDest2 ipv4
                             Database.Bolt.Value.Type.T des -> (# ipv4, des #) } }
                        GHC.Types.True -> (# ipv2, s1 #) } } } } } }) -}
2ca8ed5c2b4a965e9a1dc13774cb2d76
  sortDest2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Pattern match failure in do expression at src\\DBHelper.hs:125:17-21"#) -}
f191b78d3197b9a42703cbfb41510e47
  sortDest3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "N ()"#) -}
d08ef58e10276d5f399fe4b144837a06
  sortDest4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Pattern match failure in do expression at src\\DBHelper.hs:121:9-11"#) -}
482da6f3c9db786ce333ad297bf2835f
  sortDest5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "source"#) -}
afbb55b605da18ffefe09032bd82f1d2
  sortDest6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "destination"#) -}
6c13e576f554ba0d3d626f13f994568a
  source :: DBHelper.LinkDB -> GHC.Base.String
  RecSel Left DBHelper.LinkDB
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.LinkDB) ->
                 case ds of wild { DBHelper.LinkDB ds1 ds2 ds3 ds4 -> ds3 }) -}
76b872c07137f1d1d6fbb92718b5e0f2
  toAuth ::
    Database.Bolt.Record.Record -> GHC.Types.IO Data.Text.Internal.Text
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.toAuth1
                  `cast`
                (<Database.Bolt.Record.Record>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Data.Text.Internal.Text>_R)) -}
77fccaef561746d25eccf545eaadea58
  toAuth1 ::
    Database.Bolt.Record.Record
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (record :: Database.Bolt.Record.Record)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (Data.Map.Base.$fShowMap_$cshow
                           @ Data.Text.Internal.Text
                           @ Database.Bolt.Value.Type.Value
                           Data.Text.Show.$fShowText
                           Database.Bolt.Value.Type.$fShowValue
                           record)
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case DBHelper.toAuth3 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 case (Database.Bolt.Record.$wat
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         record
                         ww1
                         ww2
                         ww3)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Value.Type.Value>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   DEFAULT
                   -> GHC.IO.failIO1 @ Data.Text.Internal.Text DBHelper.toAuth2 ipv2
                   Database.Bolt.Value.Type.T token
                   -> case GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             (case token of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                              let {
                                end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                              } in
                              letrec {
                                $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                                = \ (ww4 :: GHC.Prim.Int#) ->
                                  case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.>=# ww4 end) of wild2 {
                                    GHC.Types.False
                                    -> case GHC.Prim.indexWord16Array# dt ww4 of r# { DEFAULT ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.geWord# r# 55296##) of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ GHC.Types.Char
                                              (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                              ($wunfold (GHC.Prim.+# ww4 1#))
                                         GHC.Types.True
                                         -> case GHC.Prim.tagToEnum#
                                                   @ GHC.Types.Bool
                                                   (GHC.Prim.leWord# r# 56319##) of wild4 {
                                              GHC.Types.False
                                              -> GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                   ($wunfold (GHC.Prim.+# ww4 1#))
                                              GHC.Types.True
                                              -> case GHC.Prim.indexWord16Array#
                                                        dt
                                                        (GHC.Prim.+# ww4 1#) of r#1 { DEFAULT ->
                                                 GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr#
                                                         (GHC.Prim.+#
                                                            (GHC.Prim.+#
                                                               (GHC.Prim.uncheckedIShiftL#
                                                                  (GHC.Prim.-#
                                                                     (GHC.Prim.word2Int# r#)
                                                                     55296#)
                                                                  10#)
                                                               (GHC.Prim.-#
                                                                  (GHC.Prim.word2Int# r#1)
                                                                  56320#))
                                                            65536#)))
                                                   ($wunfold (GHC.Prim.+# ww4 2#)) } } } }
                                    GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                              } in
                              $wunfold dt1 })
                             GHC.Types.True
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      (# ipv4, token #) } } } } }) -}
c9e9226ce9db4f239bd35bb0deeb2441
  toAuth2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Pattern match failure in do expression at src\\DBHelper.hs:293:5-11"#) -}
b7370d300d42d91f08d2bf612a053863
  toAuth3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "token"#) -}
8711918671abf3ae1d43d87042caa347
  toLang ::
    Database.Bolt.Record.Record -> GHC.Types.IO DBHelper.Language
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.toLang1
                  `cast`
                (<Database.Bolt.Record.Record>_R
                 ->_R Sym (GHC.Types.N:IO[0] <DBHelper.Language>_R)) -}
89305cc864f3a85bc8ae46187e7d9a54
  toLang1 ::
    Database.Bolt.Record.Record
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, DBHelper.Language #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (record :: Database.Bolt.Record.Record)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DBHelper.toLang4 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 case (Database.Bolt.Record.$wat
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         record
                         ww1
                         ww2
                         ww3)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Value.Type.Value>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   DEFAULT -> GHC.IO.failIO1 @ DBHelper.Language DBHelper.toLang3 ipv
                   Database.Bolt.Value.Type.T name1
                   -> (# ipv,
                         DBHelper.Language
                           (case name1 of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                            let {
                              end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                            } in
                            letrec {
                              $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                              = \ (ww4 :: GHC.Prim.Int#) ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.>=# ww4 end) of wild2 {
                                  GHC.Types.False
                                  -> case GHC.Prim.indexWord16Array# dt ww4 of r# { DEFAULT ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.geWord# r# 55296##) of wild3 {
                                       GHC.Types.False
                                       -> GHC.Types.:
                                            @ GHC.Types.Char
                                            (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                            ($wunfold (GHC.Prim.+# ww4 1#))
                                       GHC.Types.True
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.leWord# r# 56319##) of wild4 {
                                            GHC.Types.False
                                            -> GHC.Types.:
                                                 @ GHC.Types.Char
                                                 (GHC.Types.C#
                                                    (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                 ($wunfold (GHC.Prim.+# ww4 1#))
                                            GHC.Types.True
                                            -> case GHC.Prim.indexWord16Array#
                                                      dt
                                                      (GHC.Prim.+# ww4 1#) of r#1 { DEFAULT ->
                                               GHC.Types.:
                                                 @ GHC.Types.Char
                                                 (GHC.Types.C#
                                                    (GHC.Prim.chr#
                                                       (GHC.Prim.+#
                                                          (GHC.Prim.+#
                                                             (GHC.Prim.uncheckedIShiftL#
                                                                (GHC.Prim.-#
                                                                   (GHC.Prim.word2Int# r#)
                                                                   55296#)
                                                                10#)
                                                             (GHC.Prim.-#
                                                                (GHC.Prim.word2Int# r#1)
                                                                56320#))
                                                          65536#)))
                                                 ($wunfold (GHC.Prim.+# ww4 2#)) } } } }
                                  GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                            } in
                            $wunfold dt1 })
                           DBHelper.toLang2 #) } } }) -}
c3aec3574e803910fc0ecfb86d949e83
  toLang2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
1ccd0b45a657f87484947b3384c74c13
  toLang3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Pattern match failure in do expression at src\\DBHelper.hs:250:5-10"#) -}
7b9785e97119d5ce14cf80e8d7383ebe
  toLang4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "n.name"#) -}
53054fce82e89cff9d6e033653762377
  toLink ::
    Database.Bolt.Record.Record -> GHC.Types.IO DBHelper.LinkDB
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.toLink1
                  `cast`
                (<Database.Bolt.Record.Record>_R
                 ->_R Sym (GHC.Types.N:IO[0] <DBHelper.LinkDB>_R)) -}
1cb29fe9050f5a1aa50c7ffebf71ad6b
  toLink1 ::
    Database.Bolt.Record.Record
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, DBHelper.LinkDB #)
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: (\ (record :: Database.Bolt.Record.Record)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DBHelper.sortDest5 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 case (Database.Bolt.Record.$wat
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         record
                         ww1
                         ww2
                         ww3)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Value.Type.Value>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ DBHelper.LinkDB
                        DBHelper.toLink3
                        ipv
                   Database.Bolt.Value.Type.T s1
                   -> case DBHelper.sortDest1 record ipv of ds2 { (#,#) ipv2 ipv3 ->
                      (# ipv2,
                         DBHelper.LinkDB
                           DBHelper.userRepo
                           DBHelper.toLink2
                           (case s1 of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                            let {
                              end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                            } in
                            letrec {
                              $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                              = \ (ww4 :: GHC.Prim.Int#) ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.>=# ww4 end) of wild2 {
                                  GHC.Types.False
                                  -> case GHC.Prim.indexWord16Array# dt ww4 of r# { DEFAULT ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.geWord# r# 55296##) of wild3 {
                                       GHC.Types.False
                                       -> GHC.Types.:
                                            @ GHC.Types.Char
                                            (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                            ($wunfold (GHC.Prim.+# ww4 1#))
                                       GHC.Types.True
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.leWord# r# 56319##) of wild4 {
                                            GHC.Types.False
                                            -> GHC.Types.:
                                                 @ GHC.Types.Char
                                                 (GHC.Types.C#
                                                    (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                 ($wunfold (GHC.Prim.+# ww4 1#))
                                            GHC.Types.True
                                            -> case GHC.Prim.indexWord16Array#
                                                      dt
                                                      (GHC.Prim.+# ww4 1#) of r#1 { DEFAULT ->
                                               GHC.Types.:
                                                 @ GHC.Types.Char
                                                 (GHC.Types.C#
                                                    (GHC.Prim.chr#
                                                       (GHC.Prim.+#
                                                          (GHC.Prim.+#
                                                             (GHC.Prim.uncheckedIShiftL#
                                                                (GHC.Prim.-#
                                                                   (GHC.Prim.word2Int# r#)
                                                                   55296#)
                                                                10#)
                                                             (GHC.Prim.-#
                                                                (GHC.Prim.word2Int# r#1)
                                                                56320#))
                                                          65536#)))
                                                 ($wunfold (GHC.Prim.+# ww4 2#)) } } } }
                                  GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                            } in
                            $wunfold dt1 })
                           (case ipv3 of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                            let {
                              end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                            } in
                            letrec {
                              $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                              = \ (ww4 :: GHC.Prim.Int#) ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.>=# ww4 end) of wild2 {
                                  GHC.Types.False
                                  -> case GHC.Prim.indexWord16Array# dt ww4 of r# { DEFAULT ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.geWord# r# 55296##) of wild3 {
                                       GHC.Types.False
                                       -> GHC.Types.:
                                            @ GHC.Types.Char
                                            (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                            ($wunfold (GHC.Prim.+# ww4 1#))
                                       GHC.Types.True
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.leWord# r# 56319##) of wild4 {
                                            GHC.Types.False
                                            -> GHC.Types.:
                                                 @ GHC.Types.Char
                                                 (GHC.Types.C#
                                                    (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                 ($wunfold (GHC.Prim.+# ww4 1#))
                                            GHC.Types.True
                                            -> case GHC.Prim.indexWord16Array#
                                                      dt
                                                      (GHC.Prim.+# ww4 1#) of r#1 { DEFAULT ->
                                               GHC.Types.:
                                                 @ GHC.Types.Char
                                                 (GHC.Types.C#
                                                    (GHC.Prim.chr#
                                                       (GHC.Prim.+#
                                                          (GHC.Prim.+#
                                                             (GHC.Prim.uncheckedIShiftL#
                                                                (GHC.Prim.-#
                                                                   (GHC.Prim.word2Int# r#)
                                                                   55296#)
                                                                10#)
                                                             (GHC.Prim.-#
                                                                (GHC.Prim.word2Int# r#1)
                                                                56320#))
                                                          65536#)))
                                                 ($wunfold (GHC.Prim.+# ww4 2#)) } } } }
                                  GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                            } in
                            $wunfold dt1 }) #) } } } }) -}
2645f3fd11f168870e1227a400babecc
  toLink2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Type"#) -}
7c2f1f1181717ec418bd4d13b0ffd0b1
  toLink3 :: GHC.Exception.SomeException
  {- Unfolding: (GHC.IO.Exception.$fExceptionIOException_$ctoException
                   DBHelper.toLink4) -}
d3c9d7e668b0f9228ea6cef146517e29
  toLink4 :: GHC.IO.Exception.IOException
  {- Unfolding: (GHC.IO.Exception.IOError
                   (GHC.Base.Nothing @ GHC.IO.Handle.Types.Handle)
                   GHC.IO.Exception.UserError
                   (GHC.Types.[] @ GHC.Types.Char)
                   DBHelper.toLink5
                   (GHC.Base.Nothing @ Foreign.C.Types.CInt)
                   (GHC.Base.Nothing @ GHC.IO.FilePath)) -}
726bb4d585e529a428024636f29de01f
  toLink5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Pattern match failure in do expression at src\\DBHelper.hs:112:5-7"#) -}
4a90cb94ef3623630ea4724e105963f2
  toRankedLang ::
    Database.Bolt.Record.Record -> GHC.Types.IO DBHelper.Language
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.toRankedLang1
                  `cast`
                (<Database.Bolt.Record.Record>_R
                 ->_R Sym (GHC.Types.N:IO[0] <DBHelper.Language>_R)) -}
c910ba6c87fa6a269fbb35a1c7cd7078
  toRankedLang1 ::
    Database.Bolt.Record.Record
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, DBHelper.Language #)
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: (\ (record :: Database.Bolt.Record.Record)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DBHelper.toRankedLang7 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 case (Database.Bolt.Record.$wat
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         record
                         ww1
                         ww2
                         ww3)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Value.Type.Value>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ DBHelper.Language
                        DBHelper.toRankedLang4
                        ipv
                   Database.Bolt.Value.Type.T name1
                   -> case DBHelper.toRankedLang3 of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                      case (Database.Bolt.Record.$wat
                              @ GHC.Types.IO
                              GHC.Base.$fMonadIO
                              record
                              ww5
                              ww6
                              ww7)
                             `cast`
                           (GHC.Types.N:IO[0] <Database.Bolt.Value.Type.Value>_R)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild1 {
                        DEFAULT
                        -> GHC.IO.failIO1 @ DBHelper.Language DBHelper.toRankedLang2 ipv2
                        Database.Bolt.Value.Type.I val
                        -> (# ipv2,
                              DBHelper.Language
                                (case name1 of wild2 { Data.Text.Internal.Text dt dt1 dt2 ->
                                 let {
                                   end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                                 } in
                                 letrec {
                                   $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                                   = \ (ww8 :: GHC.Prim.Int#) ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.>=# ww8 end) of wild3 {
                                       GHC.Types.False
                                       -> case GHC.Prim.indexWord16Array# dt ww8 of r# { DEFAULT ->
                                          case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.geWord# r# 55296##) of wild4 {
                                            GHC.Types.False
                                            -> GHC.Types.:
                                                 @ GHC.Types.Char
                                                 (GHC.Types.C#
                                                    (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                 ($wunfold (GHC.Prim.+# ww8 1#))
                                            GHC.Types.True
                                            -> case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.leWord# r# 56319##) of wild5 {
                                                 GHC.Types.False
                                                 -> GHC.Types.:
                                                      @ GHC.Types.Char
                                                      (GHC.Types.C#
                                                         (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                      ($wunfold (GHC.Prim.+# ww8 1#))
                                                 GHC.Types.True
                                                 -> case GHC.Prim.indexWord16Array#
                                                           dt
                                                           (GHC.Prim.+# ww8 1#) of r#1 { DEFAULT ->
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      (GHC.Types.C#
                                                         (GHC.Prim.chr#
                                                            (GHC.Prim.+#
                                                               (GHC.Prim.+#
                                                                  (GHC.Prim.uncheckedIShiftL#
                                                                     (GHC.Prim.-#
                                                                        (GHC.Prim.word2Int# r#)
                                                                        55296#)
                                                                     10#)
                                                                  (GHC.Prim.-#
                                                                     (GHC.Prim.word2Int# r#1)
                                                                     56320#))
                                                               65536#)))
                                                      ($wunfold (GHC.Prim.+# ww8 2#)) } } } }
                                       GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                                 } in
                                 $wunfold dt1 })
                                (GHC.Real.$fIntegralInt_$ctoInteger val) #) } } } } } }) -}
c69cd89829cd56a0413484cc40cf394a
  toRankedLang2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Pattern match failure in do expression at src\\DBHelper.hs:244:5-9"#) -}
753e8fd876b593e29fa77cb819559194
  toRankedLang3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "rel_count"#) -}
ad66d75fbd0c6bffafec917ca3164159
  toRankedLang4 :: GHC.Exception.SomeException
  {- Unfolding: (GHC.IO.Exception.$fExceptionIOException_$ctoException
                   DBHelper.toRankedLang5) -}
0e616b4ed8a30d0f8b757319c554c64e
  toRankedLang5 :: GHC.IO.Exception.IOException
  {- Unfolding: (GHC.IO.Exception.IOError
                   (GHC.Base.Nothing @ GHC.IO.Handle.Types.Handle)
                   GHC.IO.Exception.UserError
                   (GHC.Types.[] @ GHC.Types.Char)
                   DBHelper.toRankedLang6
                   (GHC.Base.Nothing @ Foreign.C.Types.CInt)
                   (GHC.Base.Nothing @ GHC.IO.FilePath)) -}
d81063b7cb6caf3793f2e9fe743d5ff8
  toRankedLang6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Pattern match failure in do expression at src\\DBHelper.hs:243:5-10"#) -}
ca45dfffd3150bbdc295712aa1c8b3f4
  toRankedLang7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "name"#) -}
7efcf936eedd545f0a7ee549b77986c9
  toRepo ::
    Database.Bolt.Record.Record -> GHC.Types.IO DBHelper.RepoDB
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.toRepo1
                  `cast`
                (<Database.Bolt.Record.Record>_R
                 ->_R Sym (GHC.Types.N:IO[0] <DBHelper.RepoDB>_R)) -}
57bee151a07767c81b71f375e079c767
  toRepo1 ::
    Database.Bolt.Record.Record
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, DBHelper.RepoDB #)
  {- Arity: 2, Strictness: <S,U><S,U> -}
356a90959a9255f8c34376671869a399
  toUser ::
    Database.Bolt.Record.Record -> GHC.Types.IO DBHelper.UserDB
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.toUser1
                  `cast`
                (<Database.Bolt.Record.Record>_R
                 ->_R Sym (GHC.Types.N:IO[0] <DBHelper.UserDB>_R)) -}
4944336580addbc92f633ecb2edd2982
  toUser1 ::
    Database.Bolt.Record.Record
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, DBHelper.UserDB #)
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: (\ (record :: Database.Bolt.Record.Record)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DBHelper.toUser5 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 case (Database.Bolt.Record.$wat
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         record
                         ww1
                         ww2
                         ww3)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Value.Type.Value>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ DBHelper.UserDB
                        DBHelper.toUser2
                        ipv
                   Database.Bolt.Value.Type.T name1
                   -> case GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             (Data.Map.Base.$fShowMap_$cshow
                                @ Data.Text.Internal.Text
                                @ Database.Bolt.Value.Type.Value
                                Data.Text.Show.$fShowText
                                Database.Bolt.Value.Type.$fShowValue
                                record)
                             GHC.Types.True
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      (# ipv2,
                         DBHelper.UserDB
                           (case name1 of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                            let {
                              end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                            } in
                            letrec {
                              $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                              = \ (ww4 :: GHC.Prim.Int#) ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.>=# ww4 end) of wild2 {
                                  GHC.Types.False
                                  -> case GHC.Prim.indexWord16Array# dt ww4 of r# { DEFAULT ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.geWord# r# 55296##) of wild3 {
                                       GHC.Types.False
                                       -> GHC.Types.:
                                            @ GHC.Types.Char
                                            (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                            ($wunfold (GHC.Prim.+# ww4 1#))
                                       GHC.Types.True
                                       -> case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.leWord# r# 56319##) of wild4 {
                                            GHC.Types.False
                                            -> GHC.Types.:
                                                 @ GHC.Types.Char
                                                 (GHC.Types.C#
                                                    (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                 ($wunfold (GHC.Prim.+# ww4 1#))
                                            GHC.Types.True
                                            -> case GHC.Prim.indexWord16Array#
                                                      dt
                                                      (GHC.Prim.+# ww4 1#) of r#1 { DEFAULT ->
                                               GHC.Types.:
                                                 @ GHC.Types.Char
                                                 (GHC.Types.C#
                                                    (GHC.Prim.chr#
                                                       (GHC.Prim.+#
                                                          (GHC.Prim.+#
                                                             (GHC.Prim.uncheckedIShiftL#
                                                                (GHC.Prim.-#
                                                                   (GHC.Prim.word2Int# r#)
                                                                   55296#)
                                                                10#)
                                                             (GHC.Prim.-#
                                                                (GHC.Prim.word2Int# r#1)
                                                                56320#))
                                                          65536#)))
                                                 ($wunfold (GHC.Prim.+# ww4 2#)) } } } }
                                  GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                            } in
                            $wunfold dt1 }) #) } } } }) -}
9e9773375c7249eaac18fb3a06c49c03
  toUser2 :: GHC.Exception.SomeException
  {- Unfolding: (GHC.IO.Exception.$fExceptionIOException_$ctoException
                   DBHelper.toUser3) -}
b27f7566178110a178a37890329e6cbb
  toUser3 :: GHC.IO.Exception.IOException
  {- Unfolding: (GHC.IO.Exception.IOError
                   (GHC.Base.Nothing @ GHC.IO.Handle.Types.Handle)
                   GHC.IO.Exception.UserError
                   (GHC.Types.[] @ GHC.Types.Char)
                   DBHelper.toUser4
                   (GHC.Base.Nothing @ Foreign.C.Types.CInt)
                   (GHC.Base.Nothing @ GHC.IO.FilePath)) -}
3082bd4f7a03df1056585aff60d4fd71
  toUser4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Pattern match failure in do expression at src\\DBHelper.hs:76:5-10"#) -}
d6563d13429f6d9ed39c59f03b41a703
  toUser5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "n.userId"#) -}
c05bdbacd407055b4aca2d7985e7f9ec
  userId :: DBHelper.UserDB -> GHC.Base.String
  RecSel Left DBHelper.UserDB
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.UserDB) ->
                 case ds of wild { DBHelper.UserDB ds1 -> ds1 }) -}
314a5ede94ab542c5be9aee9490880c8
  userLang :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
173d7de50bcf7dc90c8ed405b6b5d7ec
  userLanguageList ::
    GHC.Base.String -> GHC.Types.IO [DBHelper.Language]
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.userLanguageList1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[DBHelper.Language]>_R)) -}
df1b8e11c1f665de998f3b78f9d57b2c
  userLanguageList1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [DBHelper.Language] #)
  {- Arity: 2, Strictness: <L,1*U><S,U>,
     Unfolding: (\ (userId1 :: GHC.Base.String)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DBHelper.addAuth7
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Connection.Type.Pipe>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ((Database.Bolt.Connection.queryP
                          @ GHC.Types.IO
                          Control.Monad.IO.Class.$fMonadIOIO
                          (case GHC.CString.unpackAppendCString#
                                  "MATCH (n:Language) MATCH (s:User {userId: \""#
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     userId1
                                     DBHelper.userLanguageList3) of dt { DEFAULT ->
                           case GHC.Magic.runRW#
                                  @ 'GHC.Types.PtrRepLifted
                                  @ Data.Text.Internal.Text
                                  (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                   case GHC.Prim.newByteArray#
                                          @ GHC.Prim.RealWorld
                                          8#
                                          s1 of ds2 { (#,#) ipv2 ipv3 ->
                                   DBHelper.$wouter9
                                     (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv3)
                                     DBHelper.$fToJSONLanguage4
                                     dt
                                     0#
                                     ipv2 }) of ds2 { (#,#) ipv2 ipv3 ->
                           ipv3 } })
                          (Data.Map.Base.Tip
                             @ Data.Text.Internal.Text
                             @ Database.Bolt.Value.Type.Value))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.Bolt.Connection.Type.Pipe>_R
                            <GHC.Types.IO>_R
                            <[Database.Bolt.Record.Record]>_N)
                         ipv1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Show.showList__
                           @ (Data.Map.Base.Map
                                Data.Text.Internal.Text Database.Bolt.Value.Type.Value)
                           DBHelper.addAuth2
                           ipv3
                           (GHC.Types.[] @ GHC.Types.Char))
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case DBHelper.userLanguageList2
                        ipv3
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ipv1 of wild { Database.Bolt.Connection.Type.Pipe ds5 ds6 ->
                 case ds5 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 case Network.Socket.$wclose
                        ww1
                        ww7
                        ipv6 of ds7 { (#,#) ipv8 ipv9 ->
                 (# ipv8, ipv7 #) } } } } } } } }) -}
4f039c1fcb582f85e03ac30d1a6fcb35
  userLanguageList2 ::
    [Database.Bolt.Record.Record]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [DBHelper.Language] #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
b6b32c0e6423f3d66e6d59f39ec060c4
  userLanguageList3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "\"}) MATCH (s)-[r:Knows]-(n) RETURN n.name"#) -}
f719af1feffa18462598af6c2d535a4b
  userRepo :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
dd0c78d60d40bc73112d796fe9ea49f9
  users :: DBHelper.ListOb -> [DBHelper.UserDB]
  RecSel Left DBHelper.ListOb
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.ListOb) ->
                 case ds of wild { DBHelper.ListOb ds1 ds2 ds3 -> ds1 }) -}
09724f48e726b98d86d2c4f8fb11fa9d
  value :: DBHelper.Language -> GHC.Integer.Type.Integer
  RecSel Left DBHelper.Language
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.Language) ->
                 case ds of wild { DBHelper.Language ds1 ds2 -> ds2 }) -}
8ca2c0cae975cc46f4a4a5a6f489550f
  word :: DBHelper.Log -> GHC.Base.String
  RecSel Left DBHelper.Log
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.Log) ->
                 case ds of wild { DBHelper.Log ds1 ds2 -> ds1 }) -}
instance GHC.Classes.Eq [DBHelper.Language] = DBHelper.$fEqLanguage
instance GHC.Classes.Eq [DBHelper.LinkDB] = DBHelper.$fEqLinkDB
instance GHC.Classes.Eq [DBHelper.ListOb] = DBHelper.$fEqListOb
instance GHC.Classes.Eq [DBHelper.Log] = DBHelper.$fEqLog
instance GHC.Classes.Eq [DBHelper.RepoDB] = DBHelper.$fEqRepoDB
instance GHC.Classes.Eq [DBHelper.UserDB] = DBHelper.$fEqUserDB
instance Data.Aeson.Types.FromJSON.FromJSON [DBHelper.Language]
  = DBHelper.$fFromJSONLanguage
instance Data.Aeson.Types.FromJSON.FromJSON [DBHelper.LinkDB]
  = DBHelper.$fFromJSONLinkDB
instance Data.Aeson.Types.FromJSON.FromJSON [DBHelper.ListOb]
  = DBHelper.$fFromJSONListOb
instance Data.Aeson.Types.FromJSON.FromJSON [DBHelper.Log]
  = DBHelper.$fFromJSONLog
instance Data.Aeson.Types.FromJSON.FromJSON [DBHelper.RepoDB]
  = DBHelper.$fFromJSONRepoDB
instance Data.Aeson.Types.FromJSON.FromJSON [DBHelper.UserDB]
  = DBHelper.$fFromJSONUserDB
instance GHC.Generics.Generic [DBHelper.Language]
  = DBHelper.$fGenericLanguage
instance GHC.Generics.Generic [DBHelper.LinkDB]
  = DBHelper.$fGenericLinkDB
instance GHC.Generics.Generic [DBHelper.ListOb]
  = DBHelper.$fGenericListOb
instance GHC.Generics.Generic [DBHelper.Log]
  = DBHelper.$fGenericLog
instance GHC.Generics.Generic [DBHelper.RepoDB]
  = DBHelper.$fGenericRepoDB
instance GHC.Generics.Generic [DBHelper.UserDB]
  = DBHelper.$fGenericUserDB
instance GHC.Show.Show [DBHelper.Language]
  = DBHelper.$fShowLanguage
instance GHC.Show.Show [DBHelper.LinkDB] = DBHelper.$fShowLinkDB
instance GHC.Show.Show [DBHelper.ListOb] = DBHelper.$fShowListOb
instance GHC.Show.Show [DBHelper.Log] = DBHelper.$fShowLog
instance GHC.Show.Show [DBHelper.RepoDB] = DBHelper.$fShowRepoDB
instance GHC.Show.Show [DBHelper.UserDB] = DBHelper.$fShowUserDB
instance Data.Aeson.Types.ToJSON.ToJSON [DBHelper.Language]
  = DBHelper.$fToJSONLanguage
instance Data.Aeson.Types.ToJSON.ToJSON [DBHelper.LinkDB]
  = DBHelper.$fToJSONLinkDB
instance Data.Aeson.Types.ToJSON.ToJSON [DBHelper.ListOb]
  = DBHelper.$fToJSONListOb
instance Data.Aeson.Types.ToJSON.ToJSON [DBHelper.Log]
  = DBHelper.$fToJSONLog
instance Data.Aeson.Types.ToJSON.ToJSON [DBHelper.RepoDB]
  = DBHelper.$fToJSONRepoDB
instance Data.Aeson.Types.ToJSON.ToJSON [DBHelper.UserDB]
  = DBHelper.$fToJSONUserDB
family instance GHC.Generics.Rep [DBHelper.ListOb]
  = DBHelper.Rep_ListOb
family instance GHC.Generics.Rep [DBHelper.LinkDB]
  = DBHelper.Rep_LinkDB
family instance GHC.Generics.Rep [DBHelper.RepoDB]
  = DBHelper.Rep_RepoDB
family instance GHC.Generics.Rep [DBHelper.UserDB]
  = DBHelper.Rep_UserDB
family instance GHC.Generics.Rep [DBHelper.Log] = DBHelper.Rep_Log
family instance GHC.Generics.Rep [DBHelper.Language]
  = DBHelper.Rep_Language
"SPEC/DBHelper $fFromJSON[] @ Char" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                     GHC.Types.Char)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ GHC.Types.Char $dFromJSON
  = DBHelper.$fFromJSONLanguage_$s$fFromJSON[]
"SPEC/DBHelper $fFromJSON[] @ LinkDB" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                       DBHelper.LinkDB)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ DBHelper.LinkDB $dFromJSON
  = DBHelper.$fFromJSONListOb_$s$fFromJSON[]
"SPEC/DBHelper $fFromJSON[] @ RepoDB" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                       DBHelper.RepoDB)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ DBHelper.RepoDB $dFromJSON
  = DBHelper.$fFromJSONListOb_$s$fFromJSON[]1
"SPEC/DBHelper $fFromJSON[] @ UserDB" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                       DBHelper.UserDB)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ DBHelper.UserDB $dFromJSON
  = DBHelper.$fFromJSONListOb_$s$fFromJSON[]2
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "destination") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                                                                                    ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                   'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                    ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                   'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                    ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                  ('GHC.Base.Just
                                                                                                                                                                                                     "destination"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "destination")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "linkName") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                                                                                 ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                 ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                 ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                                  "linkName"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "linkName")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel2
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "linkType") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                                                                                 ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                 ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                 ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                                  "linkType"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "linkType")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel3
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "links") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                              ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                              ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                              ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                                                               "links"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "links")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONListOb_$s$fSelectorMetaMetaSel
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "name") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                             ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                             ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                             ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                           ('GHC.Base.Just
                                                                                                                                                                                              "name"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "name")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONLanguage_$s$fSelectorMetaMetaSel1
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "number") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                               ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                "number"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "number")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONLog_$s$fSelectorMetaMetaSel
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "recent") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                               ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                "recent"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "recent")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel1
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "repoLanguage") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                                     ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                     ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                     ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                   ('GHC.Base.Just
                                                                                                                                                                                                      "repoLanguage"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just
                                          "repoLanguage")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "repoName") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                                                                                 ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                 ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                 ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                                  "repoName"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "repoName")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel4
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "repoOwner") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                                                                                                  ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                 'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                  ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                 'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                  ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                ('GHC.Base.Just
                                                                                                                                                                                                   "repoOwner"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "repoOwner")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel3
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "repoSize") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                                                                                 ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                 ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                 ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                                  "repoSize"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "repoSize")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel2
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "repos") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                              ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                              ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                              ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                                                               "repos"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "repos")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONListOb_$s$fSelectorMetaMetaSel1
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "source") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                               ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                "source"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "source")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel1
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "userId") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                               ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                "userId"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "userId")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONUserDB_$s$fSelectorMetaMetaSel
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "users") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                              ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                              ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                              ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                                                               "users"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "users")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONListOb_$s$fSelectorMetaMetaSel2
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "value") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.DecidedLazy)
                                                                                                                                                                              ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                              ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                              ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                                                               "value"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "value")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONLanguage_$s$fSelectorMetaMetaSel
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "word") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                             ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                             ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                             ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                           ('GHC.Base.Just
                                                                                                                                                                                              "word"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "word")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONLog_$s$fSelectorMetaMetaSel1
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "destination") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                        ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                       'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                        ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                        ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                      ('GHC.Base.Just
                                                                                                                                                                                                                         "destination"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "destination")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "linkName") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                     ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                     ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                     ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                   ('GHC.Base.Just
                                                                                                                                                                                                                      "linkName"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "linkName")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName2
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "linkType") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                     ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                     ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                     ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                   ('GHC.Base.Just
                                                                                                                                                                                                                      "linkType"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "linkType")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName3
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "links") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                  ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                  ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                  ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                ('GHC.Base.Just
                                                                                                                                                                                                                   "links"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "links")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONListOb_$s$fSelectorMetaMetaSel_$cselName
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "name") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                 ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                 ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                 ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                                                  "name"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "name")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONLanguage_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "number") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                   ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                   ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                   ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                 ('GHC.Base.Just
                                                                                                                                                                                                                    "number"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "number")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONLog_$s$fSelectorMetaMetaSel_$cselName
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "recent") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                   ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                   ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                   ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                 ('GHC.Base.Just
                                                                                                                                                                                                                    "recent"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "recent")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "repoLanguage") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                        'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                         ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                        'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                         ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                        'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                         ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                       ('GHC.Base.Just
                                                                                                                                                                                                                          "repoLanguage"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "repoLanguage")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel_$cselName
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "repoName") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                     ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                     ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                     ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                   ('GHC.Base.Just
                                                                                                                                                                                                                      "repoName"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "repoName")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel_$cselName4
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "repoOwner") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                      ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                     'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                      ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                      ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                    ('GHC.Base.Just
                                                                                                                                                                                                                       "repoOwner"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "repoOwner")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel_$cselName3
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "repoSize") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                     ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                     ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                     ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                   ('GHC.Base.Just
                                                                                                                                                                                                                      "repoSize"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "repoSize")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fToJSONListOb_$s$fSelectorMetaMetaSel_$cselName2
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "repos") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                  ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                  ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                  ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                ('GHC.Base.Just
                                                                                                                                                                                                                   "repos"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "repos")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONListOb_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "source") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                   ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                   ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                   ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                 ('GHC.Base.Just
                                                                                                                                                                                                                    "source"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "source")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "userId") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                   ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                   ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                   ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                 ('GHC.Base.Just
                                                                                                                                                                                                                    "userId"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "userId")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONUserDB_$s$fSelectorMetaMetaSel_$cselName
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "users") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                  ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                  ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                  ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                ('GHC.Base.Just
                                                                                                                                                                                                                   "users"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "users")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONListOb_$s$fSelectorMetaMetaSel_$cselName2
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "value") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                  ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                  ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                  ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                ('GHC.Base.Just
                                                                                                                                                                                                                   "value"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "value")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONLanguage_$s$fSelectorMetaMetaSel_$cselName
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "word") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                 ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                 ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                 ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                                                  "word"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "word")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONLog_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/DBHelper fromList @ Text _" [ALWAYS] forall @ a
                                                  ($dOrd :: GHC.Classes.Ord Data.Text.Internal.Text)
  Data.Map.Base.fromList @ Data.Text.Internal.Text @ a $dOrd
  = DBHelper.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

