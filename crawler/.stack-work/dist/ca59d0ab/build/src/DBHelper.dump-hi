
==================== FINAL INTERFACE ====================
2017-03-16 20:13:09.2429061 UTC

interface crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ:DBHelper [family instance module] 8002
  interface hash: ae03b3427c1b4fc8ebaf53cc04708fc2
  ABI hash: e8d31ec523e1a316313b9ed387c7f895
  export-list hash: bc7db54b232af91be6babcbdb5e87e51
  orphan hash: cf73b8645dfd50505061646a7473a9c9
  flag hash: b40c1800ca63765d1285c272fed17bef
  sig of: Nothing
  used TH splices: False
  where
exports:
  DBHelper.addUser
  DBHelper.n4password
  DBHelper.n4user
  DBHelper.testFunction
  DBHelper.testFunction'
  DBHelper.testFunction''
  DBHelper.LinkDB{DBHelper.LinkDB destination linkType source}
  DBHelper.RepoDB{DBHelper.RepoDB repoId repolabel}
  DBHelper.UserDB{DBHelper.UserDB hops userId}
module dependencies:
package dependencies: Win32-2.3.1.1@Win32-2.3.1.1
                      aeson-1.0.2.1@aeson-1.0.2.1-9NPC6B17ifJ9yEOgZnhnOr
                      array-0.5.1.1@array-0.5.1.1
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-HCAgpBrKCLJ5li8FbfXxE1
                      base-4.9.1.0
                      base-compat-0.9.1@base-compat-0.9.1-LCsIPF9jlXlGhbEFi39hJ1
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      data-binary-ieee754-0.4.4@data-binary-ieee754-0.4.4-7iiF2mP1jcB6tVSPgIyBOi
                      data-default-0.7.1.1@data-default-0.7.1.1-7EGYJX2YWqWJRbPFUHNoCr
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-FKnZBeovJMk4M89wQxDhjl
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa
                      hashable-1.2.5.0@hashable-1.2.5.0-F4MWeNuv2sjJRqBd2T5ul4
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      network-2.6.3.1@network-2.6.3.1-AwRxOQvT8JM9e8zDFK7aCI
                      network-simple-0.4.0.5@network-simple-0.4.0.5-lpFi9TIFmuDEctWkWAYkx
                      old-locale-1.0.0.7@old-locale-1.0.0.7-KGBP1BSKxH5GCm0LnZP04j
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      scientific-0.3.4.10@scientific-0.3.4.10-HRQd1hS6vMV6hvjSlMi8B0
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      transformers-0.5.2.0@transformers-0.5.2.0
                      unordered-containers-0.2.7.2@unordered-containers-0.2.7.2-8AmrySQXjRGF6VciYs51fM
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HCAgpBrKCLJ5li8FbfXxE1:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-HCAgpBrKCLJ5li8FbfXxE1:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-FKnZBeovJMk4M89wQxDhjl:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l:Data.Default.Instances.OldLocale
         hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt.Connection.Instances
         hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt.Value.Instances
         hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt.Value.Structure
         hashable-1.2.5.0@hashable-1.2.5.0-F4MWeNuv2sjJRqBd2T5ul4:Data.Hashable.Generic
         network-2.6.3.1@network-2.6.3.1-AwRxOQvT8JM9e8zDFK7aCI:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HCAgpBrKCLJ5li8FbfXxE1:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD:Data.DList
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.7.2@unordered-containers-0.2.7.2-8AmrySQXjRGF6VciYs51fM:Data.HashMap.Base
                         unordered-containers-0.2.7.2@unordered-containers-0.2.7.2-8AmrySQXjRGF6VciYs51fM:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-9NPC6B17ifJ9yEOgZnhnOr:Data.Aeson 6cfe60f124a4417e608c67dfe15be1cc
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-9NPC6B17ifJ9yEOgZnhnOr:Data.Aeson.Types.FromJSON 1316ab9121f85e92aaf36eaf294367ed
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-9NPC6B17ifJ9yEOgZnhnOr:Data.Aeson.Types.ToJSON c2651bbed32207695f964a66171d86f4
import  -/  base-4.9.1.0:Data.String 8a39929a33cd7a89c372ce2fbb5db4b0
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Generics 87e8d511f978e043d53db008cc403901
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  base-4.9.1.0:System.IO 5daf3f384209c11d9566e3409af8ec5d
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 6c2364c30285a1caa610caab304974c4
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base dfcca0a6b3fe956067f7db6df4d400c2
import  -/  data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD:Data.Default.Class eb34a89c3c97cabf779918371724abfb
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt bcfb1f0ed6fc3ef8a9ea59bd14776df9
import  -/  hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt.Connection 167a8d898814db0ab338a35b0f05a7cc
import  -/  hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt.Connection.Pipe 87ccd74918e3a2bfd23e1b268910563e
import  -/  hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt.Connection.Type 562780a0f7f22e89d08fbfb4c254af5b
import  -/  hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt.Value.Type f2442e5ddf918d8851cddfb21c1496cb
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text 35f976519564888082d42815342d42ed
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Internal 43a9166170aaf8c9b180c2d3ce2cfa3c
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show 638a81be9b7b5c261b714430eaada4e0
73bc766fd35c6d80660e0117d28d079c
  $fEqLinkDB :: GHC.Classes.Eq DBHelper.LinkDB
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.LinkDB
                  DBHelper.$fEqLinkDB_$c==
                  DBHelper.$fEqLinkDB_$c/= -}
73bc766fd35c6d80660e0117d28d079c
  $fEqLinkDB_$c/= ::
    DBHelper.LinkDB -> DBHelper.LinkDB -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LL),1*U(1*U(U),1*U,1*U)><S(S(S)LL),1*U(1*U(U),1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: DBHelper.LinkDB) (b :: DBHelper.LinkDB) ->
                 case DBHelper.$fEqLinkDB_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
73bc766fd35c6d80660e0117d28d079c
  $fEqLinkDB_$c== ::
    DBHelper.LinkDB -> DBHelper.LinkDB -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)LL),1*U(1*U(U),1*U,1*U)><S(S(S)LL),1*U(1*U(U),1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: DBHelper.LinkDB) (w1 :: DBHelper.LinkDB) ->
                 case w of ww { DBHelper.LinkDB ww1 ww2 ww3 ->
                 case ww1 of ww4 { GHC.Types.I# ww5 ->
                 case w1 of ww6 { DBHelper.LinkDB ww7 ww8 ww9 ->
                 case ww7 of ww10 { GHC.Types.I# ww11 ->
                 DBHelper.$w$c== ww5 ww2 ww3 ww11 ww8 ww9 } } } }) -}
903ed4c06ad24414748dabd9522f1dc3
  $fEqRepoDB :: GHC.Classes.Eq DBHelper.RepoDB
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.RepoDB
                  DBHelper.$fEqRepoDB_$c==
                  DBHelper.$fEqRepoDB_$c/= -}
903ed4c06ad24414748dabd9522f1dc3
  $fEqRepoDB_$c/= ::
    DBHelper.RepoDB -> DBHelper.RepoDB -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: DBHelper.RepoDB) (w1 :: DBHelper.RepoDB) ->
                 case w of ww { DBHelper.RepoDB ww1 ww2 ->
                 case w1 of ww3 { DBHelper.RepoDB ww4 ww5 ->
                 DBHelper.$w$c/= ww1 ww2 ww4 ww5 } }) -}
903ed4c06ad24414748dabd9522f1dc3
  $fEqRepoDB_$c== ::
    DBHelper.RepoDB -> DBHelper.RepoDB -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: DBHelper.RepoDB) (w1 :: DBHelper.RepoDB) ->
                 case w of ww { DBHelper.RepoDB ww1 ww2 ->
                 case w1 of ww3 { DBHelper.RepoDB ww4 ww5 ->
                 DBHelper.$w$c==1 ww1 ww2 ww4 ww5 } }) -}
98b59f650ded8f031be00d95c8f3d2f8
  $fEqUserDB :: GHC.Classes.Eq DBHelper.UserDB
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.UserDB
                  DBHelper.$fEqUserDB_$c==
                  DBHelper.$fEqUserDB_$c/= -}
98b59f650ded8f031be00d95c8f3d2f8
  $fEqUserDB_$c/= ::
    DBHelper.UserDB -> DBHelper.UserDB -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U)><S(S(S)L),1*U(1*U(U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: DBHelper.UserDB) (w1 :: DBHelper.UserDB) ->
                 case w of ww { DBHelper.UserDB ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case w1 of ww5 { DBHelper.UserDB ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 DBHelper.$w$c/=1 ww4 ww2 ww9 ww7 } } } }) -}
98b59f650ded8f031be00d95c8f3d2f8
  $fEqUserDB_$c== ::
    DBHelper.UserDB -> DBHelper.UserDB -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U)><S(S(S)L),1*U(1*U(U),1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: DBHelper.UserDB) (w1 :: DBHelper.UserDB) ->
                 case w of ww { DBHelper.UserDB ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case w1 of ww5 { DBHelper.UserDB ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 DBHelper.$w$c==2 ww4 ww2 ww9 ww7 } } } }) -}
73bc766fd35c6d80660e0117d28d079c
  $fFromJSONLinkDB ::
    Data.Aeson.Types.FromJSON.FromJSON DBHelper.LinkDB
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.LinkDB
                  DBHelper.$fFromJSONLinkDB_$cparseJSON
                  DBHelper.$fFromJSONLinkDB_$cparseJSONList -}
73bc766fd35c6d80660e0117d28d079c
  $fFromJSONLinkDB1 ::
    [Data.Aeson.Types.Internal.Parser DBHelper.LinkDB]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [DBHelper.LinkDB] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
52f17bc81035f42a1972cec22adb5b95
  $fFromJSONLinkDB10 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "source")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "source")
                   @ "source"
                   @~ <'GHC.Base.Just "source">_N
                   DBHelper.$fFromJSONLinkDB11
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"source">_N)) -}
968c0ff2f2a414dfae1f2381713237d7
  $fFromJSONLinkDB11 :: GHC.Generics.R:SingSymbols "source"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "source"
                   DBHelper.$fFromJSONLinkDB12
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"source">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"source">_N))) -}
2c3e35e987c30a021140db514f6bab9f
  $fFromJSONLinkDB12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "source"#) -}
45fd40cf6ed4c616e3a6efacfa0aeb76
  $fFromJSONLinkDB13 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ GHC.Types.Int
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   Data.Aeson.Types.FromJSON.$fFromJSONInt
                   @ a1
                   w3) -}
5c75c5ce9b9132f2cc914f9880597ec5
  $fFromJSONLinkDB14 ::
    GHC.Generics.SingI ('GHC.Base.Just "linkType")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONLinkDB15
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "linkType">_N) -}
7c835d97f30e113220b3176f6df8f410
  $fFromJSONLinkDB15 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "linkType")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "linkType")
                   @ "linkType"
                   @~ <'GHC.Base.Just "linkType">_N
                   DBHelper.$fFromJSONLinkDB16
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"linkType">_N)) -}
bdc81267b450f5755980568762d73b17
  $fFromJSONLinkDB16 :: GHC.Generics.R:SingSymbols "linkType"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "linkType"
                   DBHelper.$fFromJSONLinkDB17
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"linkType">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"linkType">_N))) -}
a105471ecd392f4a8a97595f06197d9c
  $fFromJSONLinkDB17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "linkType"#) -}
1f25c67b21ab4f30d64bb335a4606a0e
  $fFromJSONLinkDB2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "[a]"#) -}
0c774474a4277f27a58faafac5646194
  $fFromJSONLinkDB3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "LinkDB"
               "DBHelper"
               "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
               'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "linkType")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Types.Int)
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "source")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "destination")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String))))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "linkType")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "source")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "destination")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String))
                             a1)
                   = case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                     case ds6 of wild1 { DEFAULT ->
                     case x of wild2 {
                       DEFAULT
                       -> Data.Aeson.Types.FromJSON.typeMismatch
                            @ ((GHC.Generics.:*:)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "linkType")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int))
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "source")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "destination")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String))
                                 a1)
                            Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                            wild2
                       Data.Aeson.Types.Internal.Object obj
                       -> let {
                            m1 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "linkType")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Types.Int)
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "linkType")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel2
                                DBHelper.$fFromJSONLinkDB13
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            m2 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "source")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String)
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "source")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel1
                                DBHelper.$fFromJSONLinkDB8
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            e :: Data.Aeson.Types.Internal.Parser
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "destination")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                      a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "destination")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel
                                DBHelper.$fFromJSONLinkDB8
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          (\ @ (f :: * -> *)
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f r)
                             (ks :: Data.Aeson.Types.Internal.Success
                                      ((GHC.Generics.:*:)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "linkType")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Types.Int))
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "source")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "destination")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0 GHC.Base.String))
                                         a1)
                                      f
                                      r) ->
                           m1
                             `cast`
                           (Data.Aeson.Types.Internal.N:Parser[0]
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "linkType")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                   a1>_R)
                             @ f
                             @ r
                             path
                             kf
                             (\ (a2 :: GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "linkType")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Types.Int)
                                         a1) ->
                              m2
                                `cast`
                              (Data.Aeson.Types.Internal.N:Parser[0]
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "source")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                      a1>_R)
                                @ f
                                @ r
                                path
                                kf
                                (\ (a4 :: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "source")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                            a1) ->
                                 e `cast`
                                 (Data.Aeson.Types.Internal.N:Parser[0]
                                      <GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "destination")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String)
                                         a1>_R)
                                   @ f
                                   @ r
                                   path
                                   kf
                                   (\ (a3 :: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "destination")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.Rec0 GHC.Base.String)
                                               a1) ->
                                    ks
                                      (GHC.Generics.:*:
                                         @ (GHC.Generics.M1
                                              GHC.Generics.S
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "linkType")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Types.Int))
                                         @ (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "source")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String)
                                            GHC.Generics.:*: GHC.Generics.S1
                                                               ('GHC.Generics.MetaSel
                                                                  ('GHC.Base.Just "destination")
                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                  'GHC.Generics.NoSourceStrictness
                                                                  'GHC.Generics.DecidedLazy)
                                                               (GHC.Generics.Rec0 GHC.Base.String))
                                         @ a1
                                         a2
                                         (GHC.Generics.:*:
                                            @ (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "source")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String))
                                            @ (GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "destination")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String))
                                            @ a1
                                            a4
                                            a3))))))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <(GHC.Generics.:*:)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "linkType")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Types.Int))
                                       (GHC.Generics.S1
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "source")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Base.String)
                                        GHC.Generics.:*: GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "destination")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 GHC.Base.String))
                                       a1>_R)) } } }
                 } in
                 (\ @ (f6 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f6 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "LinkDB"
                                   "DBHelper"
                                   "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                   'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "linkType")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                    GHC.Generics.:*: (GHC.Generics.S1
                                                        ('GHC.Generics.MetaSel
                                                           ('GHC.Base.Just "source")
                                                           'GHC.Generics.NoSourceUnpackedness
                                                           'GHC.Generics.NoSourceStrictness
                                                           'GHC.Generics.DecidedLazy)
                                                        (GHC.Generics.Rec0 GHC.Base.String)
                                                      GHC.Generics.:*: GHC.Generics.S1
                                                                         ('GHC.Generics.MetaSel
                                                                            ('GHC.Base.Just
                                                                               "destination")
                                                                            'GHC.Generics.NoSourceUnpackedness
                                                                            'GHC.Generics.NoSourceStrictness
                                                                            'GHC.Generics.DecidedLazy)
                                                                         (GHC.Generics.Rec0
                                                                            GHC.Base.String))))
                                a1)
                             f6
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "linkType")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Int))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "source")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String)
                           GHC.Generics.:*: GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "destination")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String))
                          a1>_R)
                    @ f6
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "linkType")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "source")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "destination")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String))
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.C>_P
                                      <'GHC.Generics.MetaCons
                                         "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                      <GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "linkType")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Types.Int)
                                       GHC.Generics.:*: (GHC.Generics.S1
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "source")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.Rec0 GHC.Base.String)
                                                         GHC.Generics.:*: GHC.Generics.S1
                                                                            ('GHC.Generics.MetaSel
                                                                               ('GHC.Base.Just
                                                                                  "destination")
                                                                               'GHC.Generics.NoSourceUnpackedness
                                                                               'GHC.Generics.NoSourceStrictness
                                                                               'GHC.Generics.DecidedLazy)
                                                                            (GHC.Generics.Rec0
                                                                               GHC.Base.String))>_R))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "LinkDB"
                                         "DBHelper"
                                         "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "linkType")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Types.Int)
                                          GHC.Generics.:*: (GHC.Generics.S1
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "source")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0 GHC.Base.String)
                                                            GHC.Generics.:*: GHC.Generics.S1
                                                                               ('GHC.Generics.MetaSel
                                                                                  ('GHC.Base.Just
                                                                                     "destination")
                                                                                  'GHC.Generics.NoSourceUnpackedness
                                                                                  'GHC.Generics.NoSourceStrictness
                                                                                  'GHC.Generics.DecidedLazy)
                                                                               (GHC.Generics.Rec0
                                                                                  GHC.Base.String)))>_R)) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "LinkDB"
                                 "DBHelper"
                                 "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "linkType")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                  GHC.Generics.:*: (GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "source")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Base.String)
                                                    GHC.Generics.:*: GHC.Generics.S1
                                                                       ('GHC.Generics.MetaSel
                                                                          ('GHC.Base.Just
                                                                             "destination")
                                                                          'GHC.Generics.NoSourceUnpackedness
                                                                          'GHC.Generics.NoSourceStrictness
                                                                          'GHC.Generics.DecidedLazy)
                                                                       (GHC.Generics.Rec0
                                                                          GHC.Base.String))))
                              a1>_R))) -}
7ab12648053f6f938a677a953dcb2f99
  $fFromJSONLinkDB4 ::
    GHC.Generics.SingI ('GHC.Base.Just "destination")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONLinkDB5
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "destination">_N) -}
8b1c38cbc3f638d87871366a3cf7caf3
  $fFromJSONLinkDB5 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "destination")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "destination")
                   @ "destination"
                   @~ <'GHC.Base.Just "destination">_N
                   DBHelper.$fFromJSONLinkDB6
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"destination">_N)) -}
e92c4d89e29baa33eef9d6684b1e179c
  $fFromJSONLinkDB6 :: GHC.Generics.R:SingSymbols "destination"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "destination"
                   DBHelper.$fFromJSONLinkDB7
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"destination">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"destination">_N))) -}
423410f92de29e7090bb413e27dd7f9a
  $fFromJSONLinkDB7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "destination"#) -}
4637320a46d55e34a6290aa3d9da2fef
  $fFromJSONLinkDB8 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w1 :: Data.Aeson.Types.Internal.Options)
                   (w2 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Data.Aeson.Types.FromJSON.$w$cgParseJSON2
                   @ [GHC.Types.Char]
                   @ Data.Aeson.Types.Generic.Zero
                   @ GHC.Generics.R
                   DBHelper.$fFromJSONLinkDB_$s$fFromJSON[]
                   @ a1
                   w3) -}
53dbd3d122b7a2786724543fedb028c7
  $fFromJSONLinkDB9 :: GHC.Generics.SingI ('GHC.Base.Just "source")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONLinkDB10
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "source">_N) -}
73bc766fd35c6d80660e0117d28d079c
  $fFromJSONLinkDB_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser DBHelper.LinkDB
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "LinkDB"
                                "DBHelper"
                                "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "linkType")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                 GHC.Generics.:*: (GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "source")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String)
                                                   GHC.Generics.:*: GHC.Generics.S1
                                                                      ('GHC.Generics.MetaSel
                                                                         ('GHC.Base.Just
                                                                            "destination")
                                                                         'GHC.Generics.NoSourceUnpackedness
                                                                         'GHC.Generics.NoSourceStrictness
                                                                         'GHC.Generics.DecidedLazy)
                                                                      (GHC.Generics.Rec0
                                                                         GHC.Base.String))))
                             GHC.Prim.Any)
                   = DBHelper.$fFromJSONLinkDB3
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f6 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f6 r)
                    (ks :: Data.Aeson.Types.Internal.Success DBHelper.LinkDB f6 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (DBHelper.Rep_LinkDB[0])) <GHC.Prim.Any>_N))
                    @ f6
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep DBHelper.LinkDB GHC.Prim.Any) ->
                     ks (DBHelper.$fFromJSONLinkDB_$cto @ GHC.Prim.Any a1)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <DBHelper.LinkDB>_R))) -}
73bc766fd35c6d80660e0117d28d079c
  $fFromJSONLinkDB_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [DBHelper.LinkDB]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [DBHelper.LinkDB]
                        DBHelper.$fFromJSONLinkDB2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (DBHelper.$fFromJSONLinkDB1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          DBHelper.$fFromJSONLinkDB_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[DBHelper.LinkDB]>_R)) } }) -}
73bc766fd35c6d80660e0117d28d079c
  $fFromJSONLinkDB_$cto ::
    GHC.Generics.Rep DBHelper.LinkDB x -> DBHelper.LinkDB
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep DBHelper.LinkDB x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (DBHelper.Rep_LinkDB[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "LinkDB"
                                        "DBHelper"
                                        "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "linkType")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "source")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Base.String)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              ('GHC.Generics.MetaSel
                                                                                 ('GHC.Base.Just
                                                                                    "destination")
                                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                                 'GHC.Generics.NoSourceStrictness
                                                                                 'GHC.Generics.DecidedLazy)
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Base.String)))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "linkType")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "source")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R GHC.Base.String)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           ('GHC.Generics.MetaSel
                                                                              ('GHC.Base.Just
                                                                                 "destination")
                                                                              'GHC.Generics.NoSourceUnpackedness
                                                                              'GHC.Generics.NoSourceStrictness
                                                                              'GHC.Generics.DecidedLazy)
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              GHC.Base.String))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds2 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 DBHelper.LinkDB
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "linkType")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                   ds3
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "source")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds4
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "destination")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P)) } }) -}
5be9480217c9580fbe5de6cc36cebbfd
  $fFromJSONLinkDB_$s$fFromJSON[] ::
    Data.Aeson.Types.FromJSON.FromJSON [GHC.Types.Char]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Char]
                  (Data.Aeson.Types.FromJSON.$dmfromJSONKeyList_$cparseJSON
                     @ GHC.Types.Char
                     Data.Aeson.Types.FromJSON.$fFromJSONChar)
                  (Data.Aeson.Types.FromJSON.$fFromJSONKey[]_$cparseJSONList
                     @ GHC.Types.Char
                     Data.Aeson.Types.FromJSON.$fFromJSONChar) -}
f5fd2371b626acd80f0d960beabd211a
  $fFromJSONLinkDB_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "destination")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "destination")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "destination")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "destination")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "destination")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB4
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
f50c71c3a864d45e68477ccc32cdf33a
  $fFromJSONLinkDB_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "source")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "source")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "source")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "source")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "source")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB9
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
2a9f9ec88fdee43d0acb3a00863b8d5d
  $fFromJSONLinkDB_$s$fSelectorMetaMetaSel2 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "linkType")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "linkType")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName2
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "linkType")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB14
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "linkType")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB14
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "linkType")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONLinkDB14
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
777276df0c7e0a0769406e8d1ae335ce
  $fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "destination")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "destination")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONLinkDB7) -}
bd4b74bd21cff356411188140e67b536
  $fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "source")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "source")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONLinkDB12) -}
81241a5b80b8dfcb2ad60176fbe241a2
  $fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName2 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "linkType")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "linkType")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONLinkDB17) -}
73bc766fd35c6d80660e0117d28d079c
  $fFromJSONLinkDB_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser DBHelper.LinkDB]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
903ed4c06ad24414748dabd9522f1dc3
  $fFromJSONRepoDB ::
    Data.Aeson.Types.FromJSON.FromJSON DBHelper.RepoDB
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.RepoDB
                  DBHelper.$fFromJSONRepoDB_$cparseJSON
                  DBHelper.$fFromJSONRepoDB_$cparseJSONList -}
903ed4c06ad24414748dabd9522f1dc3
  $fFromJSONRepoDB1 ::
    [Data.Aeson.Types.Internal.Parser DBHelper.RepoDB]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [DBHelper.RepoDB] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
7e234967fce2044a185c4bfc2ed8dc97
  $fFromJSONRepoDB10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "repoId"#) -}
f488b74533e823a3ed6944262ca0dba8
  $fFromJSONRepoDB2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "RepoDB"
               "DBHelper"
               "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
               'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "repoId")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "repolabel")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "repoId")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "repolabel")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             a1)
                   = case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                     case ds6 of wild1 { DEFAULT ->
                     case x of wild2 {
                       DEFAULT
                       -> Data.Aeson.Types.FromJSON.typeMismatch
                            @ ((GHC.Generics.:*:)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "repoId")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String))
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "repolabel")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String))
                                 a1)
                            Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                            wild2
                       Data.Aeson.Types.Internal.Object obj
                       -> let {
                            m1 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "repoId")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String)
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "repoId")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                DBHelper.$fFromJSONRepoDB_$s$fSelectorMetaMetaSel1
                                DBHelper.$fFromJSONLinkDB8
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            e :: Data.Aeson.Types.Internal.Parser
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "repolabel")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                      a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "repolabel")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                DBHelper.$fFromJSONRepoDB_$s$fSelectorMetaMetaSel
                                DBHelper.$fFromJSONLinkDB8
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          (\ @ (f :: * -> *)
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f r)
                             (ks :: Data.Aeson.Types.Internal.Success
                                      ((GHC.Generics.:*:)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "repoId")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String))
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "repolabel")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String))
                                         a1)
                                      f
                                      r) ->
                           m1
                             `cast`
                           (Data.Aeson.Types.Internal.N:Parser[0]
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "repoId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                   a1>_R)
                             @ f
                             @ r
                             path
                             kf
                             (\ (a2 :: GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "repoId")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String)
                                         a1) ->
                              e `cast`
                              (Data.Aeson.Types.Internal.N:Parser[0]
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "repolabel")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                      a1>_R)
                                @ f
                                @ r
                                path
                                kf
                                (\ (a3 :: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "repolabel")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                            a1) ->
                                 ks
                                   (GHC.Generics.:*:
                                      @ (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "repoId")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Base.String))
                                      @ (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "repolabel")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Base.String))
                                      @ a1
                                      a2
                                      a3))))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <(GHC.Generics.:*:)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "repoId")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Base.String))
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "repolabel")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Base.String))
                                       a1>_R)) } } }
                 } in
                 (\ @ (f6 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f6 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "RepoDB"
                                   "DBHelper"
                                   "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                   'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "repoId")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                    GHC.Generics.:*: GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "repolabel")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 GHC.Base.String)))
                                a1)
                             f6
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "repoId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "repolabel")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String))
                          a1>_R)
                    @ f6
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "repoId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "repolabel")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.C>_P
                                      <'GHC.Generics.MetaCons
                                         "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                      <GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "repoId")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String)
                                       GHC.Generics.:*: GHC.Generics.S1
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "repolabel")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.Rec0 GHC.Base.String)>_R))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "RepoDB"
                                         "DBHelper"
                                         "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "repoId")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "repolabel")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0
                                                                GHC.Base.String))>_R)) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "RepoDB"
                                 "DBHelper"
                                 "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "repoId")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "repolabel")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String)))
                              a1>_R))) -}
92bfe76cadc431ca3d839832237ba05a
  $fFromJSONRepoDB3 ::
    GHC.Generics.SingI ('GHC.Base.Just "repolabel")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONRepoDB4
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "repolabel">_N) -}
22db1561062d547ff96b1ed6eaddab29
  $fFromJSONRepoDB4 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "repolabel")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "repolabel")
                   @ "repolabel"
                   @~ <'GHC.Base.Just "repolabel">_N
                   DBHelper.$fFromJSONRepoDB5
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"repolabel">_N)) -}
2aa65fcba6077bc7192e52faea34b5d7
  $fFromJSONRepoDB5 :: GHC.Generics.R:SingSymbols "repolabel"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "repolabel"
                   DBHelper.$fFromJSONRepoDB6
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"repolabel">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"repolabel">_N))) -}
28c05c1d1c0aa40ae95ebabb74d53c54
  $fFromJSONRepoDB6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "repolabel"#) -}
1fdf5e372d1034f06dddcb0a1e4196f3
  $fFromJSONRepoDB7 :: GHC.Generics.SingI ('GHC.Base.Just "repoId")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONRepoDB8
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "repoId">_N) -}
8f8014bdbe1fbc51bf4399ad8ce7e90f
  $fFromJSONRepoDB8 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "repoId")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "repoId")
                   @ "repoId"
                   @~ <'GHC.Base.Just "repoId">_N
                   DBHelper.$fFromJSONRepoDB9
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"repoId">_N)) -}
0433b3ef96e8a0faf6fc7d741e174f90
  $fFromJSONRepoDB9 :: GHC.Generics.R:SingSymbols "repoId"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "repoId"
                   DBHelper.$fFromJSONRepoDB10
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"repoId">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"repoId">_N))) -}
903ed4c06ad24414748dabd9522f1dc3
  $fFromJSONRepoDB_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser DBHelper.RepoDB
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "RepoDB"
                                "DBHelper"
                                "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "repoId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "repolabel")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String)))
                             GHC.Prim.Any)
                   = DBHelper.$fFromJSONRepoDB2
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f6 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f6 r)
                    (ks :: Data.Aeson.Types.Internal.Success DBHelper.RepoDB f6 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (DBHelper.Rep_RepoDB[0])) <GHC.Prim.Any>_N))
                    @ f6
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep DBHelper.RepoDB GHC.Prim.Any) ->
                     ks
                       (case a1
                               `cast`
                             (Trans
                                  (Sub (DBHelper.Rep_RepoDB[0]))
                                  (Trans
                                       (GHC.Generics.N:M1[0]
                                            <GHC.Generics.D>_P
                                            <'GHC.Generics.MetaData
                                               "RepoDB"
                                               "DBHelper"
                                               "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                               'GHC.Types.False>_P
                                            <GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "repoId")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "repolabel")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Base.String))>_R)
                                       (GHC.Generics.N:M1[0]
                                            <GHC.Generics.C>_P
                                            <'GHC.Generics.MetaCons
                                               "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                            <GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "repoId")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "repolabel")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Base.String)>_R)) <GHC.Prim.Any>_N) of wild { GHC.Generics.:*: ds ds1 ->
                        DBHelper.RepoDB
                          ds
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "repoId")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                          ds1
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "repolabel")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P)) })))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <DBHelper.RepoDB>_R))) -}
903ed4c06ad24414748dabd9522f1dc3
  $fFromJSONRepoDB_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [DBHelper.RepoDB]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [DBHelper.RepoDB]
                        DBHelper.$fFromJSONLinkDB2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (DBHelper.$fFromJSONRepoDB1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          DBHelper.$fFromJSONRepoDB_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[DBHelper.RepoDB]>_R)) } }) -}
0d4bbd0cf5b1ede4096178aa2011b942
  $fFromJSONRepoDB_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "repolabel")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "repolabel")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONRepoDB_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "repolabel")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONRepoDB3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "repolabel")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONRepoDB3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "repolabel")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONRepoDB3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
00b1b572f71127a876b9eace49093064
  $fFromJSONRepoDB_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "repoId")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "repoId")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONRepoDB_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "repoId")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONRepoDB7
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "repoId")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONRepoDB7
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "repoId")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONRepoDB7
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
6f154b362e46d279e54fd8e661cc1c38
  $fFromJSONRepoDB_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "repolabel")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "repolabel")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONRepoDB6) -}
9c053006195c4481463a59f9d3700767
  $fFromJSONRepoDB_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "repoId")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "repoId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONRepoDB10) -}
903ed4c06ad24414748dabd9522f1dc3
  $fFromJSONRepoDB_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser DBHelper.RepoDB]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
98b59f650ded8f031be00d95c8f3d2f8
  $fFromJSONUserDB ::
    Data.Aeson.Types.FromJSON.FromJSON DBHelper.UserDB
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.UserDB
                  DBHelper.$fFromJSONUserDB_$cparseJSON
                  DBHelper.$fFromJSONUserDB_$cparseJSONList -}
98b59f650ded8f031be00d95c8f3d2f8
  $fFromJSONUserDB1 ::
    [Data.Aeson.Types.Internal.Parser DBHelper.UserDB]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [DBHelper.UserDB] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
c25b2496685d7de3776b7bbb588f0c72
  $fFromJSONUserDB10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "hops"#) -}
02c5d96b4c44746c509e4ef7a9612e68
  $fFromJSONUserDB2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            ('GHC.Generics.MetaData
               "UserDB"
               "DBHelper"
               "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
               'GHC.Types.False)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "hops")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Types.Int)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "userId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)))
            a1)
  {- Arity: 3, Strictness: <L,1*U(U,U,U,U,U,U)><L,U><L,1*U>,
     Unfolding: (\ @ a1
                   (opts :: Data.Aeson.Types.Internal.Options)
                   (fargs :: Data.Aeson.Types.FromJSON.FromArgs
                               Data.Aeson.Types.Generic.Zero a1)
                   (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "hops")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Int))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "userId")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             a1)
                   = case opts of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ds6 ->
                     case ds6 of wild1 { DEFAULT ->
                     case x of wild2 {
                       DEFAULT
                       -> Data.Aeson.Types.FromJSON.typeMismatch
                            @ ((GHC.Generics.:*:)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "hops")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int))
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "userId")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String))
                                 a1)
                            Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                            wild2
                       Data.Aeson.Types.Internal.Object obj
                       -> let {
                            m1 :: Data.Aeson.Types.Internal.Parser
                                    (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "hops")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Types.Int)
                                       a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "hops")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                DBHelper.$fFromJSONUserDB_$s$fSelectorMetaMetaSel1
                                DBHelper.$fFromJSONLinkDB13
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          let {
                            e :: Data.Aeson.Types.Internal.Parser
                                   (GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "userId")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                      a1)
                            = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                                @ ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "userId")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                @ Data.Aeson.Types.Generic.Zero
                                @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                DBHelper.$fFromJSONUserDB_$s$fSelectorMetaMetaSel
                                DBHelper.$fFromJSONLinkDB8
                                  `cast`
                                (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                          <Data.Aeson.Types.Generic.Zero>_N
                                          <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                @ a1
                                wild
                                fargs
                                (GHC.Base.Nothing @ Data.Text.Internal.Text)
                                obj
                          } in
                          (\ @ (f :: * -> *)
                             @ r
                             (path :: Data.Aeson.Types.Internal.JSONPath)
                             (kf :: Data.Aeson.Types.Internal.Failure f r)
                             (ks :: Data.Aeson.Types.Internal.Success
                                      ((GHC.Generics.:*:)
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "hops")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Types.Int))
                                         (GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "userId")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String))
                                         a1)
                                      f
                                      r) ->
                           m1
                             `cast`
                           (Data.Aeson.Types.Internal.N:Parser[0]
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "hops")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                   a1>_R)
                             @ f
                             @ r
                             path
                             kf
                             (\ (a2 :: GHC.Generics.M1
                                         GHC.Generics.S
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "hops")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Types.Int)
                                         a1) ->
                              e `cast`
                              (Data.Aeson.Types.Internal.N:Parser[0]
                                   <GHC.Generics.M1
                                      GHC.Generics.S
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "userId")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Base.String)
                                      a1>_R)
                                @ f
                                @ r
                                path
                                kf
                                (\ (a3 :: GHC.Generics.M1
                                            GHC.Generics.S
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "userId")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Base.String)
                                            a1) ->
                                 ks
                                   (GHC.Generics.:*:
                                      @ (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "hops")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Types.Int))
                                      @ (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "userId")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Base.String))
                                      @ a1
                                      a2
                                      a3))))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <(GHC.Generics.:*:)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "hops")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Types.Int))
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "userId")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.Rec0 GHC.Base.String))
                                       a1>_R)) } } }
                 } in
                 (\ @ (f6 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f6 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.M1
                                GHC.Generics.D
                                ('GHC.Generics.MetaData
                                   "UserDB"
                                   "DBHelper"
                                   "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                   'GHC.Types.False)
                                (GHC.Generics.M1
                                   GHC.Generics.C
                                   ('GHC.Generics.MetaCons
                                      "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                   (GHC.Generics.S1
                                      ('GHC.Generics.MetaSel
                                         ('GHC.Base.Just "hops")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy)
                                      (GHC.Generics.Rec0 GHC.Types.Int)
                                    GHC.Generics.:*: GHC.Generics.S1
                                                       ('GHC.Generics.MetaSel
                                                          ('GHC.Base.Just "userId")
                                                          'GHC.Generics.NoSourceUnpackedness
                                                          'GHC.Generics.NoSourceStrictness
                                                          'GHC.Generics.DecidedLazy)
                                                       (GHC.Generics.Rec0 GHC.Base.String)))
                                a1)
                             f6
                             r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "hops")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Int))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "userId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String))
                          a1>_R)
                    @ f6
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "hops")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "userId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                a1) ->
                     ks
                       a2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.C>_P
                                      <'GHC.Generics.MetaCons
                                         "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                      <GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "hops")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Types.Int)
                                       GHC.Generics.:*: GHC.Generics.S1
                                                          ('GHC.Generics.MetaSel
                                                             ('GHC.Base.Just "userId")
                                                             'GHC.Generics.NoSourceUnpackedness
                                                             'GHC.Generics.NoSourceStrictness
                                                             'GHC.Generics.DecidedLazy)
                                                          (GHC.Generics.Rec0 GHC.Base.String)>_R))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.D>_P
                                      <'GHC.Generics.MetaData
                                         "UserDB"
                                         "DBHelper"
                                         "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                         'GHC.Types.False>_P
                                      <GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                         (GHC.Generics.S1
                                            ('GHC.Generics.MetaSel
                                               ('GHC.Base.Just "hops")
                                               'GHC.Generics.NoSourceUnpackedness
                                               'GHC.Generics.NoSourceStrictness
                                               'GHC.Generics.DecidedLazy)
                                            (GHC.Generics.Rec0 GHC.Types.Int)
                                          GHC.Generics.:*: GHC.Generics.S1
                                                             ('GHC.Generics.MetaSel
                                                                ('GHC.Base.Just "userId")
                                                                'GHC.Generics.NoSourceUnpackedness
                                                                'GHC.Generics.NoSourceStrictness
                                                                'GHC.Generics.DecidedLazy)
                                                             (GHC.Generics.Rec0
                                                                GHC.Base.String))>_R)) <a1>_N)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.M1
                              GHC.Generics.D
                              ('GHC.Generics.MetaData
                                 "UserDB"
                                 "DBHelper"
                                 "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                 'GHC.Types.False)
                              (GHC.Generics.M1
                                 GHC.Generics.C
                                 ('GHC.Generics.MetaCons
                                    "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                 (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "hops")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Types.Int)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "userId")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String)))
                              a1>_R))) -}
4b0e2a663bbf46a5efceda25b3fae773
  $fFromJSONUserDB3 :: GHC.Generics.SingI ('GHC.Base.Just "userId")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONUserDB4
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "userId">_N) -}
551f431fb3c2e5a933b303f9a71abb0d
  $fFromJSONUserDB4 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "userId")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "userId")
                   @ "userId"
                   @~ <'GHC.Base.Just "userId">_N
                   DBHelper.$fFromJSONUserDB5
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"userId">_N)) -}
e34c11f0ad9addcc708f5d50aadbd652
  $fFromJSONUserDB5 :: GHC.Generics.R:SingSymbols "userId"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "userId"
                   DBHelper.$fFromJSONUserDB6
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"userId">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"userId">_N))) -}
e37d731df26a4b56e138bc5c97e16843
  $fFromJSONUserDB6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "userId"#) -}
56f2c227e8cc2f79b9585284665500e8
  $fFromJSONUserDB7 :: GHC.Generics.SingI ('GHC.Base.Just "hops")
  {- Unfolding: InlineRule (0, True, True)
                DBHelper.$fFromJSONUserDB8
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "hops">_N) -}
197c3af407dfbd7148ffaac0ee2dc9d9
  $fFromJSONUserDB8 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "hops")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "hops")
                   @ "hops"
                   @~ <'GHC.Base.Just "hops">_N
                   DBHelper.$fFromJSONUserDB9
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"hops">_N)) -}
3816b2a3764c7acae93611d8df5535ef
  $fFromJSONUserDB9 :: GHC.Generics.R:SingSymbols "hops"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "hops"
                   DBHelper.$fFromJSONUserDB10
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"hops">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"hops">_N))) -}
98b59f650ded8f031be00d95c8f3d2f8
  $fFromJSONUserDB_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser DBHelper.UserDB
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          (GHC.Generics.M1
                             GHC.Generics.D
                             ('GHC.Generics.MetaData
                                "UserDB"
                                "DBHelper"
                                "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                'GHC.Types.False)
                             (GHC.Generics.M1
                                GHC.Generics.C
                                ('GHC.Generics.MetaCons
                                   "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "hops")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Int)
                                 GHC.Generics.:*: GHC.Generics.S1
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "userId")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.Rec0 GHC.Base.String)))
                             GHC.Prim.Any)
                   = DBHelper.$fFromJSONUserDB2
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f6 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f6 r)
                    (ks :: Data.Aeson.Types.Internal.Success DBHelper.UserDB f6 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       (Sub (Sym (DBHelper.Rep_UserDB[0])) <GHC.Prim.Any>_N))
                    @ f6
                    @ r
                    path
                    kf
                    (\ (a1 :: GHC.Generics.Rep DBHelper.UserDB GHC.Prim.Any) ->
                     ks
                       (case a1
                               `cast`
                             (Trans
                                  (Sub (DBHelper.Rep_UserDB[0]))
                                  (Trans
                                       (GHC.Generics.N:M1[0]
                                            <GHC.Generics.D>_P
                                            <'GHC.Generics.MetaData
                                               "UserDB"
                                               "DBHelper"
                                               "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                               'GHC.Types.False>_P
                                            <GHC.Generics.M1
                                               GHC.Generics.C
                                               ('GHC.Generics.MetaCons
                                                  "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                               (GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "hops")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                                GHC.Generics.:*: GHC.Generics.M1
                                                                   GHC.Generics.S
                                                                   ('GHC.Generics.MetaSel
                                                                      ('GHC.Base.Just "userId")
                                                                      'GHC.Generics.NoSourceUnpackedness
                                                                      'GHC.Generics.NoSourceStrictness
                                                                      'GHC.Generics.DecidedLazy)
                                                                   (GHC.Generics.K1
                                                                      GHC.Generics.R
                                                                      GHC.Base.String))>_R)
                                       (GHC.Generics.N:M1[0]
                                            <GHC.Generics.C>_P
                                            <'GHC.Generics.MetaCons
                                               "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                            <GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "hops")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                             GHC.Generics.:*: GHC.Generics.M1
                                                                GHC.Generics.S
                                                                ('GHC.Generics.MetaSel
                                                                   ('GHC.Base.Just "userId")
                                                                   'GHC.Generics.NoSourceUnpackedness
                                                                   'GHC.Generics.NoSourceStrictness
                                                                   'GHC.Generics.DecidedLazy)
                                                                (GHC.Generics.K1
                                                                   GHC.Generics.R
                                                                   GHC.Base.String)>_R)) <GHC.Prim.Any>_N) of wild { GHC.Generics.:*: ds ds1 ->
                        DBHelper.UserDB
                          ds
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "hops")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.Types.Int>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.Types.Int>_R <GHC.Prim.Any>_P))
                          ds1
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "userId")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P)) })))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <DBHelper.UserDB>_R))) -}
98b59f650ded8f031be00d95c8f3d2f8
  $fFromJSONUserDB_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [DBHelper.UserDB]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [DBHelper.UserDB]
                        DBHelper.$fFromJSONLinkDB2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (DBHelper.$fFromJSONUserDB1
                         (letrec {
                            $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          DBHelper.$fFromJSONUserDB_go 0# ($wgo 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[DBHelper.UserDB]>_R)) } }) -}
d490537f1fc051cd1ea4e27a8346833f
  $fFromJSONUserDB_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "userId")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "userId")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONUserDB_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "userId")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONUserDB3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "userId")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONUserDB3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "userId")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONUserDB3
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
24739d80a829fe9b7932f1b003740bf3
  $fFromJSONUserDB_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "hops")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "hops")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  DBHelper.$fFromJSONUserDB_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "hops")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONUserDB7
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "hops")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONUserDB7
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "hops")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     DBHelper.$fFromJSONUserDB7
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
ff75366cf79f4737909b6700055b31bd
  $fFromJSONUserDB_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "userId")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "userId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONUserDB6) -}
9fd5a644c9e1e8262d84b5c97aab7378
  $fFromJSONUserDB_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "hops")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "hops")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 DBHelper.$fFromJSONUserDB10) -}
98b59f650ded8f031be00d95c8f3d2f8
  $fFromJSONUserDB_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser DBHelper.UserDB]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
73bc766fd35c6d80660e0117d28d079c
  $fGenericLinkDB :: GHC.Generics.Generic DBHelper.LinkDB
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.LinkDB
                  DBHelper.$fGenericLinkDB_$cfrom
                  DBHelper.$fFromJSONLinkDB_$cto -}
73bc766fd35c6d80660e0117d28d079c
  $fGenericLinkDB1 ::
    DBHelper.LinkDB
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "linkType")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
          GHC.Generics.:*: (GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "source")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "destination")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: DBHelper.LinkDB) ->
                 case x1 of wild { DBHelper.LinkDB g1 g2 g3 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "linkType")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "source")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "destination")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "linkType")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R) <x>_N))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "source")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "destination")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ x
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "source")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "destination")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "linkType")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                            GHC.Generics.:*: (GHC.Generics.M1
                                                GHC.Generics.S
                                                ('GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "source")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy)
                                                (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                              GHC.Generics.:*: GHC.Generics.M1
                                                                 GHC.Generics.S
                                                                 ('GHC.Generics.MetaSel
                                                                    ('GHC.Base.Just "destination")
                                                                    'GHC.Generics.NoSourceUnpackedness
                                                                    'GHC.Generics.NoSourceStrictness
                                                                    'GHC.Generics.DecidedLazy)
                                                                 (GHC.Generics.K1
                                                                    GHC.Generics.R
                                                                    GHC.Base.String))>_R) <x>_N) }) -}
73bc766fd35c6d80660e0117d28d079c
  $fGenericLinkDB_$cfrom ::
    DBHelper.LinkDB -> GHC.Generics.Rep DBHelper.LinkDB x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                DBHelper.$fGenericLinkDB1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <DBHelper.LinkDB>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "LinkDB"
                                       "DBHelper"
                                       "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "linkType")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                        GHC.Generics.:*: (GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "source")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String)
                                                          GHC.Generics.:*: GHC.Generics.M1
                                                                             GHC.Generics.S
                                                                             ('GHC.Generics.MetaSel
                                                                                ('GHC.Base.Just
                                                                                   "destination")
                                                                                'GHC.Generics.NoSourceUnpackedness
                                                                                'GHC.Generics.NoSourceStrictness
                                                                                'GHC.Generics.DecidedLazy)
                                                                             (GHC.Generics.K1
                                                                                GHC.Generics.R
                                                                                GHC.Base.String)))>_R))
                          (Sub (Sym (DBHelper.Rep_LinkDB[0]))) <x>_N) -}
903ed4c06ad24414748dabd9522f1dc3
  $fGenericRepoDB :: GHC.Generics.Generic DBHelper.RepoDB
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.RepoDB
                  DBHelper.$fGenericRepoDB_$cfrom
                  DBHelper.$fGenericRepoDB_$cto -}
903ed4c06ad24414748dabd9522f1dc3
  $fGenericRepoDB1 ::
    DBHelper.RepoDB
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "repoId")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "repolabel")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: DBHelper.RepoDB) ->
                 case x1 of wild { DBHelper.RepoDB g1 g2 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "repoId")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "repolabel")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "repoId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))
                    g2
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "repolabel")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N)))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "repoId")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "repolabel")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Base.String)>_R) <x>_N) }) -}
903ed4c06ad24414748dabd9522f1dc3
  $fGenericRepoDB_$cfrom ::
    DBHelper.RepoDB -> GHC.Generics.Rep DBHelper.RepoDB x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (0, True, True)
                DBHelper.$fGenericRepoDB1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <DBHelper.RepoDB>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "RepoDB"
                                       "DBHelper"
                                       "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "repoId")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                        GHC.Generics.:*: GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "repolabel")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R GHC.Base.String))>_R))
                          (Sub (Sym (DBHelper.Rep_RepoDB[0]))) <x>_N) -}
903ed4c06ad24414748dabd9522f1dc3
  $fGenericRepoDB_$cto ::
    GHC.Generics.Rep DBHelper.RepoDB x -> DBHelper.RepoDB
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep DBHelper.RepoDB x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (DBHelper.Rep_RepoDB[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "RepoDB"
                                        "DBHelper"
                                        "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "repoId")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "repolabel")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "repoId")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "repolabel")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Base.String)>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 DBHelper.RepoDB
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "repoId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds2
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "repolabel")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P)) }) -}
98b59f650ded8f031be00d95c8f3d2f8
  $fGenericUserDB :: GHC.Generics.Generic DBHelper.UserDB
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.UserDB
                  DBHelper.$fGenericUserDB_$cfrom
                  DBHelper.$fGenericUserDB_$cto -}
98b59f650ded8f031be00d95c8f3d2f8
  $fGenericUserDB1 ::
    DBHelper.UserDB
    -> GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "hops")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
          GHC.Generics.:*: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "userId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
         x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (x1 :: DBHelper.UserDB) ->
                 case x1 of wild { DBHelper.UserDB g1 g2 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "hops")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "userId")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "hops")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R) <x>_N))
                    g2
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "userId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N)))
                   `cast`
                 (Sym (GHC.Generics.N:M1[0]
                           <GHC.Generics.C>_P
                           <'GHC.Generics.MetaCons
                              "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                           <GHC.Generics.M1
                              GHC.Generics.S
                              ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "hops")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                              (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                            GHC.Generics.:*: GHC.Generics.M1
                                               GHC.Generics.S
                                               ('GHC.Generics.MetaSel
                                                  ('GHC.Base.Just "userId")
                                                  'GHC.Generics.NoSourceUnpackedness
                                                  'GHC.Generics.NoSourceStrictness
                                                  'GHC.Generics.DecidedLazy)
                                               (GHC.Generics.K1
                                                  GHC.Generics.R GHC.Base.String)>_R) <x>_N) }) -}
98b59f650ded8f031be00d95c8f3d2f8
  $fGenericUserDB_$cfrom ::
    DBHelper.UserDB -> GHC.Generics.Rep DBHelper.UserDB x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (0, True, True)
                DBHelper.$fGenericUserDB1
                  `cast`
                (forall (x :: <GHC.Types.*>_N).
                 <DBHelper.UserDB>_R
                 ->_R Trans
                          (Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "UserDB"
                                       "DBHelper"
                                       "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                       'GHC.Types.False>_P
                                    <GHC.Generics.M1
                                       GHC.Generics.C
                                       ('GHC.Generics.MetaCons
                                          "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                       (GHC.Generics.M1
                                          GHC.Generics.S
                                          ('GHC.Generics.MetaSel
                                             ('GHC.Base.Just "hops")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy)
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                        GHC.Generics.:*: GHC.Generics.M1
                                                           GHC.Generics.S
                                                           ('GHC.Generics.MetaSel
                                                              ('GHC.Base.Just "userId")
                                                              'GHC.Generics.NoSourceUnpackedness
                                                              'GHC.Generics.NoSourceStrictness
                                                              'GHC.Generics.DecidedLazy)
                                                           (GHC.Generics.K1
                                                              GHC.Generics.R GHC.Base.String))>_R))
                          (Sub (Sym (DBHelper.Rep_UserDB[0]))) <x>_N) -}
98b59f650ded8f031be00d95c8f3d2f8
  $fGenericUserDB_$cto ::
    GHC.Generics.Rep DBHelper.UserDB x -> DBHelper.UserDB
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep DBHelper.UserDB x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (DBHelper.Rep_UserDB[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "UserDB"
                                        "DBHelper"
                                        "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "hops")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "userId")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "hops")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "userId")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Base.String)>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 DBHelper.UserDB
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "hops")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R <x>_N)
                        (GHC.Generics.N:K1[0] <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                   ds2
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "userId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P)) }) -}
73bc766fd35c6d80660e0117d28d079c
  $fShowLinkDB :: GHC.Show.Show DBHelper.LinkDB
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.LinkDB
                  DBHelper.$fShowLinkDB_$cshowsPrec
                  DBHelper.$fShowLinkDB_$cshow
                  DBHelper.$fShowLinkDB_$cshowList -}
73bc766fd35c6d80660e0117d28d079c
  $fShowLinkDB1 :: DBHelper.LinkDB -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: DBHelper.LinkDB) (w1 :: GHC.Base.String) ->
                 case w of ww { DBHelper.LinkDB ww1 ww2 ww3 ->
                 DBHelper.$w$cshowsPrec 0# ww1 ww2 ww3 w1 }) -}
20b21fda655e23fa05143796d0d8eebb
  $fShowLinkDB2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LinkDB {"#) -}
e30306648d91c567ba29b73b466c8f14
  $fShowLinkDB3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
0594ef3e5fbf2d7c05054822eaeaa9e8
  $fShowLinkDB4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "destination = "#) -}
db45943a8a778d4484e544a2de3bc7cb
  $fShowLinkDB5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "source = "#) -}
eb4e08c8a033fdfd74c83d26e0086f7c
  $fShowLinkDB6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
4a99e8d1363a5e5d0e8039771eb9f885
  $fShowLinkDB7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "linkType = "#) -}
73bc766fd35c6d80660e0117d28d079c
  $fShowLinkDB_$cshow :: DBHelper.LinkDB -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: DBHelper.LinkDB) ->
                 DBHelper.$fShowLinkDB_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
73bc766fd35c6d80660e0117d28d079c
  $fShowLinkDB_$cshowList :: [DBHelper.LinkDB] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ DBHelper.LinkDB
                   DBHelper.$fShowLinkDB1) -}
73bc766fd35c6d80660e0117d28d079c
  $fShowLinkDB_$cshowsPrec ::
    GHC.Types.Int -> DBHelper.LinkDB -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: DBHelper.LinkDB)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { DBHelper.LinkDB ww3 ww4 ww5 ->
                 DBHelper.$w$cshowsPrec ww1 ww3 ww4 ww5 w2 } }) -}
903ed4c06ad24414748dabd9522f1dc3
  $fShowRepoDB :: GHC.Show.Show DBHelper.RepoDB
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.RepoDB
                  DBHelper.$fShowRepoDB_$cshowsPrec
                  DBHelper.$fShowRepoDB_$cshow
                  DBHelper.$fShowRepoDB_$cshowList -}
903ed4c06ad24414748dabd9522f1dc3
  $fShowRepoDB1 :: DBHelper.RepoDB -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: DBHelper.RepoDB) (w1 :: GHC.Base.String) ->
                 case w of ww { DBHelper.RepoDB ww1 ww2 ->
                 DBHelper.$w$cshowsPrec1 0# ww1 ww2 w1 }) -}
f1f0fe18ce43026e05648d3c9f99d98a
  $fShowRepoDB2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "repolabel = "#) -}
7f8c4fb55bb142bd927a6e3087c03668
  $fShowRepoDB3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "repoId = "#) -}
ea5f55bbbdba3b169833bc7e97ef7e74
  $fShowRepoDB4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RepoDB {"#) -}
903ed4c06ad24414748dabd9522f1dc3
  $fShowRepoDB_$cshow :: DBHelper.RepoDB -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: DBHelper.RepoDB) ->
                 DBHelper.$fShowRepoDB_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
903ed4c06ad24414748dabd9522f1dc3
  $fShowRepoDB_$cshowList :: [DBHelper.RepoDB] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ DBHelper.RepoDB
                   DBHelper.$fShowRepoDB1) -}
903ed4c06ad24414748dabd9522f1dc3
  $fShowRepoDB_$cshowsPrec ::
    GHC.Types.Int -> DBHelper.RepoDB -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: DBHelper.RepoDB)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { DBHelper.RepoDB ww3 ww4 ->
                 DBHelper.$w$cshowsPrec1 ww1 ww3 ww4 w2 } }) -}
98b59f650ded8f031be00d95c8f3d2f8
  $fShowUserDB :: GHC.Show.Show DBHelper.UserDB
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.UserDB
                  DBHelper.$fShowUserDB_$cshowsPrec
                  DBHelper.$fShowUserDB_$cshow
                  DBHelper.$fShowUserDB_$cshowList -}
98b59f650ded8f031be00d95c8f3d2f8
  $fShowUserDB1 :: DBHelper.UserDB -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: DBHelper.UserDB) (w1 :: GHC.Base.String) ->
                 case w of ww { DBHelper.UserDB ww1 ww2 ->
                 DBHelper.$w$cshowsPrec2 0# ww1 ww2 w1 }) -}
d22a974d1bd0825f1c95389628802da9
  $fShowUserDB2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UserDB {"#) -}
67ed4ecc69f969e07cfb877741237850
  $fShowUserDB3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "userId = "#) -}
9b3ae24db231a4ada2c7984504261519
  $fShowUserDB4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "hops = "#) -}
98b59f650ded8f031be00d95c8f3d2f8
  $fShowUserDB_$cshow :: DBHelper.UserDB -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: DBHelper.UserDB) ->
                 DBHelper.$fShowUserDB_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
98b59f650ded8f031be00d95c8f3d2f8
  $fShowUserDB_$cshowList :: [DBHelper.UserDB] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ DBHelper.UserDB
                   DBHelper.$fShowUserDB1) -}
98b59f650ded8f031be00d95c8f3d2f8
  $fShowUserDB_$cshowsPrec ::
    GHC.Types.Int -> DBHelper.UserDB -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: DBHelper.UserDB)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { DBHelper.UserDB ww3 ww4 ->
                 DBHelper.$w$cshowsPrec2 ww1 ww3 ww4 w2 } }) -}
73bc766fd35c6d80660e0117d28d079c
  $fToJSONLinkDB :: Data.Aeson.Types.ToJSON.ToJSON DBHelper.LinkDB
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.LinkDB
                  DBHelper.$fToJSONLinkDB_$ctoJSON
                  DBHelper.$fToJSONLinkDB_$ctoEncoding
                  DBHelper.$fToJSONLinkDB_$ctoJSONList
                  DBHelper.$fToJSONLinkDB_$ctoEncodingList -}
73bc766fd35c6d80660e0117d28d079c
  $fToJSONLinkDB1 ::
    DBHelper.LinkDB
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U,U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: DBHelper.LinkDB) ->
                 case w of ww { DBHelper.LinkDB ww1 ww2 ww3 ->
                 case DBHelper.$w$ctoJSON ww1 ww2 ww3 of ww4 { Unit# ww5 ->
                 (Data.Aeson.Types.Internal.Object ww5)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
b83fcaa4c95a1f029dad1e22f6d2c60d
  $fToJSONLinkDB2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,A><L,A><S,1*U>m3, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case DBHelper.$w$dGToJSON @ a1 w2 of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.String ww1 }) -}
421281b3cec01b18a64e2ae15a965b35
  $fToJSONLinkDB3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4#) -}
67dd5760ad752303e1f2ecc3a83128bc
  $fToJSONLinkDB4 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1 GHC.Generics.R GHC.Types.Int a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><S(S),1*U(U)>m4,
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (_opts :: Data.Aeson.Types.Internal.Options)
                   (ds :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (eta :: GHC.Generics.K1 GHC.Generics.R GHC.Types.Int a1) ->
                 case eta
                        `cast`
                      (GHC.Generics.N:K1[0]
                           <GHC.Generics.R>_P
                           <GHC.Types.Int>_R
                           <a1>_P) of wild { GHC.Types.I# i ->
                 case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                 Data.Aeson.Types.Internal.Number
                   (Data.Scientific.Scientific dt 0#) } }) -}
73bc766fd35c6d80660e0117d28d079c
  $fToJSONLinkDB_$ctoEncoding ::
    DBHelper.LinkDB -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(U,U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: DBHelper.LinkDB) ->
                 Data.Aeson.Encoding.Internal.value
                   (DBHelper.$fToJSONLinkDB_$ctoJSON eta)) -}
73bc766fd35c6d80660e0117d28d079c
  $fToJSONLinkDB_$ctoEncodingList ::
    [DBHelper.LinkDB] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [DBHelper.LinkDB]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (DBHelper.$fToJSONLinkDB_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ DBHelper.LinkDB
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: DBHelper.LinkDB)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (DBHelper.$fToJSONLinkDB_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<DBHelper.LinkDB>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
73bc766fd35c6d80660e0117d28d079c
  $fToJSONLinkDB_$ctoJSON ::
    DBHelper.LinkDB -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U,U)>m1,
     Unfolding: InlineRule (0, True, True)
                DBHelper.$fToJSONLinkDB1
                  `cast`
                (<DBHelper.LinkDB>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
73bc766fd35c6d80660e0117d28d079c
  $fToJSONLinkDB_$ctoJSONList ::
    [DBHelper.LinkDB] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [DBHelper.LinkDB]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ DBHelper.LinkDB
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ DBHelper.LinkDB
                                       c
                                       DBHelper.$fToJSONLinkDB_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
1c34f4d5a3c5f6303ad656971c1be7d0
  $fToJSONLinkDB_w2 :: Data.Aeson.Types.Internal.Options
  {- Strictness: m,
     Unfolding: (Data.Aeson.Types.Internal.Options
                   (GHC.Base.id @ GHC.Base.String)
                   (GHC.Base.id @ GHC.Base.String)
                   GHC.Types.True
                   GHC.Types.False
                   Data.Aeson.Types.Internal.defaultTaggedObject
                   GHC.Types.False) -}
903ed4c06ad24414748dabd9522f1dc3
  $fToJSONRepoDB :: Data.Aeson.Types.ToJSON.ToJSON DBHelper.RepoDB
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.RepoDB
                  DBHelper.$fToJSONRepoDB_$ctoJSON
                  DBHelper.$fToJSONRepoDB_$ctoEncoding
                  DBHelper.$fToJSONRepoDB_$ctoJSONList
                  DBHelper.$fToJSONRepoDB_$ctoEncodingList -}
903ed4c06ad24414748dabd9522f1dc3
  $fToJSONRepoDB1 ::
    DBHelper.RepoDB
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: DBHelper.RepoDB) ->
                 case w of ww { DBHelper.RepoDB ww1 ww2 ->
                 case DBHelper.$w$ctoJSON1 ww1 ww2 of ww3 { Unit# ww4 ->
                 (Data.Aeson.Types.Internal.Object ww4)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
e52c09f80629c37879f07d485c8d47be
  $fToJSONRepoDB2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,A><L,A><S,1*U>m3, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case DBHelper.$w$dGToJSON1 @ a1 w2 of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.String ww1 }) -}
903ed4c06ad24414748dabd9522f1dc3
  $fToJSONRepoDB_$ctoEncoding ::
    DBHelper.RepoDB -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(U,U)>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: DBHelper.RepoDB) ->
                 Data.Aeson.Encoding.Internal.value
                   (DBHelper.$fToJSONRepoDB_$ctoJSON eta)) -}
903ed4c06ad24414748dabd9522f1dc3
  $fToJSONRepoDB_$ctoEncodingList ::
    [DBHelper.RepoDB] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [DBHelper.RepoDB]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (DBHelper.$fToJSONRepoDB_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ DBHelper.RepoDB
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: DBHelper.RepoDB)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (DBHelper.$fToJSONRepoDB_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<DBHelper.RepoDB>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
903ed4c06ad24414748dabd9522f1dc3
  $fToJSONRepoDB_$ctoJSON ::
    DBHelper.RepoDB -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U)>m1,
     Unfolding: InlineRule (0, True, True)
                DBHelper.$fToJSONRepoDB1
                  `cast`
                (<DBHelper.RepoDB>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
903ed4c06ad24414748dabd9522f1dc3
  $fToJSONRepoDB_$ctoJSONList ::
    [DBHelper.RepoDB] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [DBHelper.RepoDB]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ DBHelper.RepoDB
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ DBHelper.RepoDB
                                       c
                                       DBHelper.$fToJSONRepoDB_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
98b59f650ded8f031be00d95c8f3d2f8
  $fToJSONUserDB :: Data.Aeson.Types.ToJSON.ToJSON DBHelper.UserDB
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ DBHelper.UserDB
                  DBHelper.$fToJSONUserDB_$ctoJSON
                  DBHelper.$fToJSONUserDB_$ctoEncoding
                  DBHelper.$fToJSONUserDB_$ctoJSONList
                  DBHelper.$fToJSONUserDB_$ctoEncodingList -}
98b59f650ded8f031be00d95c8f3d2f8
  $fToJSONUserDB1 ::
    DBHelper.UserDB
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: DBHelper.UserDB) ->
                 case w of ww { DBHelper.UserDB ww1 ww2 ->
                 case DBHelper.$w$ctoJSON2 ww1 ww2 of ww3 { Unit# ww4 ->
                 (Data.Aeson.Types.Internal.Object ww4)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
a11b05eb6d185fa50de8031b7f2bb1b9
  $fToJSONUserDB2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.ToJSON.ToArgs
         Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1
    -> GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 3, Strictness: <L,A><L,A><S,1*U>m3, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.ToJSON.ToArgs
                            Data.Aeson.Types.Internal.Value Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case DBHelper.$w$dGToJSON2 @ a1 w2 of ww { Unit# ww1 ->
                 Data.Aeson.Types.Internal.String ww1 }) -}
98b59f650ded8f031be00d95c8f3d2f8
  $fToJSONUserDB_$ctoEncoding ::
    DBHelper.UserDB -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(U,U)>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: DBHelper.UserDB) ->
                 Data.Aeson.Encoding.Internal.value
                   (DBHelper.$fToJSONUserDB_$ctoJSON eta)) -}
98b59f650ded8f031be00d95c8f3d2f8
  $fToJSONUserDB_$ctoEncodingList ::
    [DBHelper.UserDB] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [DBHelper.UserDB]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (DBHelper.$fToJSONUserDB_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ DBHelper.UserDB
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: DBHelper.UserDB)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (DBHelper.$fToJSONUserDB_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<DBHelper.UserDB>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
98b59f650ded8f031be00d95c8f3d2f8
  $fToJSONUserDB_$ctoJSON ::
    DBHelper.UserDB -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(U,U)>m1,
     Unfolding: InlineRule (0, True, True)
                DBHelper.$fToJSONUserDB1
                  `cast`
                (<DBHelper.UserDB>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
98b59f650ded8f031be00d95c8f3d2f8
  $fToJSONUserDB_$ctoJSONList ::
    [DBHelper.UserDB] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [DBHelper.UserDB]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ DBHelper.UserDB
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ DBHelper.UserDB
                                       c
                                       DBHelper.$fToJSONUserDB_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
275a342e93ccdad1bbd60a10ac6ed996
  $sfromList ::
    [(Data.Text.Internal.Text, a)]
    -> Data.Map.Base.Map Data.Text.Internal.Text a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Data.Text.Internal.Text, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Base.Tip @ Data.Text.Internal.Text @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                           Data.Map.Base.Bin
                             @ Data.Text.Internal.Text
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a)
                             (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case ky of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild4 {
                             DEFAULT
                             -> DBHelper.$sfromList1
                                  @ a
                                  (Data.Map.Base.Bin
                                     @ Data.Text.Internal.Text
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a)
                                     (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a))
                                  wild2
                             GHC.Types.LT
                             -> DBHelper.$wpoly_go10
                                  @ a
                                  1#
                                  (Data.Map.Base.Bin
                                     @ Data.Text.Internal.Text
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a)
                                     (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a))
                                  wild2 } } } } } } }) -}
5b9fa1a01c97351a9a1182ff467e3e5f
  $sfromList1 ::
    Data.Map.Base.Map Data.Text.Internal.Text a1
    -> [(Data.Text.Internal.Text, a1)]
    -> Data.Map.Base.Map Data.Text.Internal.Text a1
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
53c333cf8cd65a61c5c5e63e8d47609f
  $tc'LinkDB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14331673118991036378##
                   1484925673792199454##
                   DBHelper.$trModule
                   DBHelper.$tc'LinkDB1) -}
2769ad126efd43ff8e2e80fe6a99cdd9
  $tc'LinkDB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LinkDB"#) -}
3692fc9cee41bd4895646fece612f11d
  $tc'RepoDB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   450814197055937540##
                   260894259693566789##
                   DBHelper.$trModule
                   DBHelper.$tc'RepoDB1) -}
763e3bf87354069be30157eed992736b
  $tc'RepoDB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'RepoDB"#) -}
2ee907acb56c171243acccd645b6f5c2
  $tc'UserDB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11375624236554016690##
                   3706446949122323539##
                   DBHelper.$trModule
                   DBHelper.$tc'UserDB1) -}
f1172b32e1754be88349ec2b5862849c
  $tc'UserDB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'UserDB"#) -}
99daf51b78b2392618f7530ce4bf0b2b
  $tcLinkDB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8567076593464081179##
                   6545060534543914777##
                   DBHelper.$trModule
                   DBHelper.$tcLinkDB1) -}
5c2cf01890a22d288bdbda37d5a60d89
  $tcLinkDB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "LinkDB"#) -}
f75cc457a3c154b592543118c73335ee
  $tcRepoDB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6215464176695970722##
                   15767602499559637887##
                   DBHelper.$trModule
                   DBHelper.$tcRepoDB1) -}
a1e62330430df628946b07761df102e1
  $tcRepoDB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "RepoDB"#) -}
d7a0b13adb2ee3f4f7325a7b7a5dc9b7
  $tcUserDB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10415495066223392651##
                   13195176413369731141##
                   DBHelper.$trModule
                   DBHelper.$tcUserDB1) -}
6d9751f5c7d0e325bf6c48922baff39c
  $tcUserDB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "UserDB"#) -}
a544e5e393a611d83fbdcd4bc4191a3d
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   DBHelper.$trModule2
                   DBHelper.$trModule1) -}
db8ac5ee91ba88b39810e837cb2c05f2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "DBHelper"#) -}
1cb9cdbf07b6919b616eb743d879f00b
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"#) -}
05bebe440d2a115139e1f2737f6ee2a3
  $w$c/= ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case GHC.Base.eqString ww1 ww3 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } }) -}
55dab1e757ba8e378d6e55b5de8f2b16
  $w$c/=1 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Base.String) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww2) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case GHC.Base.eqString ww1 ww3 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } }) -}
1573ddbe656182c6ab19e4e37827c6c3
  $w$c== ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,U><L,1*U><L,1*U><S,U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Base.String)
                   (ww5 :: GHC.Base.String) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww3) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Base.eqString ww1 ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True -> GHC.Base.eqString ww2 ww5 } }) -}
7cc9792e4741b212c6479e11302fcd49
  $w$c==1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True -> GHC.Base.eqString ww1 ww3 }) -}
108f4a0416aac62a7fdb6b846170d7bd
  $w$c==2 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,1*U><S,U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Base.String) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww2) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True -> GHC.Base.eqString ww1 ww3 }) -}
b0672e2532c5522096731176dec48b98
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U(U)><L,1*U><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       DBHelper.$fShowLinkDB7
                       (case ww1 of ww4 { GHC.Types.I# ww5 ->
                        case GHC.Show.$wshowSignedInt
                               0#
                               ww5
                               (GHC.Base.++
                                  @ GHC.Types.Char
                                  DBHelper.$fShowLinkDB6
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     DBHelper.$fShowLinkDB5
                                     (GHC.Types.:
                                        @ GHC.Types.Char
                                        GHC.Show.shows6
                                        (GHC.Show.showLitString
                                           ww2
                                           (GHC.Types.:
                                              @ GHC.Types.Char
                                              GHC.Show.shows6
                                              (GHC.Base.++
                                                 @ GHC.Types.Char
                                                 DBHelper.$fShowLinkDB6
                                                 (GHC.Base.++
                                                    @ GHC.Types.Char
                                                    DBHelper.$fShowLinkDB4
                                                    (GHC.Types.:
                                                       @ GHC.Types.Char
                                                       GHC.Show.shows6
                                                       (GHC.Show.showLitString
                                                          ww3
                                                          (GHC.Types.:
                                                             @ GHC.Types.Char
                                                             GHC.Show.shows6
                                                             (GHC.Base.++
                                                                @ GHC.Types.Char
                                                                DBHelper.$fShowLinkDB3
                                                                x))))))))))) of ww6 { (#,#) ww7 ww8 ->
                        GHC.Types.: @ GHC.Types.Char ww7 ww8 } })
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++ @ GHC.Types.Char DBHelper.$fShowLinkDB2 (g w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (GHC.Base.++
                           @ GHC.Types.Char
                           DBHelper.$fShowLinkDB2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w))) }) -}
7a383ddc107d0937d78650fc9620aa92
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       DBHelper.$fShowRepoDB4
                       (GHC.Base.++
                          @ GHC.Types.Char
                          DBHelper.$fShowRepoDB3
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows6
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows6
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      DBHelper.$fShowLinkDB6
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         DBHelper.$fShowRepoDB2
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows6
                                            (GHC.Show.showLitString
                                               ww2
                                               (GHC.Types.:
                                                  @ GHC.Types.Char
                                                  GHC.Show.shows6
                                                  (GHC.Base.++
                                                     @ GHC.Types.Char
                                                     DBHelper.$fShowLinkDB3
                                                     x))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w)) }) -}
4b323e4790cfede7fae022281e309791
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U(U)><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (ww2 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       DBHelper.$fShowUserDB4
                       (case ww1 of ww3 { GHC.Types.I# ww4 ->
                        case GHC.Show.$wshowSignedInt
                               0#
                               ww4
                               (GHC.Base.++
                                  @ GHC.Types.Char
                                  DBHelper.$fShowLinkDB6
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     DBHelper.$fShowUserDB3
                                     (GHC.Types.:
                                        @ GHC.Types.Char
                                        GHC.Show.shows6
                                        (GHC.Show.showLitString
                                           ww2
                                           (GHC.Types.:
                                              @ GHC.Types.Char
                                              GHC.Show.shows6
                                              (GHC.Base.++
                                                 @ GHC.Types.Char
                                                 DBHelper.$fShowLinkDB3
                                                 x)))))) of ww5 { (#,#) ww6 ww7 ->
                        GHC.Types.: @ GHC.Types.Char ww6 ww7 } })
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++ @ GHC.Types.Char DBHelper.$fShowUserDB2 (g w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (GHC.Base.++
                           @ GHC.Types.Char
                           DBHelper.$fShowUserDB2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w))) }) -}
145baea1d0fe53556f1cc26edfddbd06
  $w$ctoJSON ::
    GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Base.String
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Int)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                           @ ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "linkType")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                           @ Data.Aeson.Types.Generic.Zero
                           @ (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                           DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel2
                           DBHelper.$fToJSONLinkDB4
                             `cast`
                           (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                     <Data.Aeson.Types.Generic.Zero>_N
                                     <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_N))
                           @ GHC.Prim.Any
                           DBHelper.$fToJSONLinkDB_w2
                           (Data.Aeson.Types.ToJSON.$WNoToArgs
                              @ Data.Aeson.Types.Internal.Value
                              @ GHC.Prim.Any)
                           ww
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Types.Int>_R <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "linkType")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Types.Int>_R) <GHC.Prim.Any>_N))
                           (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                              @ ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "source")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                              @ Data.Aeson.Types.Generic.Zero
                              @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                              DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel1
                              DBHelper.$fToJSONLinkDB2
                                `cast`
                              (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                        <Data.Aeson.Types.Generic.Zero>_N
                                        <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                              @ GHC.Prim.Any
                              DBHelper.$fToJSONLinkDB_w2
                              (Data.Aeson.Types.ToJSON.$WNoToArgs
                                 @ Data.Aeson.Types.Internal.Value
                                 @ GHC.Prim.Any)
                              ww1
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <GHC.Base.String>_R
                                             <GHC.Prim.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "source")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                GHC.Base.String>_R) <GHC.Prim.Any>_N))
                              (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                                 @ ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "destination")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                 @ Data.Aeson.Types.Generic.Zero
                                 @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                 DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel
                                 DBHelper.$fToJSONLinkDB2
                                   `cast`
                                 (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                           <Data.Aeson.Types.Generic.Zero>_N
                                           <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                                 @ GHC.Prim.Any
                                 DBHelper.$fToJSONLinkDB_w2
                                 (Data.Aeson.Types.ToJSON.$WNoToArgs
                                    @ Data.Aeson.Types.Internal.Value
                                    @ GHC.Prim.Any)
                                 ww2
                                   `cast`
                                 (Trans
                                      (Sym (GHC.Generics.N:K1[0]
                                                <GHC.Generics.R>_P
                                                <GHC.Base.String>_R
                                                <GHC.Prim.Any>_P))
                                      (Sym (GHC.Generics.N:M1[0]
                                                <GHC.Generics.S>_P
                                                <'GHC.Generics.MetaSel
                                                   ('GHC.Base.Just "destination")
                                                   'GHC.Generics.NoSourceUnpackedness
                                                   'GHC.Generics.NoSourceStrictness
                                                   'GHC.Generics.DecidedLazy>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R
                                                   GHC.Base.String>_R) <GHC.Prim.Any>_N))
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (# dt1 #) }) -}
bf796eca272f85f6b421156fa5856869
  $w$ctoJSON1 ::
    GHC.Base.String
    -> GHC.Base.String -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String) (ww1 :: GHC.Base.String) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                           @ ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "repoId")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                           @ Data.Aeson.Types.Generic.Zero
                           @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                           DBHelper.$fFromJSONRepoDB_$s$fSelectorMetaMetaSel1
                           DBHelper.$fToJSONRepoDB2
                             `cast`
                           (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                     <Data.Aeson.Types.Generic.Zero>_N
                                     <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                           @ GHC.Prim.Any
                           DBHelper.$fToJSONLinkDB_w2
                           (Data.Aeson.Types.ToJSON.$WNoToArgs
                              @ Data.Aeson.Types.Internal.Value
                              @ GHC.Prim.Any)
                           ww
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "repoId")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Base.String>_R) <GHC.Prim.Any>_N))
                           (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                              @ ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "repolabel")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                              @ Data.Aeson.Types.Generic.Zero
                              @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                              DBHelper.$fFromJSONRepoDB_$s$fSelectorMetaMetaSel
                              DBHelper.$fToJSONRepoDB2
                                `cast`
                              (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                        <Data.Aeson.Types.Generic.Zero>_N
                                        <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                              @ GHC.Prim.Any
                              DBHelper.$fToJSONLinkDB_w2
                              (Data.Aeson.Types.ToJSON.$WNoToArgs
                                 @ Data.Aeson.Types.Internal.Value
                                 @ GHC.Prim.Any)
                              ww1
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <GHC.Base.String>_R
                                             <GHC.Prim.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "repolabel")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                GHC.Base.String>_R) <GHC.Prim.Any>_N))
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (# dt1 #) }) -}
48bf0ee7da96df802f6106ced3a8d477
  $w$ctoJSON2 ::
    GHC.Types.Int
    -> GHC.Base.String -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Int) (ww1 :: GHC.Base.String) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                           @ ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "hops")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                           @ Data.Aeson.Types.Generic.Zero
                           @ (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int)
                           DBHelper.$fFromJSONUserDB_$s$fSelectorMetaMetaSel1
                           DBHelper.$fToJSONLinkDB4
                             `cast`
                           (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                     <Data.Aeson.Types.Generic.Zero>_N
                                     <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_N))
                           @ GHC.Prim.Any
                           DBHelper.$fToJSONLinkDB_w2
                           (Data.Aeson.Types.ToJSON.$WNoToArgs
                              @ Data.Aeson.Types.Internal.Value
                              @ GHC.Prim.Any)
                           ww
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Types.Int>_R <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "hops")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Types.Int>_R) <GHC.Prim.Any>_N))
                           (Data.Aeson.Types.ToJSON.$fRecordToPairsarityM2
                              @ ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "userId")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                              @ Data.Aeson.Types.Generic.Zero
                              @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                              DBHelper.$fFromJSONUserDB_$s$fSelectorMetaMetaSel
                              DBHelper.$fToJSONUserDB2
                                `cast`
                              (Sym (Data.Aeson.Types.ToJSON.N:GToJSON[0]
                                        <Data.Aeson.Types.Generic.Zero>_N
                                        <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                              @ GHC.Prim.Any
                              DBHelper.$fToJSONLinkDB_w2
                              (Data.Aeson.Types.ToJSON.$WNoToArgs
                                 @ Data.Aeson.Types.Internal.Value
                                 @ GHC.Prim.Any)
                              ww1
                                `cast`
                              (Trans
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <GHC.Base.String>_R
                                             <GHC.Prim.Any>_P))
                                   (Sym (GHC.Generics.N:M1[0]
                                             <GHC.Generics.S>_P
                                             <'GHC.Generics.MetaSel
                                                ('GHC.Base.Just "userId")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy>_P
                                             <GHC.Generics.K1
                                                GHC.Generics.R
                                                GHC.Base.String>_R) <GHC.Prim.Any>_N))
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (# dt1 #) }) -}
9d43eb420610d14b7bf96bb8f6664c61
  $w$dGToJSON ::
    GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         DBHelper.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           DBHelper.$fToJSONLinkDB3
                           w `cast`
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P)
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt1 #) } }) -}
9343158846aa22546327a6d265986ba4
  $w$dGToJSON1 ::
    GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         DBHelper.$wouter1
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           DBHelper.$fToJSONLinkDB3
                           w `cast`
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P)
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt1 #) } }) -}
3ee0a027fdc578899608ce2ba3ca36ca
  $w$dGToJSON2 ::
    GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         DBHelper.$wouter2
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           DBHelper.$fToJSONLinkDB3
                           w `cast`
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P)
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt1 #) } }) -}
5aa925c823e43ae0d1f5b43e92462276
  $w$sgo10 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map Data.Text.Internal.Text a1
    -> Data.Map.Base.Map Data.Text.Internal.Text a1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
a4d85f9c735a8910dbcdfdf509679917
  $wouter ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
a5faf12d69a252c2e6a7ae8b93473c45
  $wouter1 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
b362f890d1c17a70ebc1656a79ae2695
  $wouter2 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
6db3fdd910d25f2bb152daf23750824c
  $wouter3 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
dd26f66983b01db262f4abaf9cdc288d
  $wpoly_go10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map Data.Text.Internal.Text a
    -> [(Data.Text.Internal.Text, a)]
    -> Data.Map.Base.Map Data.Text.Internal.Text a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
73bc766fd35c6d80660e0117d28d079c
  data LinkDB
    = LinkDB {linkType :: GHC.Types.Int,
              source :: GHC.Base.String,
              destination :: GHC.Base.String}
73bc766fd35c6d80660e0117d28d079c
  axiom Rep_LinkDB::
      GHC.Generics.Rep DBHelper.LinkDB
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "LinkDB"
               "DBHelper"
               "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "LinkDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "linkType")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Types.Int)
                GHC.Generics.:*: (GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "source")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "destination")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String))))
903ed4c06ad24414748dabd9522f1dc3
  axiom Rep_RepoDB::
      GHC.Generics.Rep DBHelper.RepoDB
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "RepoDB"
               "DBHelper"
               "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "RepoDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "repoId")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "repolabel")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)))
98b59f650ded8f031be00d95c8f3d2f8
  axiom Rep_UserDB::
      GHC.Generics.Rep DBHelper.UserDB
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "UserDB"
               "DBHelper"
               "crawler-0.1.0.0-68IgkCulecg9CYEjVSVWnJ"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "UserDB" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "hops")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Types.Int)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "userId")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)))
903ed4c06ad24414748dabd9522f1dc3
  data RepoDB
    = RepoDB {repoId :: GHC.Base.String, repolabel :: GHC.Base.String}
98b59f650ded8f031be00d95c8f3d2f8
  data UserDB
    = UserDB {hops :: GHC.Types.Int, userId :: GHC.Base.String}
4dc4856377069652a1f1b9e9cd74fffb
  addUser :: DBHelper.UserDB -> GHC.Types.IO GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U(A,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.addUser1
                  `cast`
                (<DBHelper.UserDB>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
4bc7057725bbd6811bd27ddca9961670
  addUser1 ::
    DBHelper.UserDB
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <L,1*U(A,1*U)><S,U>,
     Unfolding: (\ (newUser :: DBHelper.UserDB)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DBHelper.addUser5
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Connection.Type.Pipe>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ((Database.Bolt.Connection.queryP
                          @ GHC.Types.IO
                          Control.Monad.IO.Class.$fMonadIOIO
                          DBHelper.addUser4
                          (DBHelper.$sfromList
                             @ Database.Bolt.Value.Type.Value
                             (GHC.Types.:
                                @ (Data.Text.Internal.Text, Database.Bolt.Value.Type.Value)
                                (DBHelper.addUser3,
                                 Database.Bolt.Value.Type.T
                                   (case newUser of wild { DBHelper.UserDB ds ds2 ->
                                    case GHC.Magic.runRW#
                                           @ 'GHC.Types.PtrRepLifted
                                           @ Data.Text.Internal.Text
                                           (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                            case GHC.Prim.newByteArray#
                                                   @ GHC.Prim.RealWorld
                                                   8#
                                                   s1 of ds3 { (#,#) ipv2 ipv3 ->
                                            DBHelper.$wouter3
                                              (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv3)
                                              DBHelper.$fToJSONLinkDB3
                                              ds2
                                              0#
                                              ipv2 }) of ds3 { (#,#) ipv2 ipv3 ->
                                    ipv3 } }))
                                (GHC.Types.[]
                                   @ (Data.Text.Internal.Text, Database.Bolt.Value.Type.Value)))))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.Bolt.Connection.Type.Pipe>_R
                            <GHC.Types.IO>_R
                            <[Database.Bolt.Record.Record]>_N)
                         ipv1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv1 of wild { Database.Bolt.Connection.Type.Pipe ds3 ds4 ->
                 case ds3 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 case Network.Socket.$wclose
                        ww1
                        ww7
                        ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Show.showList__
                           @ (Data.Map.Base.Map
                                Data.Text.Internal.Text Database.Bolt.Value.Type.Value)
                           DBHelper.addUser2
                           ipv3
                           (GHC.Types.[] @ GHC.Types.Char))
                        GHC.Types.True
                        ipv4 of ds6 { (#,#) ipv6 ipv7 ->
                 (# ipv6,
                    GHC.Show.showList__
                      @ (Data.Map.Base.Map
                           Data.Text.Internal.Text Database.Bolt.Value.Type.Value)
                      DBHelper.addUser2
                      ipv3
                      (GHC.Types.[] @ GHC.Types.Char) #) } } } } } } }) -}
59d997522bd667a7d2f7c12ff6c419cf
  addUser2 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text Database.Bolt.Value.Type.Value
    -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w3 :: Data.Map.Base.Map
                            Data.Text.Internal.Text Database.Bolt.Value.Type.Value) ->
                 Data.Map.Base.$w$cshowsPrec
                   @ Data.Text.Internal.Text
                   @ Database.Bolt.Value.Type.Value
                   Data.Text.Show.$fShowText
                   Database.Bolt.Value.Type.$fShowValue
                   0#
                   w3) -}
faa9576dd041f5f5a82bd315d6a727e0
  addUser3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "id"#) -}
bae923b52ea45f8aae958d5fdf60260f
  addUser4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "CREATE (n:User {userId: {id}, hops: 7}) RETURN n"#) -}
aea9822d2fe3aca9d85b2873a45bfa23
  addUser5 :: GHC.Types.IO Database.Bolt.Connection.Type.Pipe
  {- Unfolding: (Database.Bolt.Connection.Pipe.connect
                   @ GHC.Types.IO
                   Control.Monad.IO.Class.$fMonadIOIO
                   DBHelper.addUser6) -}
0a70d380f56aa5ef45759dac1e534b56
  addUser6 :: Database.Bolt.Connection.Type.BoltCfg
  {- Unfolding: (Database.Bolt.Connection.Type.BoltCfg
                   Database.Bolt.Connection.Type.$fDefaultBoltCfg7
                   Database.Bolt.Connection.Type.$fDefaultBoltCfg6
                   Database.Bolt.Connection.Type.$fDefaultBoltCfg5
                   Database.Bolt.Connection.Type.$fDefaultBoltCfg4
                   Database.Bolt.Connection.Type.$fDefaultBoltCfg3
                   Database.Bolt.Connection.Type.$fDefaultBoltCfg2
                   Database.Bolt.Connection.Type.$fDefaultBoltCfg1
                   DBHelper.n4user
                   DBHelper.n4password) -}
f99fcd3b86d822459f84b244cfe0b834
  destination :: DBHelper.LinkDB -> GHC.Base.String
  RecSel Left DBHelper.LinkDB
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.LinkDB) ->
                 case ds of wild { DBHelper.LinkDB ds1 ds2 ds3 -> ds3 }) -}
8b3f17b0ac63c34bb974fd2cb714fc86
  hops :: DBHelper.UserDB -> GHC.Types.Int
  RecSel Left DBHelper.UserDB
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.UserDB) ->
                 case ds of wild { DBHelper.UserDB ds1 ds2 -> ds1 }) -}
f74f00a3fd08c9fdcc6337b61e9765f6
  linkType :: DBHelper.LinkDB -> GHC.Types.Int
  RecSel Left DBHelper.LinkDB
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.LinkDB) ->
                 case ds of wild { DBHelper.LinkDB ds1 ds2 ds3 -> ds1 }) -}
f1086674e355162403c8e4cb53490ca8
  n4password :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "neo4J"#) -}
051cd6bbf8bf235e10a64e1911d506c9
  n4user :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "neo4j"#) -}
71502876a30ca68aeaf72819ee7736a1
  repoId :: DBHelper.RepoDB -> GHC.Base.String
  RecSel Left DBHelper.RepoDB
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.RepoDB) ->
                 case ds of wild { DBHelper.RepoDB ds1 ds2 -> ds1 }) -}
af2c8fca846ce63af3b0c9fe33248ddf
  repolabel :: DBHelper.RepoDB -> GHC.Base.String
  RecSel Left DBHelper.RepoDB
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.RepoDB) ->
                 case ds of wild { DBHelper.RepoDB ds1 ds2 -> ds2 }) -}
6828d617b16faa8e10fca398c75c4916
  source :: DBHelper.LinkDB -> GHC.Base.String
  RecSel Left DBHelper.LinkDB
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.LinkDB) ->
                 case ds of wild { DBHelper.LinkDB ds1 ds2 ds3 -> ds2 }) -}
b7fdb7c9bda57d23f7d3659c2efad7c0
  testFunction :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.testFunction1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
d2c3b7dd872b28622b96b293b0a348ea
  testFunction' :: Data.Text.Internal.Text -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.testFunction'1
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
221917eea6dcee60ef7ddbeae89ec5b1
  testFunction'' :: Data.Text.Internal.Text -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                DBHelper.testFunction''1
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
40ee0410c7c76973b23f9886c87bd27d
  testFunction''1 ::
    Data.Text.Internal.Text
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (username :: Data.Text.Internal.Text)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case DBHelper.addUser5
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Connection.Type.Pipe>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ((Database.Bolt.Connection.queryP
                          @ GHC.Types.IO
                          Control.Monad.IO.Class.$fMonadIOIO
                          DBHelper.testFunction''3
                          (DBHelper.$sfromList
                             @ Database.Bolt.Value.Type.Value
                             (GHC.Types.:
                                @ (Data.Text.Internal.Text, Database.Bolt.Value.Type.Value)
                                (DBHelper.testFunction''2, Database.Bolt.Value.Type.T username)
                                (GHC.Types.[]
                                   @ (Data.Text.Internal.Text, Database.Bolt.Value.Type.Value)))))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.Bolt.Connection.Type.Pipe>_R
                            <GHC.Types.IO>_R
                            <[Database.Bolt.Record.Record]>_N)
                         ipv1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv1 of wild { Database.Bolt.Connection.Type.Pipe ds3 ds4 ->
                 case ds3 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 case Network.Socket.$wclose
                        ww1
                        ww7
                        ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (GHC.Show.showList__
                      @ (Data.Map.Base.Map
                           Data.Text.Internal.Text Database.Bolt.Value.Type.Value)
                      DBHelper.addUser2
                      ipv3
                      (GHC.Types.[] @ GHC.Types.Char))
                   GHC.Types.True
                   ipv4 } } } } } }) -}
014badd05775fecec4a0b1c79a911e7e
  testFunction''2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "name"#) -}
ca4b154628acdcd931774cc13850d0cf
  testFunction''3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "MATCH (n:User) WHERE n.name CONTAINS {name} RETURN n"#) -}
d4b897843e8b49b3ea9bba8874a0d997
  testFunction'1 ::
    Data.Text.Internal.Text
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U(U,U,U)><S,U> -}
a608aa3c0ddba7e9cbd66200463a5286
  testFunction1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Database.Bolt.Connection.Pipe.connect
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         DBHelper.addUser6)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.Bolt.Connection.Type.Pipe>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ((Database.Bolt.Connection.queryP
                          @ GHC.Types.IO
                          Control.Monad.IO.Class.$fMonadIOIO
                          DBHelper.testFunction2
                          (Data.Map.Base.Tip
                             @ Data.Text.Internal.Text
                             @ Database.Bolt.Value.Type.Value))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.Bolt.Connection.Type.Pipe>_R
                            <GHC.Types.IO>_R
                            <[Database.Bolt.Record.Record]>_N)
                         ipv1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv1 of wild { Database.Bolt.Connection.Type.Pipe ds3 ds4 ->
                 case ds3 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 case Network.Socket.$wclose
                        ww1
                        ww7
                        ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (GHC.Show.showList__
                      @ (Data.Map.Base.Map
                           Data.Text.Internal.Text Database.Bolt.Value.Type.Value)
                      DBHelper.addUser2
                      ipv3
                      (GHC.Types.[] @ GHC.Types.Char))
                   GHC.Types.True
                   ipv4 } } } } } }) -}
6be49e49afd4c9fe5dbb6bef0f203875
  testFunction2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "MATCH (n:User) WHERE n.name CONTAINS \"Bob\" RETURN n"#) -}
c2aaae49ced955dc645b39776d0b4b08
  userId :: DBHelper.UserDB -> GHC.Base.String
  RecSel Left DBHelper.UserDB
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: DBHelper.UserDB) ->
                 case ds of wild { DBHelper.UserDB ds1 ds2 -> ds2 }) -}
instance GHC.Classes.Eq [DBHelper.LinkDB] = DBHelper.$fEqLinkDB
instance GHC.Classes.Eq [DBHelper.RepoDB] = DBHelper.$fEqRepoDB
instance GHC.Classes.Eq [DBHelper.UserDB] = DBHelper.$fEqUserDB
instance Data.Aeson.Types.FromJSON.FromJSON [DBHelper.LinkDB]
  = DBHelper.$fFromJSONLinkDB
instance Data.Aeson.Types.FromJSON.FromJSON [DBHelper.RepoDB]
  = DBHelper.$fFromJSONRepoDB
instance Data.Aeson.Types.FromJSON.FromJSON [DBHelper.UserDB]
  = DBHelper.$fFromJSONUserDB
instance GHC.Generics.Generic [DBHelper.LinkDB]
  = DBHelper.$fGenericLinkDB
instance GHC.Generics.Generic [DBHelper.RepoDB]
  = DBHelper.$fGenericRepoDB
instance GHC.Generics.Generic [DBHelper.UserDB]
  = DBHelper.$fGenericUserDB
instance GHC.Show.Show [DBHelper.LinkDB] = DBHelper.$fShowLinkDB
instance GHC.Show.Show [DBHelper.RepoDB] = DBHelper.$fShowRepoDB
instance GHC.Show.Show [DBHelper.UserDB] = DBHelper.$fShowUserDB
instance Data.Aeson.Types.ToJSON.ToJSON [DBHelper.LinkDB]
  = DBHelper.$fToJSONLinkDB
instance Data.Aeson.Types.ToJSON.ToJSON [DBHelper.RepoDB]
  = DBHelper.$fToJSONRepoDB
instance Data.Aeson.Types.ToJSON.ToJSON [DBHelper.UserDB]
  = DBHelper.$fToJSONUserDB
family instance GHC.Generics.Rep [DBHelper.LinkDB]
  = DBHelper.Rep_LinkDB
family instance GHC.Generics.Rep [DBHelper.RepoDB]
  = DBHelper.Rep_RepoDB
family instance GHC.Generics.Rep [DBHelper.UserDB]
  = DBHelper.Rep_UserDB
"SPEC/DBHelper $fFromJSON[] @ Char" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                     GHC.Types.Char)
  Data.Aeson.Types.FromJSON.$fFromJSON[] @ GHC.Types.Char $dFromJSON
  = DBHelper.$fFromJSONLinkDB_$s$fFromJSON[]
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "destination") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                   'GHC.Generics.DecidedLazy)
                                                                                                                                                                                    ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                   'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                    ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                   'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                    ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                  ('GHC.Base.Just
                                                                                                                                                                                                     "destination"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "destination")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "hops") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
                                                                                                                                                                             ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                             ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                             ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                           ('GHC.Base.Just
                                                                                                                                                                                              "hops"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "hops")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONUserDB_$s$fSelectorMetaMetaSel1
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "linkType") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                                                                                 ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                 ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                 ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                                  "linkType"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "linkType")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel2
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "repoId") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                               ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                "repoId"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "repoId")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONRepoDB_$s$fSelectorMetaMetaSel1
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "repolabel") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                 'GHC.Generics.DecidedLazy)
                                                                                                                                                                                  ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                 'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                  ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                 'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                  ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                ('GHC.Base.Just
                                                                                                                                                                                                   "repolabel"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "repolabel")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONRepoDB_$s$fSelectorMetaMetaSel
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "source") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                               ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                "source"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "source")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel1
"SPEC/DBHelper $fSelectorMetaMetaSel @ ('Just
                                         "userId") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.DecidedLazy)
                                                                                                                                                                               ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                               ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                              'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                               ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                             ('GHC.Base.Just
                                                                                                                                                                                                "userId"))
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "userId")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = DBHelper.$fFromJSONUserDB_$s$fSelectorMetaMetaSel
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "destination") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                       'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                        ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                       'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                        ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                       'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                        ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                      ('GHC.Base.Just
                                                                                                                                                                                                                         "destination"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "destination")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "hops") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                 ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                 ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                 ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                                                  "hops"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "hops")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONUserDB_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "linkType") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                    'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                     ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                    'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                     ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                    'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                     ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                   ('GHC.Base.Just
                                                                                                                                                                                                                      "linkType"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "linkType")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName2
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "repoId") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                   ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                   ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                   ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                 ('GHC.Base.Just
                                                                                                                                                                                                                    "repoId"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "repoId")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONRepoDB_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "repolabel") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                     'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                      ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                     'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                      ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                     'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                      ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                    ('GHC.Base.Just
                                                                                                                                                                                                                       "repolabel"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "repolabel")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONRepoDB_$s$fSelectorMetaMetaSel_$cselName
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "source") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                   ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                   ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                   ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                 ('GHC.Base.Just
                                                                                                                                                                                                                    "source"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "source")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONLinkDB_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/DBHelper $fSelectorMetaMetaSel_$cselName @ ('Just
                                                   "userId") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.DecidedLazy)
                                                                                                                                                                                                   ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                   ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                  'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                   ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                 ('GHC.Base.Just
                                                                                                                                                                                                                    "userId"))
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "userId")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = DBHelper.$fFromJSONUserDB_$s$fSelectorMetaMetaSel_$cselName
"SPEC/DBHelper fromList @ Text _" [ALWAYS] forall @ a
                                                  ($dOrd :: GHC.Classes.Ord Data.Text.Internal.Text)
  Data.Map.Base.fromList @ Data.Text.Internal.Text @ a $dOrd
  = DBHelper.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

