
==================== FINAL INTERFACE ====================
2017-03-27 15:07:39.0751025 UTC

interface crawler-0.1.0.0-56JZBgNCq73H8nAI1znk6P:GithubHelper 8002
  interface hash: de17a0972442a9da8b469d44a6185204
  ABI hash: b33edc642b3057278bf8455f2853a4b7
  export-list hash: cdfa172a72d6a25157592b6c37cc3c47
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b40c1800ca63765d1285c272fed17bef
  sig of: Nothing
  used TH splices: False
  where
exports:
  GithubHelper.crawlRepo
  GithubHelper.crawlUser
  GithubHelper.formatNumber
  GithubHelper.formatRepoDB
  GithubHelper.formatUserDB
  GithubHelper.reposOf
  GithubHelper.usersOf
module dependencies: DBHelper
package dependencies: StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      Win32-2.3.1.1@Win32-2.3.1.1
                      adjunctions-4.3@adjunctions-4.3-5CqTSM7liCdC9cb4N2IolK
                      aeson-1.0.2.1@aeson-1.0.2.1-9NPC6B17ifJ9yEOgZnhnOr
                      aeson-compat-0.3.6@aeson-compat-0.3.6-DRjIwC5krJu9u9rnIKQp5z
                      array-0.5.1.1@array-0.5.1.1
                      asn1-encoding-0.9.5@asn1-encoding-0.9.5-1IMV0r3llgQDzU84Uk591U
                      asn1-parse-0.9.4@asn1-parse-0.9.4-EHRz1Xq8a4dF4PJ8Z7oiGa
                      asn1-types-0.3.2@asn1-types-0.3.2-FQKctSftl78KYWxzNfX0xI
                      async-2.1.1@async-2.1.1-4n6HEMPJR2eJK0JpvCfuPK
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-HCAgpBrKCLJ5li8FbfXxE1
                      base-4.9.1.0
                      base-compat-0.9.1@base-compat-0.9.1-LCsIPF9jlXlGhbEFi39hJ1
                      base-orphans-0.5.4@base-orphans-0.5.4-ABoxiBf7nXc7Qqh66CgYc9
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN
                      binary-0.8.3.0@binary-0.8.3.0
                      binary-orphans-0.1.6.0@binary-orphans-0.1.6.0-AEGrLkiQ40GALQmMnUjvXa
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-CGB8BvrFgghHy5bLy0SFOg
                      byteable-0.1.1@byteable-0.1.1-2lU1pexQSLj1KbNO17UifQ
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.8@case-insensitive-1.2.0.8-JH9TmxTHpl01TJ0h86Xqcf
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      comonad-5@comonad-5-ETWy8l913C0Kq2HEAZg6Cb
                      connection-0.2.7@connection-0.2.7-LXgvu3xxYNR2RIlgoKpmch
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-ETyVlWBlFwj93UDOdH22No
                      cookie-0.4.2.1@cookie-0.4.2.1-K68NuFIZ07nEstxwB6c3aL
                      cryptonite-0.21@cryptonite-0.21-LMyh7LfEdeGD0uZFvplqS
                      data-binary-ieee754-0.4.4@data-binary-ieee754-0.4.4-7iiF2mP1jcB6tVSPgIyBOi
                      data-default-0.7.1.1@data-default-0.7.1.1-7EGYJX2YWqWJRbPFUHNoCr
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-FKnZBeovJMk4M89wQxDhjl
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      deepseq-generics-0.2.0.0@deepseq-generics-0.2.0.0-IjS8Jfo7YCzLKpV8N96gbz
                      directory-1.3.0.0@directory-1.3.0.0
                      distributive-0.5.2@distributive-0.5.2-JCgfTXNR3ywAyV7fFWIBI5
                      dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD
                      errors-2.1.3@errors-2.1.3-JC5aKrhjo2b91TTnOwOwbR
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      filepath-1.4.1.1@filepath-1.4.1.1
                      free-4.12.4@free-4.12.4-Ab5EFvlPq2CHsY4aRoQQaZ
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB
                      hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa
                      hashable-1.2.5.0@hashable-1.2.5.0-F4MWeNuv2sjJRqBd2T5ul4
                      hourglass-0.2.10@hourglass-0.2.10-ILGOyD7m7Ux4hWsSIqCzOU
                      http-client-0.5.6.1@http-client-0.5.6.1-ItY4pSsSiSGELsEHL2lKAl
                      http-client-tls-0.3.4@http-client-tls-0.3.4-EOs3bzraLGeEd5jusGkPbW
                      http-link-header-1.0.3@http-link-header-1.0.3-FqZr2itiLAxB5xrMqYg1NW
                      http-types-0.9.1@http-types-0.9.1-5F2YjZNOfOTCho80klHZFM
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      iso8601-time-0.1.4@iso8601-time-0.1.4-9lDzEEPfRpPG6qGtL0QIn7
                      kan-extensions-5.0.1@kan-extensions-5.0.1-11Ov83x9jJMC3tpuqa2lhG
                      keys-3.11@keys-3.11-za9JAsabkEBPgaXAtSgQE
                      memory-0.14.1@memory-0.14.1-J8LClTQE9ts1CQQG3Fd7ul
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      network-2.6.3.1@network-2.6.3.1-AwRxOQvT8JM9e8zDFK7aCI
                      network-simple-0.4.0.5@network-simple-0.4.0.5-lpFi9TIFmuDEctWkWAYkx
                      network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF
                      old-locale-1.0.0.7@old-locale-1.0.0.7-KGBP1BSKxH5GCm0LnZP04j
                      parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw
                      pem-0.2.2@pem-0.2.2-CkEwei5500yF2642aAaOAi
                      pointed-5@pointed-5-7tuUwQiquxA1yGUSpwspSC
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-BhL9U5k7NtGJn1itwIHt2Y
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      profunctors-5.2@profunctors-5.2-LrJGukLpH0xCNgg3bhdC7E
                      scientific-0.3.4.10@scientific-0.3.4.10-HRQd1hS6vMV6hvjSlMi8B0
                      semigroupoids-5.1@semigroupoids-5.1-Bv4gPJlZIgxJuJyrAzyy1i
                      socks-0.5.5@socks-0.5.5-LTLtgt3xp4R6T9CoeQQ5pI
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      streaming-commons-0.1.17@streaming-commons-0.1.17-68TIrPMbDcW6Be9IWoxgJG
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      tls-1.3.9@tls-1.3.9-8O5QpWQctXl2SLQ5fIt9fS
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unexceptionalio-0.3.0@unexceptionalio-0.3.0-2pCLthhElB6B0sx66UGiue
                      unordered-containers-0.2.7.2@unordered-containers-0.2.7.2-8AmrySQXjRGF6VciYs51fM
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
                      vector-binary-instances-0.2.3.4@vector-binary-instances-0.2.3.4-GEQ5cJ7WTvpAIAPAZ4qW7x
                      vector-instances-3.4@vector-instances-3.4-CGg1XDXpv1C6JpP4BUHsFM
                      x509-1.6.5@x509-1.6.5-1KetG4N5xqsKfHhR0GYJ5V
                      x509-store-1.6.2@x509-store-1.6.2-IVO53Gla5dC7M4ffDiaPAn
                      x509-system-1.6.4@x509-system-1.6.4-LeLpo7kxYCTEQilF4yr1rL
                      x509-validation-1.6.5@x509-validation-1.6.5-D68hQW1ZAhUEzDThq9ONPN
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-HCAgpBrKCLJ5li8FbfXxE1:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-HCAgpBrKCLJ5li8FbfXxE1:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         binary-orphans-0.1.6.0@binary-orphans-0.1.6.0-AEGrLkiQ40GALQmMnUjvXa:Data.Binary.Orphans
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-FKnZBeovJMk4M89wQxDhjl:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l:Data.Default.Instances.OldLocale
         hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt.Connection.Instances
         hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt.Value.Instances
         hasbolt-0.1.1.1@hasbolt-0.1.1.1-KvGT2iOIRLp44tD9hkaloa:Database.Bolt.Value.Structure
         hashable-1.2.5.0@hashable-1.2.5.0-F4MWeNuv2sjJRqBd2T5ul4:Data.Hashable.Generic
         http-client-0.5.6.1@http-client-0.5.6.1-ItY4pSsSiSGELsEHL2lKAl:Network.HTTP.Client.Request
         network-2.6.3.1@network-2.6.3.1-AwRxOQvT8JM9e8zDFK7aCI:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
         vector-binary-instances-0.2.3.4@vector-binary-instances-0.2.3.4-GEQ5cJ7WTvpAIAPAZ4qW7x:Data.Vector.Binary
         vector-instances-3.4@vector-instances-3.4-CGg1XDXpv1C6JpP4BUHsFM:Data.Vector.Instances
family instance modules: adjunctions-4.3@adjunctions-4.3-5CqTSM7liCdC9cb4N2IolK:Data.Functor.Rep
                         attoparsec-0.13.1.0@attoparsec-0.13.1.0-HCAgpBrKCLJ5li8FbfXxE1:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Biff
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Clown
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Flip
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Join
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Joker
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Product
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Sum
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Tannen
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Wrapped
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         crawler-0.1.0.0-56JZBgNCq73H8nAI1znk6P:DBHelper
                         dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD:Data.DList
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Auth
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Activities
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Comments
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Content
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Definitions
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.DeployKeys
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Events
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Gists
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.GitData
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Id
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Issues
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Milestone
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Name
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Options
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.PullRequests
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Repos
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Request
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Search
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Teams
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.URL
                         github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Webhooks
                         http-client-0.5.6.1@http-client-0.5.6.1-ItY4pSsSiSGELsEHL2lKAl:Network.HTTP.Client
                         kan-extensions-5.0.1@kan-extensions-5.0.1-11Ov83x9jJMC3tpuqa2lhG:Data.Functor.Day
                         keys-3.11@keys-3.11-za9JAsabkEBPgaXAtSgQE:Data.Key
                         network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF:Network.URI
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.7.2@unordered-containers-0.2.7.2-8AmrySQXjRGF6VciYs51fM:Data.HashMap.Base
                         unordered-containers-0.2.7.2@unordered-containers-0.2.7.2-8AmrySQXjRGF6VciYs51fM:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
                         vector-instances-3.4@vector-instances-3.4-CGg1XDXpv1C6JpP4BUHsFM:Data.Vector.Instances
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-9NPC6B17ifJ9yEOgZnhnOr:Data.Aeson 6cfe60f124a4417e608c67dfe15be1cc
import  -/  base-4.9.1.0:Control.Monad.IO.Class 3f1875e753ac8c44dae64dc062ea742e
import  -/  base-4.9.1.0:Data.Either 186ef9adf6b47e24f39efe9b2e18e352
import  -/  base-4.9.1.0:Data.Foldable 254e836c2d813d34e47feb29bb8d40ed
import  -/  base-4.9.1.0:Data.Maybe ecf0c6f81372d9b58b142d5e758ea51b
import  -/  base-4.9.1.0:Data.Traversable 078621b399ac9374b02f3f2ce55a08e9
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Enum 3beb5abd88e2173130728ffba8194381
import  -/  base-4.9.1.0:GHC.Generics 87e8d511f978e043d53db008cc403901
import  -/  base-4.9.1.0:GHC.Num 38b8aac8807c096c7f3ca3c1eff02939
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  base-4.9.1.0:System.IO 5daf3f384209c11d9566e3409af8ec5d
import  -/  DBHelper bfe261523a48ac33f10e2e9a6ae75980
  exports: dbd9464b5d3e36805e3a63d44638d2bc
  RepoDB 8e401c74ffcb2f098f7a85223e0402ef
  RepoDB 30107d81e22c18a98c905013ec5a3c7e
  UserDB fc43c28340db622023669095dde69413
  UserDB 7cc38e69edcc7d4e1a516cb0d2fecc37
  addLink 46a0d0df09b23597930a6c936be96ca3
  addRepo eccb48a53cb50b3ef71445c64bc14d1a
  addUser 03193c5661567ed7a9e6a9ee8d07b3f0
  contributesTo 9db46ca8973b6919a97cc683dd8c22d2
  makeLink 74d7b4618626681902886a12f312f1c2
  makeLink2 7b5ccf7555d11cabd608945b717cf58a
  owns 0a0828e6a54707290abed339914aff4a
  repoName c5f2949a1d58980ed0e2eab8583b498c
  repoOwner aa1db1eff4104d00e1222f6525f8ec75
  userId cd5dc2b0af4c60e1836aa385cd9d900c
  userRepo ec31905bb5a2745d365a4e08449c8e7c
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub 44602a47955be288246df9ee89f6243f
import  -/  github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data deb9a4eed5844d3e567ea39d6310cdd7
import  -/  github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Definitions 1c999f1b69149346490f31d5a81e7e17
import  -/  github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Name 235c068508900c5756aec519e62b8380
import  -/  github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Data.Repos e4684fcc67872517437feef773d1595c
import  -/  github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Endpoints.Repos 938a109a2f5b18828aa95a9fdb8413e2
import  -/  github-0.15.0@github-0.15.0-4xrLmRvOvcILQ4PSubpbiB:GitHub.Endpoints.Repos.Collaborators f638e80a08dd412fcf0b54abb8fc8559
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 5e60b761569ee353529e98a36b72df11
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text 35f976519564888082d42815342d42ed
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Internal 43a9166170aaf8c9b180c2d3ce2cfa3c
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show 638a81be9b7b5c261b714430eaada4e0
import  -/  vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector 41057de5dda7a4fc866a712aa88b5c4e
9f2362fd8500a240dbedfb97e98039b0
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   GithubHelper.$trModule2
                   GithubHelper.$trModule1) -}
6c25bc77d01121571fa61d84928e5c26
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "GithubHelper"#) -}
3b2d06e4b0f9475ed6704d17e7e2b4f9
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "crawler-0.1.0.0-56JZBgNCq73H8nAI1znk6P"#) -}
e649e9c34a770f1c2726a9cd586fd17f
  crawlRepo ::
    GHC.Integer.Type.Integer -> DBHelper.RepoDB -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,U(U,U,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                GithubHelper.crawlRepo1
                  `cast`
                (<GHC.Integer.Type.Integer>_R
                 ->_R <DBHelper.RepoDB>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
d788ea32f2057fa654b00995e2ce3cc6
  crawlRepo1 ::
    GHC.Integer.Type.Integer
    -> DBHelper.RepoDB
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U(U,U,A)><S,U>,
     Unfolding: (\ (ttl :: GHC.Integer.Type.Integer)
                   (repo :: DBHelper.RepoDB)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GithubHelper.crawlRepo8 repo s of ds1 { (#,#) ipv ipv1 ->
                 case GithubHelper.crawlRepo7 ipv1 ipv of ds2 { (#,#) ipv2 ipv3 ->
                 let {
                   lvl4 :: GHC.Base.String
                   = case repo of wild { DBHelper.RepoDB ds ds3 ds4 -> ds }
                 } in
                 letrec {
                   go2 :: [DBHelper.UserDB]
                          -> GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, [DBHelper.LinkDB] #)
                     {- Arity: 2, Strictness: <S,1*U><S,U> -}
                   = \ (ds :: [DBHelper.UserDB])
                       (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     case ds of wild {
                       [] -> (# eta, GHC.Types.[] @ DBHelper.LinkDB #)
                       : y ys
                       -> case go2 ys eta of ds3 { (#,#) ipv4 ipv5 ->
                          (# ipv4,
                             GHC.Types.:
                               @ DBHelper.LinkDB
                               (DBHelper.LinkDB
                                  DBHelper.userRepo
                                  DBHelper.contributesTo
                                  (case y of wild1 { DBHelper.UserDB ds4 -> ds4 })
                                  lvl4)
                               ipv5 #) } }
                 } in
                 case go2 ipv1 ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GithubHelper.crawlRepo6 ipv5 ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.Integer.Type.gtInteger#
                        ttl
                        GithubHelper.crawlRepo5 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False
                   -> GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        GithubHelper.crawlRepo4
                        GHC.Types.True
                        ipv6
                   GHC.Types.True
                   -> let {
                        f :: GHC.Integer.Type.Integer
                        = GHC.Integer.Type.minusInteger ttl GithubHelper.crawlRepo3
                      } in
                      letrec {
                        go3 :: [DBHelper.UserDB]
                               -> GHC.Prim.State# GHC.Prim.RealWorld
                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                          {- Arity: 2, Strictness: <S,1*U><S,U> -}
                        = \ (ds :: [DBHelper.UserDB])
                            (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case ds of wild2 {
                            [] -> (# eta, GHC.Tuple.() #)
                            : y ys
                            -> case GithubHelper.crawlRepo2 f y eta of ds5 { (#,#) ipv8 ipv9 ->
                               go3 ys ipv8 } }
                      } in
                      go3 ipv1 ipv6 } } } } } }) -}
506b702344421ad50fd4f065b6c4ca67
  crawlRepo2 ::
    GHC.Integer.Type.Integer
    -> DBHelper.UserDB
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U(U)><S,U> -}
efc4d6a97d96cffa10218dc1f5353e97
  crawlRepo3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
aee387ce22365d5b3f0b012567c7313a
  crawlRepo4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ended on "#) -}
6962761420606089e9016093c1f42751
  crawlRepo5 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
8d37ac87dae77ca1d74222c093f8047c
  crawlRepo6 ::
    [DBHelper.LinkDB]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Base.String] #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
d2e545fc7898c4e5a132e9a0cfd61293
  crawlRepo7 ::
    [DBHelper.UserDB]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Base.String] #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
eacbbab12c8efb94792e7813dbffb489
  crawlRepo8 ::
    DBHelper.RepoDB
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [DBHelper.UserDB] #)
  {- Arity: 2, Strictness: <L,U(1*U,1*U,A)><S,U> -}
ed657f46c567ad082bef84f419463edd
  crawlUser ::
    GHC.Integer.Type.Integer -> DBHelper.UserDB -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                GithubHelper.crawlRepo2
                  `cast`
                (<GHC.Integer.Type.Integer>_R
                 ->_R <DBHelper.UserDB>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
609f4603b2e31931b3bf856dcf526001
  formatNumber ::
    GHC.Base.Maybe GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                GithubHelper.formatNumber1
                  `cast`
                (<GHC.Base.Maybe GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Int>_R)) -}
540c4c5d2a18da939860433ba03ebf72
  formatNumber1 ::
    GHC.Base.Maybe GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (n :: GHC.Base.Maybe GHC.Types.Int)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    case n of wild {
                      GHC.Base.Nothing -> GithubHelper.formatNumber2
                      GHC.Base.Just v -> v } #)) -}
6eda81943236b46b8e8b4f4556402b5c
  formatNumber2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
4cee80167a82b0b723d0e9c4e079a854
  formatRepoDB ::
    GitHub.Data.Repos.Repo -> GHC.Types.IO DBHelper.RepoDB
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,U,A,A,U(A,U(U,U,U),A,A,A),U(U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                GithubHelper.formatRepoDB1
                  `cast`
                (<GitHub.Data.Repos.Repo>_R
                 ->_R Sym (GHC.Types.N:IO[0] <DBHelper.RepoDB>_R)) -}
1434f87042e0bfb0f54222b82577638e
  formatRepoDB1 ::
    GitHub.Data.Repos.Repo
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, DBHelper.RepoDB #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,A,A,A,A,A,U,A,A,U(A,U(U,U,U),A,A,A),U(U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,A)><S,U>,
     Unfolding: (\ (repo :: GitHub.Data.Repos.Repo)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta,
                    DBHelper.RepoDB
                      (case repo of wild { GitHub.Data.Repos.Repo ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 dt ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 dt1 ->
                       case ds16
                              `cast`
                            (GitHub.Data.Name.N:Name[0]
                                 <GitHub.Data.Repos.Repo>_P) of wild1 { Data.Text.Internal.Text dt2 dt3 dt4 ->
                       let {
                         end :: GHC.Prim.Int# = GHC.Prim.+# dt3 dt4
                       } in
                       letrec {
                         $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                           {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                         = \ (ww :: GHC.Prim.Int#) ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=# ww end) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.indexWord16Array# dt2 ww of r# { DEFAULT ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.geWord# r# 55296##) of wild3 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ GHC.Types.Char
                                       (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                       ($wunfold (GHC.Prim.+# ww 1#))
                                  GHC.Types.True
                                  -> case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.leWord# r# 56319##) of wild4 {
                                       GHC.Types.False
                                       -> GHC.Types.:
                                            @ GHC.Types.Char
                                            (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                            ($wunfold (GHC.Prim.+# ww 1#))
                                       GHC.Types.True
                                       -> case GHC.Prim.indexWord16Array#
                                                 dt2
                                                 (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                          GHC.Types.:
                                            @ GHC.Types.Char
                                            (GHC.Types.C#
                                               (GHC.Prim.chr#
                                                  (GHC.Prim.+#
                                                     (GHC.Prim.+#
                                                        (GHC.Prim.uncheckedIShiftL#
                                                           (GHC.Prim.-#
                                                              (GHC.Prim.word2Int# r#)
                                                              55296#)
                                                           10#)
                                                        (GHC.Prim.-#
                                                           (GHC.Prim.word2Int# r#1)
                                                           56320#))
                                                     65536#)))
                                            ($wunfold (GHC.Prim.+# ww 2#)) } } } }
                             GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                       } in
                       $wunfold dt3 } })
                      (case repo of wild { GitHub.Data.Repos.Repo ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 dt ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 dt1 ->
                       case ds15 of wild1 { GitHub.Data.Definitions.SimpleOwner dt2 ds29 ds30 ds31 ds32 ->
                       case ds29
                              `cast`
                            (GitHub.Data.Name.N:Name[0]
                                 <GitHub.Data.Definitions.Owner>_P) of wild2 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                       let {
                         end :: GHC.Prim.Int# = GHC.Prim.+# dt4 dt5
                       } in
                       letrec {
                         $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                           {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                         = \ (ww :: GHC.Prim.Int#) ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=# ww end) of wild3 {
                             GHC.Types.False
                             -> case GHC.Prim.indexWord16Array# dt3 ww of r# { DEFAULT ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.geWord# r# 55296##) of wild4 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ GHC.Types.Char
                                       (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                       ($wunfold (GHC.Prim.+# ww 1#))
                                  GHC.Types.True
                                  -> case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.leWord# r# 56319##) of wild5 {
                                       GHC.Types.False
                                       -> GHC.Types.:
                                            @ GHC.Types.Char
                                            (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                            ($wunfold (GHC.Prim.+# ww 1#))
                                       GHC.Types.True
                                       -> case GHC.Prim.indexWord16Array#
                                                 dt3
                                                 (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                          GHC.Types.:
                                            @ GHC.Types.Char
                                            (GHC.Types.C#
                                               (GHC.Prim.chr#
                                                  (GHC.Prim.+#
                                                     (GHC.Prim.+#
                                                        (GHC.Prim.uncheckedIShiftL#
                                                           (GHC.Prim.-#
                                                              (GHC.Prim.word2Int# r#)
                                                              55296#)
                                                           10#)
                                                        (GHC.Prim.-#
                                                           (GHC.Prim.word2Int# r#1)
                                                           56320#))
                                                     65536#)))
                                            ($wunfold (GHC.Prim.+# ww 2#)) } } } }
                             GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                       } in
                       $wunfold dt4 } } })
                      (case repo of wild { GitHub.Data.Repos.Repo ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 dt ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 dt1 ->
                       case ds12 of wild1 {
                         GHC.Base.Nothing -> GithubHelper.formatNumber2
                         GHC.Base.Just v -> v } }) #)) -}
2d16542cce3ec3ccfe3936b34317d0b9
  formatUserDB ::
    GitHub.Data.Definitions.SimpleUser -> GHC.Types.IO DBHelper.UserDB
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,1*U(A,U(U,U,U),A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                GithubHelper.formatUserDB1
                  `cast`
                (<GitHub.Data.Definitions.SimpleUser>_R
                 ->_R Sym (GHC.Types.N:IO[0] <DBHelper.UserDB>_R)) -}
c88cd2f26b6dc5798030a1e7e27044cf
  formatUserDB1 ::
    GitHub.Data.Definitions.SimpleUser
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, DBHelper.UserDB #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,1*U(A,U(U,U,U),A,A)><S,U>,
     Unfolding: (\ (user :: GitHub.Data.Definitions.SimpleUser)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta,
                    DBHelper.UserDB
                      (case user of wild { GitHub.Data.Definitions.SimpleUser dt ds1 ds2 ds3 ->
                       case ds1
                              `cast`
                            (GitHub.Data.Name.N:Name[0]
                                 <GitHub.Data.Definitions.User>_P) of wild1 { Data.Text.Internal.Text dt1 dt2 dt3 ->
                       let {
                         end :: GHC.Prim.Int# = GHC.Prim.+# dt2 dt3
                       } in
                       letrec {
                         $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                           {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                         = \ (ww :: GHC.Prim.Int#) ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=# ww end) of wild2 {
                             GHC.Types.False
                             -> case GHC.Prim.indexWord16Array# dt1 ww of r# { DEFAULT ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.geWord# r# 55296##) of wild3 {
                                  GHC.Types.False
                                  -> GHC.Types.:
                                       @ GHC.Types.Char
                                       (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                       ($wunfold (GHC.Prim.+# ww 1#))
                                  GHC.Types.True
                                  -> case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.leWord# r# 56319##) of wild4 {
                                       GHC.Types.False
                                       -> GHC.Types.:
                                            @ GHC.Types.Char
                                            (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                            ($wunfold (GHC.Prim.+# ww 1#))
                                       GHC.Types.True
                                       -> case GHC.Prim.indexWord16Array#
                                                 dt1
                                                 (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                          GHC.Types.:
                                            @ GHC.Types.Char
                                            (GHC.Types.C#
                                               (GHC.Prim.chr#
                                                  (GHC.Prim.+#
                                                     (GHC.Prim.+#
                                                        (GHC.Prim.uncheckedIShiftL#
                                                           (GHC.Prim.-#
                                                              (GHC.Prim.word2Int# r#)
                                                              55296#)
                                                           10#)
                                                        (GHC.Prim.-#
                                                           (GHC.Prim.word2Int# r#1)
                                                           56320#))
                                                     65536#)))
                                            ($wunfold (GHC.Prim.+# ww 2#)) } } } }
                             GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                       } in
                       $wunfold dt2 } }) #)) -}
d7309c6552fddc084dac14ea026e734a
  reposOf ::
    Data.Text.Internal.Text -> GHC.Types.IO [DBHelper.RepoDB]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                GithubHelper.reposOf1
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[DBHelper.RepoDB]>_R)) -}
7432324b7cfb6ee6ab88d4b00d765cb2
  reposOf1 ::
    Data.Text.Internal.Text
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [DBHelper.RepoDB] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (userName :: Data.Text.Internal.Text)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GitHub.Request.executeRequest'1
                        @ (Data.Vector.Vector GitHub.Data.Repos.Repo)
                        (GitHub.Data.Request.SimpleQuery
                           @ 'GitHub.Data.Request.RO
                           @ (Data.Vector.Vector GitHub.Data.Repos.Repo)
                           GitHub.Endpoints.Repos.currentUserRepos_$dFromJSON1
                           (GitHub.Data.Request.PagedQuery
                              @ 'GitHub.Data.Request.RO
                              @ (Data.Vector.Vector GitHub.Data.Repos.Repo)
                              @ GitHub.Data.Repos.Repo
                              @~ <Data.Vector.Vector GitHub.Data.Repos.Repo>_N
                              (GHC.Types.:
                                 @ Data.Text.Internal.Text
                                 GitHub.Endpoints.Repos.userRepos2
                                 (GHC.Types.:
                                    @ Data.Text.Internal.Text
                                    userName
                                    GitHub.Endpoints.Repos.createRepoR2))
                              GitHub.Endpoints.Repos.currentUserRepos22
                              GitHub.Data.Request.FetchAll))
                        s of ds1 { (#,#) ipv ipv1 ->
                 GithubHelper.reposOf2 ipv1 ipv }) -}
ff57a0064dcd8f0eb647b826cc0b940f
  reposOf2 ::
    Data.Either.Either
      GitHub.Data.Definitions.Error
      (Data.Vector.Vector GitHub.Data.Repos.Repo)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [DBHelper.RepoDB] #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (possibleRepos :: Data.Either.Either
                                       GitHub.Data.Definitions.Error
                                       (Data.Vector.Vector GitHub.Data.Repos.Repo))
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case possibleRepos of wild {
                   Data.Either.Left error -> (# eta, GHC.Types.[] @ DBHelper.RepoDB #)
                   Data.Either.Right repos
                   -> case repos of v2 { Data.Vector.Vector ipv ipv1 ipv2 ->
                      case GHC.Prim.newArray#
                             @ DBHelper.RepoDB
                             @ (Control.Monad.Primitive.PrimState GHC.Types.IO)
                             ipv1
                             (Data.Vector.Mutable.uninitialised @ DBHelper.RepoDB)
                             eta
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds1 { (#,#) ipv3 ipv4 ->
                      letrec {
                        $wfoldlM'_loop :: GHC.Types.SPEC
                                          -> GHC.Prim.Int#
                                          -> GHC.Prim.Int#
                                          -> GHC.Prim.State# GHC.Prim.RealWorld
                                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                          {- Arity: 4, Strictness: <S,1*U><L,U><S,U><S,U>, Inline: [0] -}
                        = \ (w :: GHC.Types.SPEC)
                            (ww :: GHC.Prim.Int#)
                            (ww1 :: GHC.Prim.Int#)
                            (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case w of ds5 { DEFAULT ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# ww1 ipv1) of wild1 {
                            GHC.Types.False
                            -> case GHC.Prim.indexArray#
                                      @ GitHub.Data.Repos.Repo
                                      ipv2
                                      (GHC.Prim.+# ipv ww1) of ds2 { Unit# ipv5 ->
                               case GithubHelper.formatRepoDB1 ipv5 w1 of ds4 { (#,#) ipv6 ipv7 ->
                               case GHC.Prim.writeArray#
                                      @ (Control.Monad.Primitive.PrimState GHC.Types.IO)
                                      @ DBHelper.RepoDB
                                      ipv4
                                      ww
                                      ipv7
                                      ipv6
                                        `cast`
                                      (GHC.Prim.State#
                                         (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of s'# { DEFAULT ->
                               $wfoldlM'_loop
                                 GHC.Types.SPEC
                                 (GHC.Prim.+# ww 1#)
                                 (GHC.Prim.+# ww1 1#)
                                 s'#
                                   `cast`
                                 (GHC.Prim.State#
                                    (Control.Monad.Primitive.D:R:PrimStateIO[0]))_R } } }
                            GHC.Types.True -> (# w1, GHC.Types.I# ww #) } }
                      } in
                      case $wfoldlM'_loop
                             GHC.Types.SPEC
                             0#
                             0#
                             ipv3
                               `cast`
                             (GHC.Prim.State#
                                (Control.Monad.Primitive.D:R:PrimStateIO[0]))_R of ds2 { (#,#) ipv5 ipv6 ->
                      case ipv6 of dt5 { GHC.Types.I# dt6 ->
                      case GHC.Prim.unsafeFreezeArray#
                             @ (Control.Monad.Primitive.PrimState GHC.Types.IO)
                             @ DBHelper.RepoDB
                             ipv4
                             ipv5
                               `cast`
                             (GHC.Prim.State#
                                (Sym (Control.Monad.Primitive.D:R:PrimStateIO[0])))_R of ds3 { (#,#) ipv7 ipv8 ->
                      (# ipv7
                           `cast`
                         (GHC.Prim.State# (Control.Monad.Primitive.D:R:PrimStateIO[0]))_R,
                         letrec {
                           $wgo :: GHC.Prim.Int# -> [DBHelper.RepoDB]
                             {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                           = \ (ww :: GHC.Prim.Int#) ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# ww dt6) of wild1 {
                               GHC.Types.False
                               -> case GHC.Prim.indexArray#
                                         @ DBHelper.RepoDB
                                         ipv8
                                         ww of ds4 { Unit# ipv9 ->
                                  GHC.Types.: @ DBHelper.RepoDB ipv9 ($wgo (GHC.Prim.+# ww 1#)) }
                               GHC.Types.True -> GHC.Types.[] @ DBHelper.RepoDB }
                         } in
                         $wgo 0# #) } } } } } }) -}
1d530aaf716e68419f266ba60cb1fe91
  usersOf :: DBHelper.RepoDB -> GHC.Types.IO [DBHelper.UserDB]
  {- Arity: 2, Strictness: <L,U(1*U,1*U,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                GithubHelper.crawlRepo8
                  `cast`
                (<DBHelper.RepoDB>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[DBHelper.UserDB]>_R)) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

